var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.052,1,0.5]],["body/components/AppComponent.html",[0,0.082,1,0.913,2,0.783,3,0.347,4,0.287,5,0.97,6,0.97,7,0.97,8,0.97,9,0.287,10,2.997,11,0.521,12,1.19,13,4.63,14,0.701,15,0.804,16,2.549,17,0.554,18,1.673,19,0.603,20,4.63,21,1.062,22,0.991,23,4.63,24,2.549,25,0.97,26,0.873,27,1.31,28,1.008,29,2.87,30,2.052,31,5.092,32,2.052,33,4.63,34,0.476,35,0.789,36,5.092,37,5.092,38,0.606,39,4.63,40,5.359,41,1.327,42,0.666,43,0.666,44,3.641,45,0.606,46,1.513,47,0.848,48,3.812,49,2.044,50,2.95,51,0.476,52,0.04,53,0.476,54,0.573,55,0.476,56,2.281,57,0.695,58,0.476,59,0.476,60,0.783,61,0.996,62,0.996,63,1.234,64,4.63,65,3.641,66,0.701,67,2.549,68,4.63,69,2.87,70,0.978,71,3.812,72,3.641,73,4.63,74,4.63,75,0.347,76,0.287,77,0.347,78,0.175,79,0.606,80,0.476,81,0.476,82,3.641,83,3.641,84,0.97,85,1.234,86,1.234,87,0.97,88,1.428,89,0.97,90,0.97,91,1.11,92,0.97,93,0.699,94,0.97,95,0.699,96,0.97,97,0.62,98,0.97,99,0.97,100,0.476,101,0.97,102,0.62,103,1.531,104,1.531,105,0.62,106,0.62,107,0.62,108,0.62,109,0.62,110,0.62,111,0.62,112,0.97,113,0.699,114,0.97,115,0.62,116,0.97,117,0.97,118,0.97,119,0.024,120,0.024,121,0.024,122,0.024,123,0.024,124,0.024]],["title/modules/AppModule.html",[125,1.616,126,1.819]],["body/modules/AppModule.html",[1,0.993,2,0.655,3,0.29,4,0.24,9,0.24,17,0.29,28,0.519,52,0.041,56,2.029,75,0.592,76,0.24,77,0.29,78,0.146,93,1.034,95,1.034,97,0.917,100,0.704,102,0.954,105,0.954,106,0.954,107,0.954,108,0.954,109,0.954,110,0.954,111,0.917,113,1.034,115,0.917,119,0.02,120,0.02,121,0.02,122,0.02,123,0.02,124,0.02,125,1.676,126,3.835,127,1.888,128,2.153,129,2.507,130,3.391,131,2.911,132,3.391,133,2.153,134,2.507,135,2.507,136,2.507,137,2.507,138,2.507,139,2.963,140,2.963,141,2.507,142,2.507,143,2.507,144,3.045,145,2.507,146,3.045,147,4.999,148,4.116,149,4.999,150,4.999,151,4.116,152,3.045,153,3.045,154,3.045,155,4.118,156,3.391,157,2.507,158,3.391,159,4.118,160,4.118,161,1.676,162,3.045,163,3.045,164,4.118,165,3.045,166,3.045,167,4.118,168,3.045,169,3.045,170,4.118,171,3.045,172,4.118,173,3.045,174,4.666,175,3.045,176,4.118,177,3.045,178,2.553,179,4.118,180,4.118,181,1.888,182,4.118,183,4.118,184,1.676,185,3.045,186,2.153,187,3.045,188,4.118,189,2.507,190,2.507,191,4.118,192,3.045,193,4.118,194,3.045,195,4.118,196,3.045,197,3.045,198,3.045,199,1.101,200,1.101,201,0.995,202,5.503,203,2.752,204,1.733,205,1.625,206,3.89,207,4.118,208,3.045,209,2.153,210,4.118,211,3.045,212,3.045,213,4.118,214,3.045,215,4.118,216,3.045,217,3.045,218,5.383,219,3.045,220,3.045,221,3.391,222,4.118,223,2.153,224,2.153,225,4.118,226,1.888,227,1.676,228,3.045,229,2.153,230,1.488,231,3.842,232,1.346,233,3.842,234,4.116,235,3.045,236,3.045,237,2.711,238,2.553,239,2.911,240,4.118,241,3.045,242,3.045,243,4.118,244,3.045,245,2.267,246,2.507,247,2.507,248,2.507,249,3.045,250,4.118,251,4.118,252,3.045,253,0.73,254,3.045]],["title/modules/AppRoutingModule.html",[125,1.616,139,1.616]],["body/modules/AppRoutingModule.html",[3,0.446,4,0.369,9,0.369,52,0.04,75,0.514,76,0.369,77,0.446,78,0.225,119,0.03,120,0.03,121,0.03,122,0.03,123,0.03,124,0.03,127,2.899,133,3.306,139,2.967,158,4.437,248,3.85,255,4.676,256,4.676,257,4.674,258,5.389,259,3.85,260,2.899,261,4.676]],["title/interceptors/AuthInterceptor.html",[140,1.616,229,2.075]],["body/interceptors/AuthInterceptor.html",[3,0.329,4,0.272,9,0.272,11,0.559,14,0.73,15,0.837,16,2.465,17,0.566,18,1.618,19,0.592,22,0.763,34,0.452,35,0.763,38,0.586,41,1.191,42,0.687,43,0.687,45,0.687,46,1.717,47,0.863,51,0.586,52,0.041,53,0.586,54,0.639,55,0.586,57,0.788,58,0.586,59,0.586,66,0.586,67,2.465,70,1.071,75,0.473,76,0.272,77,0.329,78,0.166,79,0.452,80,0.586,81,0.65,119,0.022,120,0.022,121,0.022,122,0.022,123,0.032,124,0.022,140,2.465,161,1.902,253,1.074,262,3.455,263,4.482,264,2.844,265,5.255,266,3.942,267,5.577,268,2.589,269,4.477,270,2.775,271,4.477,272,4.477,273,1.618,274,4.477,275,4.477,276,1.322,277,4.967,278,4.477,279,1.323,280,4.477,281,1.779,282,4.477,283,5.577,284,5.255,285,5.907,286,5.255,287,3.455,288,4.477,289,5.444,290,3.079,291,4.477,292,4.477,293,4.477,294,4.477,295,3.455,296,4.477,297,4.967,298,1.074,299,1.463,300,4.477,301,4.477,302,1.902,303,4.477,304,3.455,305,3.455,306,2.442,307,1.79,308,0.743,309,4.967,310,0.672,311,3.455,312,4.477,313,3.455,314,3.455,315,1.79,316,3.455,317,3.455,318,2.844,319,0.788,320,3.455,321,0.743,322,3.455,323,3.455,324,4.477,325,3.455,326,1.249,327,3.455,328,3.455,329,3.455,330,3.455,331,3.455,332,3.165,333,3.455,334,3.455,335,1.531,336,3.455]],["title/classes/EmailErrorStateMatcher.html",[78,0.141,337,1.616]],["body/classes/EmailErrorStateMatcher.html",[0,0.073,3,0.287,4,0.238,9,0.238,11,0.461,12,0.88,14,0.681,15,0.453,17,0.567,18,1.479,19,0.523,22,0.887,27,0.649,28,0.514,30,1.337,32,1.337,34,0.395,38,0.535,42,0.395,43,0.681,45,0.681,46,0.986,47,0.747,50,2.955,51,0.395,52,0.041,53,0.395,54,0.34,55,0.395,57,0.805,58,0.395,59,0.395,60,0.999,61,0.999,62,0.649,66,0.681,69,2.879,75,0.496,76,0.238,77,0.442,78,0.223,79,0.681,80,0.651,81,0.702,100,0.395,119,0.02,120,0.02,121,0.02,122,0.02,123,0.03,124,0.02,178,3.087,181,1.87,184,1.661,226,1.87,227,1.661,260,2.537,273,2.069,276,0.891,279,1.09,281,1.337,298,1.114,308,0.999,310,0.747,315,2.081,319,0.614,321,0.88,335,1.337,337,2.741,338,2.132,339,1.87,340,3.948,341,4.083,342,3.283,343,3.679,344,3.283,345,2.879,346,3.794,347,3.283,348,0.892,349,3.283,350,1.114,351,3.369,352,3.794,353,4.083,354,4.115,355,4.083,356,3.881,357,3.881,358,3.017,359,4.083,360,4.046,361,2.433,362,3.283,363,1.237,364,1.327,365,3.283,366,2.556,367,3.087,368,2.016,369,2.537,370,2.132,371,3.283,372,2.307,373,1.87,374,3.52,375,2.892,376,2.892,377,2.892,378,2.892,379,2.879,380,2.556,381,1.661,382,1.661,383,0.649,384,1.661,385,1.337,386,1.337,387,1.337,388,2.132,389,2.132,390,2.132,391,0.804,392,1.87,393,2.892,394,2.132,395,2.892,396,2.132,397,2.132,398,2.892,399,2.132,400,2.132,401,0.804,402,2.892,403,0.804,404,0.986,405,2.132,406,1.486,407,2.016,408,1.486,409,2.132,410,0.723,411,2.132,412,2.892,413,2.132,414,2.132,415,1.486,416,2.132,417,2.132,418,2.132,419,2.132,420,2.132,421,2.132,422,2.132,423,2.132]],["title/components/InitialViewComponent.html",[0,0.052,97,0.5]],["body/components/InitialViewComponent.html",[0,0.068,1,0.464,2,0.586,3,0.26,4,0.215,5,0.726,6,0.726,7,0.726,8,0.726,9,0.215,11,0.496,12,1.08,14,0.713,17,0.519,19,0.429,21,0.523,22,0.956,24,2.1,25,0.726,26,0.653,27,1.268,28,0.956,30,1.69,32,1.69,34,0.356,35,0.65,38,0.499,42,0.734,43,0.734,45,0.713,48,3.14,51,0.576,52,0.041,53,0.657,54,0.586,55,0.576,58,0.624,59,0.624,60,1.119,61,0.586,62,0.586,63,0.726,66,0.713,70,1.077,75,0.419,76,0.301,77,0.26,78,0.131,79,0.657,80,0.624,81,0.576,84,0.726,85,1.016,86,1.016,87,0.726,88,1.27,89,0.726,90,0.726,91,0.915,92,0.726,93,0.523,94,0.726,95,0.523,96,0.726,97,0.812,98,1.525,99,0.726,100,0.356,101,0.726,102,0.464,103,1.423,104,1.423,105,0.464,106,0.464,107,0.464,108,0.464,109,0.464,110,0.464,111,0.464,112,0.726,113,0.523,114,0.726,115,0.464,116,0.726,117,0.726,118,0.726,119,0.018,120,0.018,121,0.018,122,0.018,123,0.036,124,0.018,125,2.423,186,4.009,230,1.591,232,1.438,253,1.204,276,1.408,281,1.438,298,0.653,308,0.586,310,0.715,315,1.089,319,0.572,321,0.82,332,3.548,335,1.69,345,2.365,348,0.732,350,0.653,363,1.495,367,3.112,368,2.169,369,2.365,372,2.305,373,1.689,383,0.82,387,2.113,392,2.729,401,1.016,406,1.879,407,2.563,408,1.879,410,0.915,424,4.669,425,2.243,426,4.768,427,3.814,428,3.814,429,3.814,430,3.14,431,1.907,432,4.401,433,3.814,434,5.02,435,4.401,436,3.814,437,3.814,438,4.619,439,3.14,440,2.243,441,3.814,442,2.724,443,3.814,444,3.814,445,3.814,446,4.401,447,2.724,448,1.907,449,3.814,450,1.907,451,5.538,452,4.768,453,2.724,454,3.814,455,2.864,456,3.814,457,3.814,458,3.814,459,1.76,460,2.724,461,3.814,462,3.14,463,2.724,464,5.202,465,2.724,466,2.724,467,2.724,468,1.342,469,2.724,470,2.724,471,2.724,472,2.724,473,2.243,474,2.724,475,2.724,476,2.724,477,2.724,478,2.724,479,2.724,480,2.724,481,3.14,482,3.14,483,3.814,484,3.814,485,2.365,486,2.724,487,1.814,488,2.724,489,4.132,490,2.724,491,3.814,492,3.814,493,4.401,494,3.814,495,3.814,496,2.724,497,2.724,498,3.926,499,3.926,500,3.814,501,1.558,502,3.624,503,3.926,504,3.926,505,3.814,506,2.724,507,4.401,508,3.814,509,3.814,510,4.401,511,2.724,512,2.724,513,2.724,514,2.724,515,2.724,516,3.14,517,2.724,518,2.243,519,2.243,520,2.724,521,2.724,522,2.724,523,3.814,524,2.724,525,2.724,526,2.724,527,2.724,528,2.724]],["title/components/LoginComponent.html",[0,0.052,100,0.384]],["body/components/LoginComponent.html",[0,0.066,1,0.445,2,0.561,3,0.249,4,0.206,5,0.695,6,0.695,7,0.695,8,0.695,9,0.206,11,0.417,12,1.062,14,0.671,15,0.555,17,0.574,18,1.691,19,0.527,21,0.501,22,0.874,25,0.695,26,0.626,27,1.261,28,0.947,30,1.64,32,1.64,34,0.341,35,0.631,38,0.484,42,0.705,43,0.743,45,0.671,46,1.209,47,0.809,50,3.175,51,0.341,52,0.041,53,0.341,54,0.417,55,0.341,57,0.702,58,0.484,59,0.484,60,1.062,61,1.104,62,1.062,63,1.247,66,0.727,69,2.294,75,0.471,76,0.206,77,0.41,78,0.207,79,0.646,80,0.612,81,0.671,84,0.695,85,0.986,86,0.986,87,0.695,88,1.247,89,0.695,90,0.695,91,0.887,92,0.695,93,0.501,94,0.695,95,0.501,96,0.695,97,0.445,98,0.695,99,0.695,100,0.612,101,0.695,102,0.445,103,1.406,104,1.406,105,0.445,106,0.445,107,0.445,108,0.445,109,0.445,110,0.445,111,0.445,112,0.695,113,0.501,114,0.695,115,0.445,116,0.695,117,0.695,118,0.695,119,0.017,120,0.017,121,0.017,122,0.017,123,0.032,124,0.017,178,2.666,181,1.618,184,1.437,226,1.618,227,1.437,260,2.294,273,1.948,276,1.093,279,0.986,281,1.529,298,0.887,308,0.925,310,0.702,315,2.193,319,0.555,321,0.796,335,1.64,337,2.575,339,1.618,340,3.811,341,3.93,342,2.616,343,3.811,344,2.616,345,2.294,346,3.307,347,2.616,348,0.711,349,2.616,350,1.185,352,3.307,353,3.976,354,3.811,355,3.811,356,3.492,357,3.492,359,3.93,360,3.93,361,2.274,362,2.616,363,0.986,364,1.436,365,2.616,366,2.037,367,3.062,368,2.118,369,2.294,370,1.845,371,3.492,372,2.389,373,1.618,374,3.307,375,2.616,376,2.616,377,2.616,378,2.616,379,2.9,380,2.575,381,2.037,382,2.037,383,0.796,384,2.037,385,1.64,386,1.64,387,1.64,388,2.616,389,3.039,390,2.616,391,0.986,392,2.666,393,3.307,394,3.039,395,3.307,396,2.616,397,3.039,398,3.307,399,3.039,400,3.039,401,0.986,402,3.307,403,0.986,404,1.209,405,2.616,406,1.823,407,2.528,408,1.823,409,2.616,410,0.887,411,1.845,412,2.616,413,1.845,414,1.845,415,1.286,416,1.845,417,1.845,418,1.845,419,1.845,420,1.845,421,1.845,422,1.845,423,1.845,439,3.047,440,2.149,481,3.047,529,3.701,530,2.61,531,2.61,532,2.61,533,2.61,534,2.61,535,2.61,536,4.679,537,3.701,538,3.852,539,3.701,540,3.701]],["title/injectables/LoginService.html",[307,1.174,372,1.301]],["body/injectables/LoginService.html",[3,0.345,4,0.285,9,0.285,11,0.572,14,0.738,15,0.847,16,2.538,17,0.57,18,2.099,19,0.636,21,1.026,29,2.242,34,0.473,35,0.786,38,0.603,42,0.699,43,0.76,45,0.699,46,1.747,47,0.887,49,1.932,50,3.108,51,0.603,52,0.041,53,0.603,54,0.407,55,0.603,57,0.802,58,0.603,59,0.603,66,0.603,67,2.538,70,0.975,75,0.509,76,0.285,77,0.345,78,0.174,79,0.473,80,0.603,81,0.664,119,0.023,120,0.023,121,0.023,122,0.023,123,0.023,124,0.023,161,1.991,232,1.507,253,1.106,268,2.272,270,2.858,273,1.932,281,1.659,290,3.423,302,1.991,306,2.557,307,1.844,310,0.692,318,3.796,319,0.692,361,2.044,372,2.044,379,3.147,385,2.044,386,2.044,401,1.424,438,4.782,455,2.538,462,4.401,468,1.782,485,2.858,538,3.796,541,2.242,542,2.978,543,3.259,544,3.259,545,1.362,546,3.588,547,4.611,548,2.557,549,3.779,550,4.611,551,3.779,552,3.259,553,3.259,554,3.617,555,3.617,556,4.611,557,5.076,558,3.779,559,3.617,560,3.259,561,3.259,562,3.259,563,1.229,564,3.259,565,3.259,566,2.557,567,2.557,568,2.557,569,2.557,570,2.557,571,2.557,572,2.858,573,3.617,574,3.617]],["title/components/MatApprovedPickerRenderComponent.html",[0,0.052,102,0.5]],["body/components/MatApprovedPickerRenderComponent.html",[0,0.059,1,0.382,2,0.482,3,0.214,4,0.177,5,0.883,6,1.051,7,0.597,8,0.597,9,0.177,11,0.524,12,1.227,14,0.746,15,0.874,17,0.54,19,0.373,21,0.43,22,0.915,25,0.597,26,0.946,27,1.234,28,0.881,34,0.293,35,0.565,38,0.433,41,0.795,42,0.735,43,0.735,45,0.735,47,0.891,49,1.575,51,0.57,52,0.041,53,0.57,54,0.646,55,0.57,56,1.943,57,0.792,58,0.659,59,0.659,60,1.155,61,1.083,62,0.848,63,1.051,66,0.735,70,0.43,75,0.376,76,0.177,77,0.214,78,0.108,79,0.659,80,0.676,81,0.608,84,0.597,85,0.883,86,0.883,87,0.597,88,1.161,89,0.597,90,0.597,91,0.795,92,0.597,93,0.43,94,0.597,95,0.43,96,0.597,97,0.382,98,0.597,99,0.597,100,0.293,101,0.597,102,0.742,103,1.52,104,1.342,105,0.382,106,0.382,107,0.382,108,0.382,109,0.382,110,0.382,111,0.382,112,0.597,113,0.43,114,0.597,115,0.382,116,0.597,117,0.597,118,0.597,119,0.014,120,0.014,121,0.014,122,0.014,123,0.014,124,0.014,199,0.81,200,0.81,201,0.732,204,1.776,205,1.673,230,1.425,232,0.732,239,4.235,253,0.537,276,0.979,279,1.452,298,0.795,299,1.424,308,0.482,310,0.756,319,0.592,321,0.848,326,1.68,348,0.636,350,0.537,363,1.161,364,0.883,383,0.713,391,1.161,403,0.883,404,1.083,410,1.167,431,1.325,448,1.325,450,1.325,459,1.742,487,1.425,501,1.289,545,1.437,563,1.342,575,2.265,576,0.896,577,1.469,578,1.325,579,1.469,580,1.469,581,1.748,582,1.469,583,1.748,584,1.748,585,1.748,586,1.577,587,1.748,588,2.061,589,1.947,590,1.931,591,2.445,592,2.171,593,1.469,594,1.469,595,2.157,596,2.157,597,2.061,598,1.469,599,1.469,600,1.931,601,1.845,602,2.491,603,1.742,604,1.931,605,1.82,606,1.425,607,2.232,608,1.931,609,2.491,610,2.241,611,1.931,612,1.575,613,1.575,614,1.845,615,1.469,616,1.584,617,2.241,618,2.054,619,1.931,620,1.845,621,1.469,622,1.469,623,1.198,624,1.469,625,1.742,626,1.931,627,1.845,628,1.469,629,1.469,630,1.469,631,1.469,632,1.469,633,2.241,634,1.941,635,1.469,636,1.742,637,2.241,638,1.469,639,0.993,640,0.993,641,1.469,642,2.241,643,1.469,644,1.931,645,2.241,646,1.469,647,1.469,648,2.241,649,2.241,650,3.314,651,3.314,652,2.241,653,1.824,654,0.993,655,1.325,656,1.584,657,0.993,658,1.104,659,0.896,660,1.104,661,1.104,662,1.104,663,1.104,664,1.104,665,1.104,666,0.993,667,0.993,668,0.993,669,1.389,670,1.104,671,1.748,672,0.993,673,0.993,674,0.993,675,0.993,676,1.469,677,0.993,678,0.993,679,0.993,680,0.993,681,0.993,682,1.931,683,0.993,684,1.325,685,0.993,686,0.993,687,1.325,688,0.993,689,0.993,690,1.469,691,0.993,692,0.993,693,0.993,694,0.993,695,0.993,696,0.993,697,0.993,698,0.993,699,0.993,700,0.993,701,0.993,702,0.993,703,0.993,704,0.993,705,0.993,706,0.993]],["title/components/MatContractPickerRenderComponent.html",[0,0.052,105,0.5]],["body/components/MatContractPickerRenderComponent.html",[0,0.058,1,0.373,2,0.471,3,0.209,4,0.173,5,0.868,6,1.036,7,0.583,8,0.583,9,0.173,11,0.518,12,1.222,14,0.743,15,0.871,17,0.538,19,0.367,21,0.42,22,0.91,25,0.583,26,0.933,27,1.23,28,0.875,34,0.286,35,0.555,38,0.426,41,0.781,42,0.743,43,0.743,45,0.732,47,0.893,51,0.563,52,0.041,53,0.563,54,0.647,55,0.563,57,0.787,58,0.654,59,0.654,60,1.149,61,1.075,62,0.837,63,1.036,66,0.743,70,0.625,75,0.371,76,0.173,77,0.209,78,0.105,79,0.672,80,0.672,81,0.602,84,0.583,85,0.868,86,0.868,87,0.583,88,1.148,89,0.583,90,0.583,91,0.781,92,0.583,93,0.42,94,0.583,95,0.42,96,0.583,97,0.373,98,0.583,99,0.583,100,0.286,101,0.583,102,0.373,103,1.514,104,1.332,105,0.734,106,0.373,107,0.373,108,0.373,109,0.373,110,0.373,111,0.373,112,0.583,113,0.42,114,0.583,115,0.373,116,0.583,117,0.583,118,0.583,119,0.014,120,0.014,121,0.014,122,0.014,123,0.014,124,0.014,199,0.791,200,0.791,201,0.715,204,1.783,205,1.689,230,1.406,232,0.715,238,3.749,253,0.525,279,1.478,298,0.781,299,1.408,308,0.471,310,0.75,319,0.584,321,0.837,326,1.664,348,0.625,350,0.525,363,1.148,364,0.868,383,0.701,391,1.148,403,0.868,404,1.064,410,1.158,431,1.302,448,1.723,450,1.302,459,1.723,487,1.406,501,1.271,545,1.425,563,1.332,575,2.287,576,0.875,577,1.444,578,1.302,579,1.444,580,1.444,581,1.724,582,1.444,583,1.724,584,1.724,585,1.724,586,1.555,587,1.724,588,2.041,589,1.93,590,1.909,592,2.141,593,1.444,594,1.444,595,2.139,596,2.139,597,2.041,598,1.444,599,1.444,600,1.909,602,2.481,603,1.723,604,1.909,605,1.93,606,1.406,607,2.215,608,1.909,609,2.481,611,1.909,612,1.557,613,1.557,615,1.444,618,2.019,619,1.909,621,1.444,622,1.444,623,1.177,624,1.444,625,1.723,626,1.909,628,1.444,629,1.444,630,1.444,631,1.444,632,1.444,634,1.983,635,1.444,636,1.723,638,1.444,639,0.97,640,0.97,641,1.444,643,1.444,644,1.909,646,1.444,647,1.444,653,1.793,654,0.97,655,1.302,656,1.548,657,0.97,658,1.079,659,0.875,660,1.079,661,1.079,662,1.079,663,1.079,664,1.079,665,1.079,666,0.97,667,0.97,668,0.97,671,1.724,672,0.97,673,0.97,674,0.97,675,0.97,676,1.444,677,0.97,678,0.97,679,0.97,680,0.97,681,0.97,682,1.909,683,0.97,684,1.302,685,0.97,686,0.97,687,1.302,688,0.97,689,0.97,690,1.444,691,0.97,692,0.97,693,0.97,694,0.97,695,0.97,696,0.97,697,0.97,698,0.97,699,0.97,700,0.97,701,0.97,702,0.97,703,0.97,704,0.97,705,0.97,706,0.97,707,3.412,708,3.89,709,3.202,710,1.802,711,2.189,712,1.802,713,2.189,714,1.802,715,2.189,716,2.189,717,1.548,718,2.302,719,2.189,720,1.548,721,2.189,722,1.548,723,1.548,724,1.548,725,1.802,726,2.019,727,1.548,728,1.802,729,2.189,730,1.802,731,1.357,732,2.189]],["title/components/MatModulesPickerRenderComponent.html",[0,0.052,106,0.5]],["body/components/MatModulesPickerRenderComponent.html",[0,0.058,1,0.374,2,0.472,3,0.209,4,0.173,5,0.869,6,1.038,7,0.585,8,0.585,9,0.173,11,0.519,12,1.223,14,0.744,15,0.871,17,0.551,19,0.367,21,0.421,22,0.911,24,2.374,25,0.585,26,0.934,27,1.23,28,0.876,34,0.287,35,0.556,38,0.427,41,0.783,42,0.738,43,0.738,45,0.732,47,0.893,51,0.564,52,0.041,53,0.564,54,0.654,55,0.564,57,0.788,58,0.654,59,0.654,60,1.15,61,1.076,62,0.838,63,1.038,66,0.744,70,0.421,75,0.371,76,0.173,77,0.209,78,0.105,79,0.672,80,0.672,81,0.603,84,0.585,85,0.869,86,0.869,87,0.585,88,1.149,89,0.585,90,0.585,91,0.783,92,0.585,93,0.421,94,0.585,95,0.421,96,0.585,97,0.374,98,0.585,99,0.585,100,0.287,101,0.585,102,0.374,103,1.515,104,1.333,105,0.374,106,0.735,107,0.374,108,0.374,109,0.374,110,0.374,111,0.374,112,0.585,113,0.421,114,0.585,115,0.374,116,0.585,117,0.585,118,0.585,119,0.014,120,0.014,121,0.014,122,0.014,123,0.014,124,0.014,199,0.793,200,0.793,201,0.717,204,1.699,205,1.679,230,1.408,232,0.717,237,2.801,245,3.32,253,0.526,276,0.964,279,1.445,298,0.783,299,1.506,308,0.472,310,0.751,319,0.584,321,0.838,326,1.666,348,0.627,350,0.526,363,1.149,364,0.869,383,0.702,391,1.149,401,0.869,403,0.869,404,1.066,410,1.159,431,1.725,448,1.305,450,1.305,459,1.725,487,1.408,501,1.273,545,1.427,563,1.333,575,2.273,576,0.878,577,1.446,578,1.725,579,1.446,580,1.446,581,1.726,582,1.446,583,1.726,584,1.726,585,1.726,586,1.558,587,1.726,588,2.043,589,1.932,590,1.911,591,2.415,592,2.144,593,1.446,594,1.446,595,2.141,596,2.141,597,2.043,598,1.446,599,1.446,600,1.911,602,2.482,603,1.725,604,1.911,605,1.808,606,1.408,607,2.217,608,1.911,609,2.482,611,1.911,612,1.559,613,1.559,615,1.446,618,2.023,619,1.911,621,1.446,622,1.446,623,1.179,624,1.446,625,1.725,626,1.911,628,1.446,629,1.446,630,1.446,631,1.446,632,1.446,634,1.984,635,1.446,636,1.725,638,1.446,639,0.973,640,0.973,641,1.446,643,1.446,644,1.911,646,1.446,647,1.446,653,1.796,654,0.973,655,1.305,656,1.551,657,0.973,658,1.081,659,0.878,660,1.081,661,1.081,662,1.081,663,1.081,664,1.081,665,1.081,666,0.973,667,0.973,668,0.973,669,1.361,670,1.081,671,1.726,672,0.973,673,0.973,674,0.973,675,0.973,676,1.446,677,0.973,678,0.973,679,0.973,680,0.973,681,0.973,682,1.911,683,0.973,684,1.305,685,0.973,686,0.973,687,1.305,688,0.973,689,0.973,690,1.446,691,0.973,692,0.973,693,0.973,694,0.973,695,0.973,696,0.973,697,0.973,698,0.973,699,0.973,700,0.973,701,0.973,702,0.973,703,0.973,704,0.973,705,0.973,706,0.973,710,1.807,726,2.023,733,3.895,734,2.195,735,1.807,736,2.195,737,2.195,738,2.195,739,2.195,740,1.551,741,1.807,742,1.807,743,1.807,744,2.195,745,1.807,746,1.807,747,2.307,748,2.195,749,1.807,750,2.195,751,1.807]],["title/components/MatPermissionsPickerRenderComponent.html",[0,0.052,107,0.5]],["body/components/MatPermissionsPickerRenderComponent.html",[0,0.059,1,0.386,2,0.488,3,0.216,4,0.179,5,0.891,6,1.058,7,0.604,8,0.604,9,0.179,11,0.526,12,1.229,14,0.747,15,0.875,17,0.548,19,0.376,21,0.435,22,0.918,25,0.604,26,0.952,27,1.236,28,0.884,34,0.297,35,0.57,38,0.437,41,0.802,42,0.73,43,0.73,45,0.737,47,0.887,51,0.573,52,0.041,53,0.573,54,0.643,55,0.573,57,0.795,58,0.661,59,0.661,60,1.159,61,1.051,62,0.719,63,0.891,66,0.723,70,0.435,75,0.378,76,0.179,77,0.216,78,0.109,79,0.639,80,0.679,81,0.611,84,0.604,85,0.891,86,0.891,87,0.604,88,1.167,89,0.604,90,0.604,91,0.802,92,0.604,93,0.435,94,0.604,95,0.435,96,0.604,97,0.386,98,0.604,99,0.604,100,0.297,101,0.604,102,0.386,103,1.522,104,1.347,105,0.386,106,0.386,107,0.747,108,0.386,109,0.386,110,0.386,111,0.386,112,0.604,113,0.435,114,0.604,115,0.386,116,0.604,117,0.604,118,0.604,119,0.015,120,0.015,121,0.015,122,0.015,123,0.015,124,0.015,199,0.819,200,0.819,201,0.741,204,1.771,205,1.663,230,2.172,232,0.741,253,0.544,279,1.473,298,0.802,299,1.297,308,0.488,310,0.758,319,0.596,321,0.854,326,1.688,348,0.642,350,0.544,363,1.167,364,0.891,383,0.719,391,1.167,403,0.891,404,1.092,410,1.172,431,1.955,448,1.337,450,1.337,459,1.752,473,1.866,487,1.435,501,1.297,545,1.443,563,1.347,575,2.252,576,0.907,577,1.481,578,1.752,579,1.481,580,1.481,581,1.759,582,1.481,583,1.759,584,1.759,585,1.759,586,1.588,587,1.759,588,2.071,589,1.955,590,1.942,593,1.481,594,1.481,595,2.166,596,2.166,597,2.071,598,1.481,599,1.481,600,2.166,602,2.496,603,1.752,604,1.942,605,1.947,606,1.435,607,2.24,608,1.942,609,2.496,611,1.942,612,1.583,613,1.583,615,1.481,619,1.942,621,1.481,622,1.481,623,1.208,624,1.481,625,1.752,626,1.942,628,1.481,629,1.481,630,1.481,631,1.481,632,1.481,634,1.875,635,1.481,636,1.752,638,1.481,639,1.005,640,1.005,641,1.481,643,1.481,644,1.942,646,1.481,647,1.481,654,1.005,655,1.337,657,1.005,658,1.117,659,0.907,660,1.117,661,1.117,662,1.117,663,1.117,664,1.117,665,1.117,666,1.005,667,1.005,668,1.005,670,1.647,671,1.759,672,1.005,673,1.005,674,1.005,675,1.005,676,1.481,677,1.005,678,1.005,679,1.005,680,1.005,681,1.005,682,1.942,683,1.005,684,1.337,685,1.005,686,1.005,687,1.337,688,1.005,689,1.005,690,1.481,691,1.005,692,1.005,693,1.005,694,1.005,695,1.005,696,1.005,697,1.005,698,1.005,699,1.005,700,1.005,701,1.005,702,1.005,703,1.005,704,1.005,705,1.005,706,1.005,717,1.602,720,1.602,722,1.602,723,1.602,725,1.866,731,1.405,735,1.866,747,2.363,752,2.752,753,3.97,754,2.267,755,2.267,756,2.267,757,2.267,758,2.267,759,1.866,760,1.866,761,2.752,762,2.267,763,2.267]],["title/components/MatProfilesPickerRenderComponent.html",[0,0.052,108,0.5]],["body/components/MatProfilesPickerRenderComponent.html",[0,0.059,1,0.385,2,0.486,3,0.215,4,0.178,5,0.889,6,1.056,7,0.602,8,0.602,9,0.178,11,0.525,12,1.228,14,0.747,15,0.875,17,0.548,19,0.375,21,0.434,22,0.941,25,0.602,26,0.95,27,1.236,28,0.883,34,0.296,35,0.568,38,0.436,41,0.8,42,0.73,43,0.73,45,0.736,47,0.887,51,0.572,52,0.041,53,0.572,54,0.643,55,0.572,57,0.794,58,0.661,59,0.661,60,1.158,61,1.05,62,0.717,63,0.889,66,0.723,70,0.434,75,0.378,76,0.178,77,0.215,78,0.109,79,0.639,80,0.678,81,0.61,84,0.602,85,0.889,86,0.889,87,0.602,88,1.166,89,0.602,90,0.602,91,0.8,92,0.602,93,0.434,94,0.602,95,0.434,96,0.602,97,0.385,98,0.602,99,0.602,100,0.296,101,0.602,102,0.385,103,1.522,104,1.346,105,0.385,106,0.385,107,0.385,108,0.745,109,0.385,110,0.385,111,0.385,112,0.602,113,0.434,114,0.602,115,0.385,116,0.602,117,0.602,118,0.602,119,0.015,120,0.015,121,0.015,122,0.015,123,0.015,124,0.015,199,0.817,200,0.817,201,0.739,203,3.307,204,1.771,205,1.662,232,0.739,253,0.542,279,1.472,298,0.8,299,1.295,308,0.486,310,0.758,319,0.595,321,0.852,326,1.686,348,0.64,350,0.542,363,1.166,364,0.889,383,0.717,391,1.166,403,0.889,404,1.09,410,1.171,448,1.334,450,1.334,455,1.836,459,1.75,487,1.432,501,1.295,545,1.442,563,1.346,575,2.251,576,0.904,577,1.478,578,1.75,579,1.478,580,1.478,581,1.756,582,1.478,583,1.756,584,1.756,585,1.756,586,2.02,587,1.756,588,2.068,589,1.953,590,1.939,593,1.478,594,1.478,595,2.164,596,2.164,597,2.068,598,1.478,599,1.478,600,2.164,602,2.495,603,1.75,604,1.939,605,1.945,606,1.432,607,2.238,608,1.939,609,2.495,611,1.939,612,1.581,613,1.581,615,1.478,616,1.598,619,1.939,620,1.861,621,1.478,622,1.478,623,1.205,624,1.478,625,1.75,626,1.939,627,1.861,628,1.478,629,1.478,630,1.478,631,1.478,632,1.478,634,1.873,635,1.478,636,1.75,638,1.478,639,1.002,640,1.002,641,1.478,643,1.478,644,1.939,646,1.478,647,1.478,654,1.002,655,1.334,657,1.002,658,1.114,659,0.904,660,1.114,661,1.114,662,1.114,663,1.114,664,1.114,665,1.114,666,1.002,667,1.002,668,1.002,669,1.401,670,1.643,671,1.756,672,1.002,673,1.002,674,1.002,675,1.002,676,1.478,677,1.002,678,1.002,679,1.002,680,1.002,681,1.002,682,1.939,683,1.002,684,1.334,685,1.002,686,1.002,687,1.334,688,1.002,689,1.002,690,1.478,691,1.002,692,1.002,693,1.002,694,1.002,695,1.002,696,1.002,697,1.002,698,1.002,699,1.002,700,1.002,701,1.002,702,1.002,703,1.002,704,1.002,705,1.002,706,1.002,717,1.598,720,1.598,722,1.598,723,1.598,731,1.401,752,2.746,759,1.861,760,1.861,761,2.746,764,3.963,765,2.26,766,2.26,767,2.26,768,2.26,769,2.26,770,2.26,771,2.26,772,2.26,773,2.26,774,1.861,775,2.26,776,2.26]],["title/components/MatServicesPickerRenderComponent.html",[0,0.052,109,0.5]],["body/components/MatServicesPickerRenderComponent.html",[0,0.058,1,0.376,2,0.475,3,0.21,4,0.174,5,0.873,6,1.041,7,0.588,8,0.588,9,0.174,11,0.52,12,1.224,14,0.744,15,0.872,17,0.556,19,0.369,21,0.424,22,0.937,25,0.588,26,0.937,27,1.231,28,0.877,34,0.289,35,0.558,38,0.429,41,0.786,42,0.739,43,0.739,45,0.733,47,0.89,49,1.184,51,0.566,52,0.041,53,0.566,54,0.654,55,0.566,57,0.789,58,0.656,59,0.656,60,1.151,61,1.078,62,0.841,63,1.041,66,0.733,70,0.424,75,0.372,76,0.174,77,0.21,78,0.106,79,0.656,80,0.673,81,0.604,84,0.588,85,0.873,86,0.873,87,0.588,88,1.152,89,0.588,90,0.588,91,0.786,92,0.588,93,0.424,94,0.588,95,0.424,96,0.588,97,0.376,98,0.588,99,0.588,100,0.289,101,0.588,102,0.376,103,1.516,104,1.335,105,0.376,106,0.376,107,0.376,108,0.376,109,0.737,110,0.376,111,0.376,112,0.588,113,0.424,114,0.588,115,0.376,116,0.588,117,0.588,118,0.588,119,0.014,120,0.014,121,0.014,122,0.014,123,0.014,124,0.014,199,0.797,200,0.797,201,0.721,204,1.779,205,1.68,230,1.412,232,0.721,237,2.959,253,0.529,276,0.967,279,1.465,298,0.786,299,1.413,308,0.475,310,0.752,319,0.586,321,0.841,326,1.67,348,0.629,350,0.529,363,1.152,364,0.873,383,0.705,391,1.152,401,1.152,403,0.873,404,1.071,410,1.161,431,1.31,448,1.31,450,1.31,459,1.729,487,1.412,501,1.277,545,1.429,563,1.335,575,2.275,576,0.882,577,1.452,578,1.729,579,1.452,580,1.452,581,1.732,582,1.452,583,1.732,584,1.732,585,1.732,586,1.563,587,1.732,588,2.047,589,1.936,590,1.916,591,2.422,592,2.151,593,1.452,594,1.452,595,2.145,596,2.145,597,2.047,598,1.452,599,1.452,600,2.145,602,2.484,603,1.729,604,1.916,605,1.901,606,1.412,607,2.221,608,1.916,609,2.484,611,1.916,612,1.563,613,1.563,615,1.452,619,1.916,621,1.452,622,1.452,623,1.184,624,1.452,625,1.729,626,1.916,628,1.452,629,1.452,630,1.452,631,1.452,632,1.452,634,1.934,635,1.452,636,1.729,638,1.452,639,0.978,640,0.978,641,1.452,643,1.452,644,1.916,646,1.452,647,1.452,653,1.804,654,0.978,655,1.31,657,0.978,658,1.087,659,0.882,660,1.087,661,1.087,662,1.087,663,1.087,664,1.087,665,1.087,666,0.978,667,0.978,668,0.978,669,1.368,670,1.087,671,1.732,672,0.978,673,0.978,674,0.978,675,0.978,676,1.452,677,0.978,678,0.978,679,0.978,680,0.978,681,0.978,682,1.916,683,0.978,684,1.31,685,0.978,686,0.978,687,1.31,688,0.978,689,0.978,690,1.452,691,0.978,692,0.978,693,0.978,694,0.978,695,0.978,696,0.978,697,0.978,698,0.978,699,0.978,700,0.978,701,0.978,702,0.978,703,0.978,704,0.978,705,0.978,706,0.978,712,1.817,724,1.56,726,2.031,727,1.56,740,1.56,741,1.817,742,1.817,743,1.817,745,1.817,746,1.817,747,2.316,777,3.908,778,2.207,779,2.207,780,2.207,781,2.207,782,2.207,783,2.207,784,2.207,785,2.207,786,2.207]],["title/components/MatStatusPickerRenderComponent.html",[0,0.052,110,0.5]],["body/components/MatStatusPickerRenderComponent.html",[0,0.059,1,0.382,2,0.483,3,0.214,4,0.177,5,0.884,6,1.052,7,0.598,8,0.598,9,0.177,11,0.524,12,1.227,14,0.746,15,0.874,17,0.54,19,0.374,21,0.431,22,0.958,25,0.598,26,0.947,27,1.235,28,0.881,34,0.294,35,0.565,38,0.434,41,0.796,42,0.735,43,0.735,45,0.735,47,0.886,49,1.576,51,0.57,52,0.041,53,0.57,54,0.646,55,0.57,56,2.968,57,0.793,58,0.659,59,0.659,60,1.156,61,1.084,62,1.001,63,1.052,66,0.722,70,0.637,75,0.376,76,0.177,77,0.214,78,0.108,79,0.637,80,0.677,81,0.609,84,0.598,85,0.884,86,0.884,87,0.598,88,1.162,89,0.598,90,0.598,91,0.796,92,0.598,93,0.431,94,0.598,95,0.431,96,0.598,97,0.382,98,0.598,99,0.598,100,0.294,101,0.598,102,0.382,103,1.52,104,1.343,105,0.382,106,0.382,107,0.382,108,0.382,109,0.382,110,0.743,111,0.382,112,0.598,113,0.431,114,0.598,115,0.382,116,0.598,117,0.598,118,0.598,119,0.015,120,0.015,121,0.015,122,0.015,123,0.015,124,0.015,199,0.811,200,0.811,201,0.733,204,1.776,205,1.673,230,1.426,232,0.733,253,0.538,279,1.47,298,0.796,299,1.084,308,0.483,310,0.756,319,0.592,321,0.849,326,1.681,348,0.637,350,0.538,363,1.162,364,0.884,383,0.714,391,1.162,401,0.884,403,0.884,404,1.084,410,1.168,431,1.327,448,1.327,450,1.327,455,1.826,459,1.744,487,1.426,501,1.29,545,1.438,563,1.343,575,2.266,576,0.897,577,1.47,578,1.744,579,1.47,580,1.47,581,1.749,582,1.47,583,1.749,584,1.749,585,1.749,586,1.578,587,1.749,588,2.062,589,1.948,590,1.932,592,2.173,593,1.47,594,1.47,595,2.159,596,2.159,597,1.932,598,1.47,599,1.47,600,1.932,601,1.848,602,2.492,603,1.744,604,1.932,605,1.942,606,1.426,607,2.233,608,1.932,609,2.492,611,1.932,612,1.576,613,1.576,614,1.848,615,1.47,616,1.586,618,2.057,619,1.932,621,1.47,622,1.47,623,1.199,624,1.47,625,1.744,626,1.932,628,1.47,629,1.47,630,1.47,631,1.47,632,1.47,634,1.76,635,1.47,636,1.744,638,1.47,639,0.995,640,0.995,641,1.47,643,1.47,644,1.932,646,1.47,647,1.47,653,1.826,654,0.995,655,1.327,657,0.995,666,0.995,667,0.995,668,0.995,670,1.945,671,1.749,672,0.995,673,0.995,674,0.995,675,0.995,676,1.47,677,0.995,678,0.995,679,0.995,680,0.995,681,0.995,682,1.932,683,0.995,684,1.327,685,0.995,686,0.995,687,1.327,688,0.995,689,0.995,690,1.47,691,0.995,692,0.995,693,0.995,694,0.995,695,0.995,696,0.995,697,0.995,698,0.995,699,0.995,700,0.995,701,0.995,702,0.995,703,0.995,704,0.995,705,0.995,706,0.995,714,1.848,724,1.586,726,2.057,727,1.586,731,1.391,740,1.586,774,1.848,787,2.244,788,2.244,789,2.244,790,3.318,791,2.244,792,2.244,793,2.244,794,2.244,795,2.244,796,2.244,797,2.244,798,2.244]],["title/classes/PasswordErrorStateMatcher.html",[78,0.141,380,1.616]],["body/classes/PasswordErrorStateMatcher.html",[0,0.073,3,0.287,4,0.238,9,0.238,11,0.461,12,0.88,14,0.681,15,0.453,17,0.567,18,1.479,19,0.523,22,0.887,27,0.649,28,0.514,30,1.337,32,1.337,34,0.395,38,0.535,42,0.395,43,0.681,45,0.681,46,0.986,47,0.747,50,2.955,51,0.395,52,0.041,53,0.395,54,0.34,55,0.395,57,0.805,58,0.395,59,0.395,60,0.999,61,0.999,62,0.649,66,0.681,69,2.879,75,0.496,76,0.238,77,0.442,78,0.223,79,0.681,80,0.651,81,0.702,100,0.395,119,0.02,120,0.02,121,0.02,122,0.02,123,0.03,124,0.02,178,3.087,181,1.87,184,1.661,226,1.87,227,1.661,260,2.537,273,2.069,276,0.891,279,1.09,281,1.337,298,1.114,308,0.999,310,0.747,315,2.081,319,0.614,321,0.88,335,1.337,337,2.556,338,2.132,339,1.87,340,3.948,341,4.083,342,3.283,343,3.283,344,3.283,345,2.879,346,3.794,347,3.283,348,0.892,349,3.283,350,1.114,351,3.369,352,3.794,353,4.083,354,4.115,355,4.083,356,3.881,357,3.881,359,4.083,360,4.046,361,2.433,362,3.283,363,1.237,364,1.327,365,3.283,366,2.556,367,3.087,368,2.016,369,2.537,370,2.132,371,3.283,372,2.307,373,1.87,374,3.52,375,2.892,376,2.892,377,2.892,378,2.892,379,3.227,380,2.741,381,1.661,382,1.661,383,0.649,384,1.661,385,1.337,386,1.337,387,1.337,388,2.132,389,2.132,390,2.132,391,0.804,392,1.87,393,2.892,394,2.132,395,2.892,396,2.132,397,2.132,398,2.892,399,2.132,400,2.132,401,0.804,402,2.892,403,0.804,404,0.986,405,2.132,406,1.486,407,2.016,408,1.486,409,2.132,410,0.723,411,2.132,412,2.892,413,2.132,414,2.132,415,1.486,416,2.132,417,2.132,418,2.132,419,2.132,420,2.132,421,2.132,422,2.132,423,2.132,799,3.017]],["title/components/ServicesComponent.html",[0,0.052,111,0.5]],["body/components/ServicesComponent.html",[0,0.055,1,0.346,2,0.436,3,0.193,4,0.16,5,0.541,6,0.541,7,0.541,8,0.541,9,0.16,11,0.467,12,0.959,14,0.758,15,0.87,17,0.563,19,0.467,21,0.39,22,0.707,24,2.972,25,0.541,26,0.891,27,1.215,28,0.893,30,1.364,32,1.364,34,0.265,35,0.524,38,0.402,41,1.169,42,0.752,43,0.78,45,0.758,46,1.878,47,0.908,49,1.112,51,0.583,52,0.041,53,0.583,54,0.59,55,0.583,56,1.516,57,0.704,58,0.697,59,0.697,60,1.127,61,0.662,62,0.892,63,0.82,66,0.734,70,0.591,75,0.447,76,0.16,77,0.193,78,0.097,79,0.657,80,0.697,81,0.542,84,0.541,85,0.82,86,0.82,87,0.541,88,1.105,89,0.541,90,0.541,91,0.738,92,0.541,93,0.39,94,0.541,95,0.39,96,0.541,97,0.346,98,0.541,99,0.541,100,0.265,101,0.541,102,0.346,103,1.298,104,1.298,105,0.633,106,0.633,107,0.346,108,0.346,109,0.346,110,0.346,111,0.707,112,0.541,113,0.39,114,0.541,115,0.346,116,0.541,117,0.541,118,0.541,119,0.013,120,0.013,121,0.013,122,0.013,123,0.024,124,0.013,148,1.671,204,1.097,205,0.909,206,2.175,209,3.816,223,1.434,224,1.434,231,1.671,233,1.671,234,1.671,237,1.831,238,1.907,245,2.453,253,1.355,268,2.311,273,1.112,276,1.657,279,0.541,281,1.214,298,0.738,299,1.214,308,0.436,310,0.799,315,1.23,319,0.731,321,0.436,335,1.364,348,1.077,350,0.487,361,1.364,364,0.82,368,1.831,381,1.694,382,1.694,383,0.662,384,1.694,385,1.364,386,1.364,387,1.838,391,1.105,401,1.25,403,1.25,406,1.516,407,2.311,408,1.516,410,0.994,415,1.831,468,1,501,1.533,545,1.594,563,0.82,572,2.571,591,1.907,605,1.499,606,1.112,612,1.112,613,1.112,623,1.112,625,1.658,634,2.028,707,3.816,709,3.059,718,2.175,728,2.533,730,1.671,749,2.533,751,1.671,800,1.671,801,3.716,802,3.077,803,3.059,804,3.059,805,3.059,806,3.716,807,3.059,808,3.716,809,3.077,810,4.691,811,4.147,812,4.691,813,3.862,814,3.862,815,4.691,816,4.147,817,3.059,818,2.533,819,3.862,820,2.029,821,3.112,822,3.414,823,3.669,824,3.077,825,4.147,826,2.029,827,3.077,828,3.077,829,4.133,830,2.029,831,4.147,832,3.077,833,2.029,834,4.147,835,2.029,836,4.147,837,2.029,838,2.029,839,2.029,840,3.077,841,2.029,842,2.029,843,3.414,844,2.029,845,2.533,846,2.533,847,3.862,848,2.533,849,2.533,850,2.029,851,2.029,852,2.533,853,2.533,854,2.533,855,2.029,856,3.414,857,2.029,858,2.029,859,2.029,860,3.862,861,3.077,862,2.029,863,4.445,864,2.533,865,3.077,866,3.414,867,4.147,868,4.147,869,3.077,870,2.533,871,2.533,872,3.077,873,3.077,874,3.077,875,3.077,876,3.077,877,3.077,878,3.716,879,3.077,880,3.077,881,3.077,882,3.077,883,3.077,884,2.029,885,2.533,886,1.671,887,2.029,888,2.533,889,2.029,890,2.029,891,3.077,892,2.029,893,2.029,894,3.716,895,3.059,896,2.029,897,2.029,898,2.029,899,2.029,900,2.029,901,2.029,902,2.029,903,2.029,904,2.029,905,2.029,906,2.029,907,2.029,908,1.671,909,2.029,910,2.029,911,2.029,912,2.029,913,1.671,914,1.671,915,1.671,916,1.671,917,3.077,918,3.077,919,2.029,920,3.077,921,3.077,922,2.029,923,2.533,924,2.029,925,2.029,926,2.029,927,2.029,928,2.029,929,2.029,930,2.029,931,2.029]],["title/injectables/ServicesService.html",[307,1.174,821,1.819]],["body/injectables/ServicesService.html",[3,0.259,4,0.214,9,0.214,11,0.585,14,0.768,15,0.88,16,2.098,17,0.584,18,1.722,19,0.429,21,1.115,22,0.649,24,2.624,26,0.914,29,1.687,34,0.356,35,0.649,38,0.499,41,1.055,42,0.724,43,0.724,45,0.759,46,1.897,47,0.907,49,1.969,51,0.656,52,0.041,53,0.656,54,0.613,55,0.656,57,0.894,58,0.698,59,0.698,66,0.499,67,2.098,70,0.999,75,0.454,76,0.214,77,0.259,78,0.131,79,0.356,80,0.698,81,0.698,119,0.018,120,0.018,121,0.018,122,0.018,123,0.018,124,0.018,161,1.498,237,1.878,266,3.851,268,1.878,270,3.377,273,1.879,276,1.733,281,1.437,290,3.477,302,1.498,307,1.524,310,0.801,319,0.801,348,1.077,361,1.689,366,2.098,383,1.118,385,1.689,386,1.689,387,1.689,401,1.547,415,2.472,430,3.138,468,1.341,541,1.687,543,2.694,544,2.694,545,1.689,546,3.109,548,1.923,549,3.369,551,3.369,552,2.694,553,2.694,558,3.676,560,2.694,561,2.694,562,2.694,563,1.452,564,2.694,565,2.694,566,1.923,567,1.923,568,1.923,569,1.923,570,1.923,571,1.923,572,3.31,578,1.906,707,3.369,718,3.369,813,4.131,814,4.131,819,3.138,821,2.363,864,3.924,932,2.24,933,5.2,934,3.811,935,3.811,936,3.811,937,3.811,938,2.721,939,4.281,940,2.721,941,2.721,942,4.399,943,2.721,944,3.811,945,5.2,946,2.721,947,4.399,948,2.721,949,3.811,950,4.281,951,3.811,952,4.766,953,2.721,954,4.618,955,3.138,956,3.924,957,5.2,958,2.721,959,2.721,960,3.138,961,3.811,962,3.811,963,3.811,964,2.721,965,2.721,966,2.721,967,2.721,968,2.721,969,2.721,970,2.721,971,2.721,972,2.721,973,2.721,974,2.721,975,2.721]],["title/injectables/UsersService.html",[307,1.174,976,2.075]],["body/injectables/UsersService.html",[3,0.295,4,0.244,9,0.244,11,0.567,14,0.765,15,0.895,16,2.292,17,0.58,18,1.819,19,0.469,21,1.105,29,1.919,34,0.405,35,0.71,38,0.545,41,0.999,42,0.723,43,0.723,45,0.752,46,1.88,47,0.901,49,1.819,51,0.616,52,0.041,53,0.616,54,0.609,55,0.616,57,0.887,58,0.687,59,0.687,66,0.545,67,2.292,70,0.904,75,0.48,76,0.244,77,0.295,78,0.149,79,0.405,80,0.687,81,0.616,119,0.02,120,0.02,121,0.02,122,0.02,123,0.034,124,0.02,161,1.704,203,2.292,266,3.557,268,2.052,270,3.483,273,1.505,281,1.538,290,3.529,302,1.704,306,2.188,307,1.665,310,0.788,319,0.788,348,1.039,401,1.341,431,2.012,468,1.525,485,3.624,541,1.919,543,2.944,544,2.944,545,1.597,546,3.326,548,2.188,549,3.557,551,3.557,552,2.944,553,2.944,558,4.066,560,2.944,561,2.944,562,2.944,563,1.497,564,2.944,565,2.944,566,2.188,567,2.188,568,2.188,569,2.188,570,2.188,571,2.188,572,3.256,586,2.163,939,4.453,954,4.626,955,4.626,956,4.626,976,2.944,977,2.549,978,5.409,979,5.409,980,5.409,981,4.164,982,4.164,983,4.164,984,3.096,985,3.096,986,3.096,987,4.706,988,3.096,989,5.409,990,5.033,991,4.706,992,3.096,993,3.096,994,3.096,995,3.096,996,3.096,997,3.096,998,3.096,999,3.096]],["title/components/WastesComponent.html",[0,0.052,115,0.5]],["body/components/WastesComponent.html",[0,0.052,1,0.323,2,0.408,3,0.181,4,0.15,5,0.506,6,0.506,7,0.506,8,0.506,9,0.15,11,0.451,12,0.93,14,0.696,15,0.798,17,0.578,18,1.057,19,0.514,21,0.365,22,0.779,25,0.506,26,1.209,27,1.202,28,0.877,30,1.296,32,1.296,34,0.248,35,0.498,38,0.382,41,1.209,42,0.748,43,0.755,45,0.673,46,1.606,47,0.898,49,1.448,51,0.466,52,0.041,53,0.466,54,0.629,55,0.466,57,0.772,58,0.566,59,0.566,60,1.085,61,1.158,62,1.202,63,1.435,66,0.771,70,0.685,75,0.412,76,0.15,77,0.181,78,0.091,79,0.719,80,0.566,81,0.466,84,0.506,85,0.779,86,0.779,87,0.506,88,1.217,89,0.506,90,0.506,91,0.701,92,0.506,93,0.365,94,0.506,95,0.365,96,0.506,97,0.323,98,0.506,99,0.506,100,0.248,101,0.506,102,0.323,103,1.268,104,1.268,105,0.323,106,0.323,107,0.323,108,0.498,109,0.323,110,0.323,111,0.323,112,0.506,113,0.365,114,0.506,115,0.683,116,0.95,117,0.506,118,0.506,119,0.012,120,0.012,121,0.012,122,0.012,123,0.023,124,0.012,151,1.563,203,1.609,204,0.863,205,0.561,206,1.342,209,3.849,221,1.563,223,1.342,224,1.342,227,1.609,246,1.563,247,1.563,253,1.275,268,2.251,273,1.057,276,1.451,281,1.165,299,0.62,308,0.408,310,0.649,319,0.285,321,0.629,332,2.067,335,1.296,348,1.046,350,0.455,361,1.296,363,0.779,364,1.067,366,1.609,368,1.757,381,1.609,382,2.205,383,0.862,384,1.609,385,1.296,386,1.296,387,1.296,391,1.067,401,1.217,403,1.217,406,1.441,407,2.251,408,1.441,410,1.096,415,2.131,455,2.205,468,0.935,482,3.762,485,1.812,487,0.686,489,1.563,498,1.563,499,2.936,501,1.493,502,1.563,503,1.563,504,1.563,516,1.563,518,1.563,519,1.563,563,1.067,589,2.198,603,1.169,605,1.861,606,1.448,612,1.448,613,1.448,623,1.651,634,2.076,636,0.759,659,1.169,684,1.426,803,2.936,804,2.936,805,2.936,807,2.936,817,1.563,818,2.407,822,2.936,823,3.561,829,3.762,843,3.298,845,2.407,846,2.407,847,3.762,848,3.298,849,3.298,852,2.407,853,2.407,854,2.407,856,3.298,860,3.762,863,4.483,870,4.047,871,3.298,885,3.298,886,1.563,888,1.563,895,1.563,908,1.563,913,1.563,914,1.563,915,1.563,916,1.563,923,3.298,950,3.298,960,2.407,1000,1.563,1001,3.566,1002,2.924,1003,3.566,1004,3.566,1005,3.566,1006,3.566,1007,3.566,1008,3.566,1009,3.566,1010,3.566,1011,3.566,1012,3.566,1013,3.566,1014,2.924,1015,5.318,1016,4.569,1017,1.898,1018,1.898,1019,4.006,1020,1.898,1021,2.924,1022,2.924,1023,2.924,1024,1.898,1025,1.898,1026,1.898,1027,1.898,1028,2.924,1029,2.924,1030,2.924,1031,2.924,1032,2.924,1033,2.924,1034,2.924,1035,4.006,1036,2.924,1037,2.924,1038,1.898,1039,2.924,1040,1.898,1041,2.924,1042,4.006,1043,1.898,1044,2.924,1045,2.924,1046,2.924,1047,2.924,1048,2.924,1049,1.898,1050,4.915,1051,1.898,1052,2.924,1053,4.006,1054,4.006,1055,2.924,1056,4.326,1057,2.924,1058,2.924,1059,1.898,1060,1.898,1061,1.898,1062,1.898,1063,1.898,1064,4.006,1065,2.924,1066,5.318,1067,4.006,1068,5.318,1069,5.318,1070,1.898,1071,4.006,1072,4.915,1073,4.047,1074,4.915,1075,1.898,1076,4.006,1077,2.924,1078,2.924,1079,1.898,1080,4.569,1081,2.924,1082,2.924,1083,1.898,1084,4.006,1085,2.924,1086,2.924,1087,1.898,1088,1.898,1089,1.898,1090,1.898,1091,1.898,1092,1.898,1093,1.898,1094,1.898,1095,1.898,1096,1.898,1097,1.898,1098,1.898,1099,1.898,1100,1.898,1101,2.924,1102,2.924,1103,2.924,1104,2.924,1105,4.006,1106,4.006,1107,4.006,1108,4.006,1109,2.924,1110,1.898,1111,1.898,1112,1.898]],["title/coverage.html",[1113,4.016]],["body/coverage.html",[0,0.109,1,0.69,9,0.319,10,3.334,17,0.386,19,0.456,52,0.04,54,0.456,56,2.438,78,0.238,93,0.778,95,0.778,97,0.69,100,0.53,102,0.69,105,0.69,106,0.69,107,0.69,108,0.69,109,0.69,110,0.69,111,0.69,113,0.778,115,0.69,119,0.026,120,0.026,121,0.026,122,0.026,123,0.026,124,0.026,140,2.229,145,3.334,186,2.862,203,2.724,204,1.799,205,1.736,229,2.862,230,1.788,237,2.632,238,3.067,239,3.498,245,2.724,263,3.334,264,3.334,307,2.137,315,1.619,337,2.229,339,3.312,372,1.795,380,2.229,424,3.334,425,3.334,542,3.334,575,2.351,576,2.351,800,3.334,821,2.51,866,5.074,932,3.334,976,2.862,977,3.334,1000,3.334,1114,4.05,1115,4.05,1116,4.05,1117,4.05,1118,4.05,1119,4.05,1120,4.05,1121,4.05,1122,4.05,1123,4.05,1124,4.948,1125,4.05,1126,4.05,1127,4.05,1128,4.05,1129,4.05,1130,4.05,1131,4.05,1132,4.948,1133,4.948,1134,4.05,1135,4.05,1136,4.05,1137,4.948,1138,4.05,1139,4.05,1140,4.05,1141,4.05]],["title/dependencies.html",[128,2.497,1142,2.446]],["body/dependencies.html",[52,0.04,76,0.355,119,0.029,120,0.029,121,0.029,122,0.029,123,0.029,124,0.029,131,3.186,156,4.343,157,4.343,184,2.481,189,3.71,190,3.71,199,1.906,200,1.906,201,1.473,259,3.71,302,2.481,655,1.802,1143,4.507,1144,4.507,1145,4.979,1146,4.507,1147,5.275,1148,4.507,1149,4.507,1150,4.507,1151,4.507,1152,4.507,1153,4.507,1154,5.275,1155,4.507,1156,4.507,1157,4.507,1158,4.507,1159,4.507,1160,4.507,1161,4.507,1162,4.507,1163,4.507,1164,4.507,1165,4.507,1166,4.507]],["title/index.html",[687,0.978,1167,2.446,1168,2.446]],["body/index.html",[0,0.098,4,0.346,28,0.749,52,0.034,71,3.619,91,1.054,119,0.028,120,0.028,121,0.028,122,0.028,123,0.028,124,0.028,201,1.809,315,1.758,659,2.213,1145,3.619,1169,5.198,1170,4.396,1171,5.535,1172,4.396,1173,4.396,1174,5.198,1175,5.838,1176,5.978,1177,4.396,1178,4.396,1179,4.396,1180,4.396,1181,4.396,1182,4.396,1183,4.396,1184,4.396,1185,4.396,1186,4.396,1187,5.535,1188,4.396,1189,5.838,1190,4.396,1191,4.396,1192,4.396,1193,4.396,1194,4.396,1195,4.396,1196,4.396,1197,5.198,1198,5.198,1199,5.72,1200,4.396,1201,5.198,1202,5.198,1203,4.396,1204,5.72,1205,4.396,1206,4.396,1207,4.396,1208,5.535,1209,4.396,1210,4.396,1211,4.396,1212,4.396,1213,3.619,1214,4.396,1215,4.396,1216,4.396]],["title/modules.html",[245,2.211]],["body/modules.html",[52,0.035,119,0.031,120,0.031,121,0.035,122,0.031,123,0.031,124,0.031,126,2.967,127,2.967,139,2.635,1217,4.787,1218,4.787,1219,4.787,1220,4.787,1221,5.462,1222,4.787,1223,4.787]],["title/overview.html",[1213,3.306]],["body/overview.html",[1,1.011,2,0.909,11,0.476,52,0.04,93,1.045,95,1.045,97,0.927,100,0.712,102,0.927,105,0.927,106,0.927,107,0.927,108,0.927,109,0.927,110,0.927,111,0.927,113,1.045,115,0.927,119,0.027,120,0.027,121,0.027,122,0.027,123,0.027,124,0.027,125,2.326,126,3.889,127,2.619,128,2.987,129,3.479,130,3.479,131,2.987,132,3.479,133,2.987,134,3.479,135,3.479,136,3.479,137,3.479,138,3.479,139,2.996,140,2.996,141,3.479,142,3.479,143,3.479,326,1.527,338,2.987,541,2.619,1073,3.479,1224,4.226,1225,5.077,1226,4.226]],["title/routes.html",[257,3.306]],["body/routes.html",[52,0.036,119,0.031,120,0.031,121,0.031,122,0.031,123,0.031,124,0.031,1227,4.844]]],"invertedIndex":[["",{"_index":52,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interceptors/AuthInterceptor.html":{},"classes/EmailErrorStateMatcher.html":{},"components/InitialViewComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/MatApprovedPickerRenderComponent.html":{},"components/MatContractPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{},"classes/PasswordErrorStateMatcher.html":{},"components/ServicesComponent.html":{},"injectables/ServicesService.html":{},"injectables/UsersService.html":{},"components/WastesComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{}}}],["0",{"_index":326,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"components/MatApprovedPickerRenderComponent.html":{},"components/MatContractPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{},"overview.html":{}}}],["0.10.2",{"_index":1166,"title":{},"body":{"dependencies.html":{}}}],["0.17.0",{"_index":1164,"title":{},"body":{"dependencies.html":{}}}],["03506f",{"_index":490,"title":{},"body":{"components/InitialViewComponent.html":{}}}],["0a043c",{"_index":500,"title":{},"body":{"components/InitialViewComponent.html":{}}}],["1",{"_index":684,"title":{},"body":{"components/MatApprovedPickerRenderComponent.html":{},"components/MatContractPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{},"components/WastesComponent.html":{}}}],["10/10",{"_index":1138,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":866,"title":{},"body":{"components/ServicesComponent.html":{},"coverage.html":{}}}],["1000",{"_index":1086,"title":{},"body":{"components/WastesComponent.html":{}}}],["100vh",{"_index":488,"title":{},"body":{"components/InitialViewComponent.html":{}}}],["11.0.4",{"_index":1145,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["11.2.13",{"_index":1147,"title":{},"body":{"dependencies.html":{}}}],["11/11",{"_index":1122,"title":{},"body":{"coverage.html":{}}}],["12.0.0",{"_index":1150,"title":{},"body":{"dependencies.html":{}}}],["123",{"_index":1072,"title":{},"body":{"components/WastesComponent.html":{}}}],["13",{"_index":689,"title":{},"body":{"components/MatApprovedPickerRenderComponent.html":{},"components/MatContractPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{}}}],["14/14",{"_index":1132,"title":{},"body":{"coverage.html":{}}}],["14/15",{"_index":1135,"title":{},"body":{"coverage.html":{}}}],["15",{"_index":1226,"title":{},"body":{"overview.html":{}}}],["15/15",{"_index":1128,"title":{},"body":{"coverage.html":{}}}],["15/16",{"_index":1134,"title":{},"body":{"coverage.html":{}}}],["15px",{"_index":495,"title":{},"body":{"components/InitialViewComponent.html":{}}}],["16/16",{"_index":1131,"title":{},"body":{"coverage.html":{}}}],["16/17",{"_index":1130,"title":{},"body":{"coverage.html":{}}}],["2",{"_index":1225,"title":{},"body":{"overview.html":{}}}],["2.0.0",{"_index":1162,"title":{},"body":{"dependencies.html":{}}}],["2.29.1",{"_index":1159,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":1124,"title":{},"body":{"coverage.html":{}}}],["2006','2007','2008','2009','2010','2011",{"_index":1039,"title":{},"body":{"components/WastesComponent.html":{}}}],["21/21",{"_index":1125,"title":{},"body":{"coverage.html":{}}}],["22/22",{"_index":1136,"title":{},"body":{"coverage.html":{}}}],["23,54,34,33,25,19],label",{"_index":1036,"title":{},"body":{"components/WastesComponent.html":{}}}],["25.3.0",{"_index":1154,"title":{},"body":{"dependencies.html":{}}}],["250px",{"_index":585,"title":{},"body":{"components/MatApprovedPickerRenderComponent.html":{},"components/MatContractPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{}}}],["27/27",{"_index":1121,"title":{},"body":{"coverage.html":{}}}],["3",{"_index":1073,"title":{},"body":{"components/WastesComponent.html":{},"overview.html":{}}}],["3.3.2",{"_index":1158,"title":{},"body":{"dependencies.html":{}}}],["3.4vw",{"_index":519,"title":{},"body":{"components/InitialViewComponent.html":{},"components/WastesComponent.html":{}}}],["300",{"_index":871,"title":{},"body":{"components/ServicesComponent.html":{},"components/WastesComponent.html":{}}}],["35/35",{"_index":1119,"title":{},"body":{"coverage.html":{}}}],["350px",{"_index":584,"title":{},"body":{"components/MatApprovedPickerRenderComponent.html":{},"components/MatContractPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{}}}],["38/38",{"_index":1127,"title":{},"body":{"coverage.html":{}}}],["3e3e42cc",{"_index":1110,"title":{},"body":{"components/WastesComponent.html":{}}}],["3px",{"_index":503,"title":{},"body":{"components/InitialViewComponent.html":{},"components/WastesComponent.html":{}}}],["4/4",{"_index":1117,"title":{},"body":{"coverage.html":{}}}],["5",{"_index":517,"title":{},"body":{"components/InitialViewComponent.html":{}}}],["5.0.1",{"_index":1156,"title":{},"body":{"dependencies.html":{}}}],["5/5",{"_index":1137,"title":{},"body":{"coverage.html":{}}}],["6.6.0",{"_index":1160,"title":{},"body":{"dependencies.html":{}}}],["65,85,45,74,83,71],label",{"_index":1034,"title":{},"body":{"components/WastesComponent.html":{}}}],["70",{"_index":515,"title":{},"body":{"components/InitialViewComponent.html":{}}}],["8/8",{"_index":1139,"title":{},"body":{"coverage.html":{}}}],["9",{"_index":674,"title":{},"body":{"components/MatApprovedPickerRenderComponent.html":{},"components/MatContractPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{}}}],["9/9",{"_index":1123,"title":{},"body":{"coverage.html":{}}}],["90",{"_index":502,"title":{},"body":{"components/InitialViewComponent.html":{},"components/WastesComponent.html":{}}}],["93",{"_index":1133,"title":{},"body":{"coverage.html":{}}}],["94",{"_index":1129,"title":{},"body":{"coverage.html":{}}}],["_bottomsheet",{"_index":822,"title":{},"body":{"components/ServicesComponent.html":{},"components/WastesComponent.html":{}}}],["_snackbar",{"_index":402,"title":{},"body":{"classes/EmailErrorStateMatcher.html":{},"components/LoginComponent.html":{},"classes/PasswordErrorStateMatcher.html":{}}}],["abrir",{"_index":1028,"title":{},"body":{"components/WastesComponent.html":{}}}],["abvaluegetter",{"_index":1014,"title":{},"body":{"components/WastesComponent.html":{}}}],["abvaluegetter(params",{"_index":1019,"title":{},"body":{"components/WastesComponent.html":{}}}],["acceso",{"_index":562,"title":{},"body":{"injectables/LoginService.html":{},"injectables/ServicesService.html":{},"injectables/UsersService.html":{}}}],["accion",{"_index":849,"title":{},"body":{"components/ServicesComponent.html":{},"components/WastesComponent.html":{}}}],["activo",{"_index":1074,"title":{},"body":{"components/WastesComponent.html":{}}}],["activo\",\"inactivo",{"_index":726,"title":{},"body":{"components/MatContractPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{}}}],["actual_component",{"_index":118,"title":{},"body":{"components/AppComponent.html":{},"components/InitialViewComponent.html":{},"components/LoginComponent.html":{},"components/MatApprovedPickerRenderComponent.html":{},"components/MatContractPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{},"components/ServicesComponent.html":{},"components/WastesComponent.html":{}}}],["addprofilesmodalcomponent",{"_index":147,"title":{},"body":{"modules/AppModule.html":{}}}],["address",{"_index":330,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["addservicemodalcomponent",{"_index":148,"title":{},"body":{"modules/AppModule.html":{},"components/ServicesComponent.html":{}}}],["addusermodalcomponent",{"_index":149,"title":{},"body":{"modules/AppModule.html":{}}}],["afterguiattached",{"_index":660,"title":{},"body":{"components/MatApprovedPickerRenderComponent.html":{},"components/MatContractPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{}}}],["ag",{"_index":199,"title":{},"body":{"modules/AppModule.html":{},"components/MatApprovedPickerRenderComponent.html":{},"components/MatContractPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{},"dependencies.html":{}}}],["aggridmodule",{"_index":198,"title":{},"body":{"modules/AppModule.html":{}}}],["aggridmodule.withcomponents",{"_index":249,"title":{},"body":{"modules/AppModule.html":{}}}],["aginit",{"_index":593,"title":{},"body":{"components/MatApprovedPickerRenderComponent.html":{},"components/MatContractPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{}}}],["aginit(params",{"_index":600,"title":{},"body":{"components/MatApprovedPickerRenderComponent.html":{},"components/MatContractPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{}}}],["agregar",{"_index":954,"title":{},"body":{"injectables/ServicesService.html":{},"injectables/UsersService.html":{}}}],["agtextcolumnfilter",{"_index":1058,"title":{},"body":{"components/WastesComponent.html":{}}}],["al",{"_index":273,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"classes/EmailErrorStateMatcher.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"classes/PasswordErrorStateMatcher.html":{},"components/ServicesComponent.html":{},"injectables/ServicesService.html":{},"injectables/UsersService.html":{},"components/WastesComponent.html":{}}}],["alejar",{"_index":143,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["alertas",{"_index":405,"title":{},"body":{"classes/EmailErrorStateMatcher.html":{},"components/LoginComponent.html":{},"classes/PasswordErrorStateMatcher.html":{}}}],["align",{"_index":521,"title":{},"body":{"components/InitialViewComponent.html":{}}}],["along",{"_index":679,"title":{},"body":{"components/MatApprovedPickerRenderComponent.html":{},"components/MatContractPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{}}}],["ampliar",{"_index":141,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["angular",{"_index":201,"title":{},"body":{"modules/AppModule.html":{},"components/MatApprovedPickerRenderComponent.html":{},"components/MatContractPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{},"dependencies.html":{},"index.html":{}}}],["angular/animations",{"_index":1144,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":1146,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":1148,"title":{},"body":{"dependencies.html":{}}}],["angular/common/http",{"_index":161,"title":{},"body":{"modules/AppModule.html":{},"interceptors/AuthInterceptor.html":{},"injectables/LoginService.html":{},"injectables/ServicesService.html":{},"injectables/UsersService.html":{}}}],["angular/compiler",{"_index":1149,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":76,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interceptors/AuthInterceptor.html":{},"classes/EmailErrorStateMatcher.html":{},"components/InitialViewComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/MatApprovedPickerRenderComponent.html":{},"components/MatContractPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{},"classes/PasswordErrorStateMatcher.html":{},"components/ServicesComponent.html":{},"injectables/ServicesService.html":{},"injectables/UsersService.html":{},"components/WastesComponent.html":{},"dependencies.html":{}}}],["angular/flex",{"_index":189,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":184,"title":{},"body":{"modules/AppModule.html":{},"classes/EmailErrorStateMatcher.html":{},"components/LoginComponent.html":{},"classes/PasswordErrorStateMatcher.html":{},"dependencies.html":{}}}],["angular/material",{"_index":1152,"title":{},"body":{"dependencies.html":{}}}],["angular/material/bottom",{"_index":223,"title":{},"body":{"modules/AppModule.html":{},"components/ServicesComponent.html":{},"components/WastesComponent.html":{}}}],["angular/material/button",{"_index":177,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/card",{"_index":171,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/core",{"_index":181,"title":{},"body":{"modules/AppModule.html":{},"classes/EmailErrorStateMatcher.html":{},"components/LoginComponent.html":{},"classes/PasswordErrorStateMatcher.html":{}}}],["angular/material/datepicker",{"_index":216,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/divider",{"_index":173,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/form",{"_index":208,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/grid",{"_index":168,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/icon",{"_index":192,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/input",{"_index":175,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/list",{"_index":244,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/menu",{"_index":214,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/select",{"_index":211,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/snack",{"_index":226,"title":{},"body":{"modules/AppModule.html":{},"classes/EmailErrorStateMatcher.html":{},"components/LoginComponent.html":{},"classes/PasswordErrorStateMatcher.html":{}}}],["angular/material/tabs",{"_index":196,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/tooltip",{"_index":194,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/platform",{"_index":156,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":259,"title":{},"body":{"modules/AppRoutingModule.html":{},"dependencies.html":{}}}],["api",{"_index":323,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["app",{"_index":28,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/EmailErrorStateMatcher.html":{},"components/InitialViewComponent.html":{},"components/LoginComponent.html":{},"components/MatApprovedPickerRenderComponent.html":{},"components/MatContractPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{},"classes/PasswordErrorStateMatcher.html":{},"components/ServicesComponent.html":{},"components/WastesComponent.html":{},"index.html":{}}}],["app.component",{"_index":163,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":33,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":31,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/InitialViewComponent.html":{},"components/LoginComponent.html":{},"components/MatApprovedPickerRenderComponent.html":{},"components/MatContractPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{},"components/ServicesComponent.html":{},"components/WastesComponent.html":{},"coverage.html":{},"overview.html":{}}}],["application",{"_index":696,"title":{},"body":{"components/MatApprovedPickerRenderComponent.html":{},"components/MatContractPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{}}}],["appmodule",{"_index":126,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approutingmodule",{"_index":139,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["approved",{"_index":239,"title":{},"body":{"modules/AppModule.html":{},"components/MatApprovedPickerRenderComponent.html":{},"coverage.html":{}}}],["aprobado\",\"sin",{"_index":650,"title":{},"body":{"components/MatApprovedPickerRenderComponent.html":{}}}],["aprobar",{"_index":651,"title":{},"body":{"components/MatApprovedPickerRenderComponent.html":{}}}],["archivo",{"_index":1104,"title":{},"body":{"components/WastesComponent.html":{}}}],["archivos",{"_index":1031,"title":{},"body":{"components/WastesComponent.html":{}}}],["arranque",{"_index":154,"title":{},"body":{"modules/AppModule.html":{}}}],["array",{"_index":299,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"components/MatApprovedPickerRenderComponent.html":{},"components/MatContractPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{},"components/ServicesComponent.html":{},"components/WastesComponent.html":{}}}],["artifacts",{"_index":1190,"title":{},"body":{"index.html":{}}}],["asignar",{"_index":580,"title":{},"body":{"components/MatApprovedPickerRenderComponent.html":{},"components/MatContractPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{}}}],["asociar",{"_index":962,"title":{},"body":{"injectables/ServicesService.html":{}}}],["assume",{"_index":693,"title":{},"body":{"components/MatApprovedPickerRenderComponent.html":{},"components/MatContractPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{}}}],["async",{"_index":817,"title":{},"body":{"components/ServicesComponent.html":{},"components/WastesComponent.html":{}}}],["autenticado",{"_index":445,"title":{},"body":{"components/InitialViewComponent.html":{}}}],["authenticar",{"_index":556,"title":{},"body":{"injectables/LoginService.html":{}}}],["authinterceptor",{"_index":140,"title":{"interceptors/AuthInterceptor.html":{}},"body":{"modules/AppModule.html":{},"interceptors/AuthInterceptor.html":{},"coverage.html":{},"overview.html":{}}}],["automatically",{"_index":1181,"title":{},"body":{"index.html":{}}}],["await",{"_index":891,"title":{},"body":{"components/ServicesComponent.html":{}}}],["b",{"_index":1037,"title":{},"body":{"components/WastesComponent.html":{}}}],["back",{"_index":681,"title":{},"body":{"components/MatApprovedPickerRenderComponent.html":{},"components/MatContractPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{}}}],["backend",{"_index":270,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"injectables/LoginService.html":{},"injectables/ServicesService.html":{},"injectables/UsersService.html":{}}}],["background",{"_index":489,"title":{},"body":{"components/InitialViewComponent.html":{},"components/WastesComponent.html":{}}}],["background:#ff6c556e",{"_index":512,"title":{},"body":{"components/InitialViewComponent.html":{}}}],["bar",{"_index":227,"title":{},"body":{"modules/AppModule.html":{},"classes/EmailErrorStateMatcher.html":{},"components/LoginComponent.html":{},"classes/PasswordErrorStateMatcher.html":{},"components/WastesComponent.html":{}}}],["barchartdata",{"_index":1003,"title":{},"body":{"components/WastesComponent.html":{}}}],["barchartlabels",{"_index":1004,"title":{},"body":{"components/WastesComponent.html":{}}}],["barchartlegend",{"_index":1005,"title":{},"body":{"components/WastesComponent.html":{}}}],["barchartoptions",{"_index":1006,"title":{},"body":{"components/WastesComponent.html":{}}}],["barcharttype",{"_index":1007,"title":{},"body":{"components/WastesComponent.html":{}}}],["baseurl",{"_index":546,"title":{},"body":{"injectables/LoginService.html":{},"injectables/ServicesService.html":{},"injectables/UsersService.html":{}}}],["bathrooms'},{'name",{"_index":94,"title":{},"body":{"components/AppComponent.html":{},"components/InitialViewComponent.html":{},"components/LoginComponent.html":{},"components/MatApprovedPickerRenderComponent.html":{},"components/MatContractPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{},"components/ServicesComponent.html":{},"components/WastesComponent.html":{}}}],["bathroomscomponent",{"_index":93,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/InitialViewComponent.html":{},"components/LoginComponent.html":{},"components/MatApprovedPickerRenderComponent.html":{},"components/MatContractPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{},"components/ServicesComponent.html":{},"components/WastesComponent.html":{},"coverage.html":{},"overview.html":{}}}],["baños",{"_index":483,"title":{},"body":{"components/InitialViewComponent.html":{}}}],["beta.34",{"_index":1151,"title":{},"body":{"dependencies.html":{}}}],["blank",{"_index":701,"title":{},"body":{"components/MatApprovedPickerRenderComponent.html":{},"components/MatContractPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{}}}],["block",{"_index":508,"title":{},"body":{"components/InitialViewComponent.html":{}}}],["bool",{"_index":321,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"classes/EmailErrorStateMatcher.html":{},"components/InitialViewComponent.html":{},"components/LoginComponent.html":{},"components/MatApprovedPickerRenderComponent.html":{},"components/MatContractPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{},"classes/PasswordErrorStateMatcher.html":{},"components/ServicesComponent.html":{},"components/WastesComponent.html":{}}}],["boolean",{"_index":298,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"classes/EmailErrorStateMatcher.html":{},"components/InitialViewComponent.html":{},"components/LoginComponent.html":{},"components/MatApprovedPickerRenderComponent.html":{},"components/MatContractPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{},"classes/PasswordErrorStateMatcher.html":{},"components/ServicesComponent.html":{}}}],["bootstrap",{"_index":131,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["border",{"_index":491,"title":{},"body":{"components/InitialViewComponent.html":{}}}],["boton",{"_index":861,"title":{},"body":{"components/ServicesComponent.html":{}}}],["botoom",{"_index":218,"title":{},"body":{"modules/AppModule.html":{}}}],["bottom",{"_index":496,"title":{},"body":{"components/InitialViewComponent.html":{}}}],["browser",{"_index":157,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["browser/animations",{"_index":165,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":164,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":155,"title":{},"body":{"modules/AppModule.html":{}}}],["build",{"_index":1189,"title":{},"body":{"index.html":{}}}],["cabeceras",{"_index":269,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["cambiar",{"_index":48,"title":{},"body":{"components/AppComponent.html":{},"components/InitialViewComponent.html":{}}}],["cambios",{"_index":828,"title":{},"body":{"components/ServicesComponent.html":{}}}],["campo",{"_index":342,"title":{},"body":{"classes/EmailErrorStateMatcher.html":{},"components/LoginComponent.html":{},"classes/PasswordErrorStateMatcher.html":{}}}],["campos",{"_index":349,"title":{},"body":{"classes/EmailErrorStateMatcher.html":{},"components/LoginComponent.html":{},"classes/PasswordErrorStateMatcher.html":{}}}],["captura",{"_index":346,"title":{},"body":{"classes/EmailErrorStateMatcher.html":{},"components/LoginComponent.html":{},"classes/PasswordErrorStateMatcher.html":{}}}],["capturadora",{"_index":398,"title":{},"body":{"classes/EmailErrorStateMatcher.html":{},"components/LoginComponent.html":{},"classes/PasswordErrorStateMatcher.html":{}}}],["capturar",{"_index":827,"title":{},"body":{"components/ServicesComponent.html":{}}}],["carga",{"_index":1030,"title":{},"body":{"components/WastesComponent.html":{}}}],["cell",{"_index":582,"title":{},"body":{"components/MatApprovedPickerRenderComponent.html":{},"components/MatContractPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{}}}],["cell'},{'name",{"_index":104,"title":{},"body":{"components/AppComponent.html":{},"components/InitialViewComponent.html":{},"components/LoginComponent.html":{},"components/MatApprovedPickerRenderComponent.html":{},"components/MatContractPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{},"components/ServicesComponent.html":{},"components/WastesComponent.html":{}}}],["celleditor",{"_index":877,"title":{},"body":{"components/ServicesComponent.html":{}}}],["center",{"_index":523,"title":{},"body":{"components/InitialViewComponent.html":{}}}],["cerradco",{"_index":631,"title":{},"body":{"components/MatApprovedPickerRenderComponent.html":{},"components/MatContractPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{}}}],["cerrado",{"_index":1033,"title":{},"body":{"components/WastesComponent.html":{}}}],["cesion",{"_index":291,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["change",{"_index":1183,"title":{},"body":{"index.html":{}}}],["change_status",{"_index":883,"title":{},"body":{"components/ServicesComponent.html":{}}}],["changemodule",{"_index":436,"title":{},"body":{"components/InitialViewComponent.html":{}}}],["changemodule(selection",{"_index":446,"title":{},"body":{"components/InitialViewComponent.html":{}}}],["changemodule(selection:string",{"_index":477,"title":{},"body":{"components/InitialViewComponent.html":{}}}],["changeservicegridevent",{"_index":809,"title":{},"body":{"components/ServicesComponent.html":{}}}],["changeservicegridevent(event",{"_index":825,"title":{},"body":{"components/ServicesComponent.html":{}}}],["chart",{"_index":1088,"title":{},"body":{"components/WastesComponent.html":{}}}],["chart.js",{"_index":1157,"title":{},"body":{"dependencies.html":{}}}],["check",{"_index":1211,"title":{},"body":{"index.html":{}}}],["checkperm",{"_index":437,"title":{},"body":{"components/InitialViewComponent.html":{}}}],["checkperm(perm",{"_index":452,"title":{},"body":{"components/InitialViewComponent.html":{}}}],["clase",{"_index":340,"title":{},"body":{"classes/EmailErrorStateMatcher.html":{},"components/LoginComponent.html":{},"classes/PasswordErrorStateMatcher.html":{}}}],["clases",{"_index":338,"title":{},"body":{"classes/EmailErrorStateMatcher.html":{},"classes/PasswordErrorStateMatcher.html":{},"overview.html":{}}}],["class",{"_index":78,"title":{"classes/EmailErrorStateMatcher.html":{},"classes/PasswordErrorStateMatcher.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interceptors/AuthInterceptor.html":{},"classes/EmailErrorStateMatcher.html":{},"components/InitialViewComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/MatApprovedPickerRenderComponent.html":{},"components/MatContractPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{},"classes/PasswordErrorStateMatcher.html":{},"components/ServicesComponent.html":{},"injectables/ServicesService.html":{},"injectables/UsersService.html":{},"components/WastesComponent.html":{},"coverage.html":{}}}],["cli",{"_index":1171,"title":{},"body":{"index.html":{}}}],["cliente",{"_index":552,"title":{},"body":{"injectables/LoginService.html":{},"injectables/ServicesService.html":{},"injectables/UsersService.html":{}}}],["cluster_appmodule",{"_index":134,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":137,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":138,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":136,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":135,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cobertura",{"_index":1114,"title":{},"body":{"coverage.html":{}}}],["code",{"_index":1185,"title":{},"body":{"index.html":{}}}],["coincidan",{"_index":124,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interceptors/AuthInterceptor.html":{},"classes/EmailErrorStateMatcher.html":{},"components/InitialViewComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/MatApprovedPickerRenderComponent.html":{},"components/MatContractPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{},"classes/PasswordErrorStateMatcher.html":{},"components/ServicesComponent.html":{},"injectables/ServicesService.html":{},"injectables/UsersService.html":{},"components/WastesComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{}}}],["color",{"_index":499,"title":{},"body":{"components/InitialViewComponent.html":{},"components/WastesComponent.html":{}}}],["color:white",{"_index":497,"title":{},"body":{"components/InitialViewComponent.html":{}}}],["column",{"_index":1054,"title":{},"body":{"components/WastesComponent.html":{}}}],["columna",{"_index":856,"title":{},"body":{"components/ServicesComponent.html":{},"components/WastesComponent.html":{}}}],["columnas",{"_index":885,"title":{},"body":{"components/ServicesComponent.html":{},"components/WastesComponent.html":{}}}],["comercial",{"_index":484,"title":{},"body":{"components/InitialViewComponent.html":{}}}],["command",{"_index":1214,"title":{},"body":{"index.html":{}}}],["commercial'},{'name",{"_index":96,"title":{},"body":{"components/AppComponent.html":{},"components/InitialViewComponent.html":{},"components/LoginComponent.html":{},"components/MatApprovedPickerRenderComponent.html":{},"components/MatContractPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{},"components/ServicesComponent.html":{},"components/WastesComponent.html":{}}}],["commercialcomponent",{"_index":95,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/InitialViewComponent.html":{},"components/LoginComponent.html":{},"components/MatApprovedPickerRenderComponent.html":{},"components/MatContractPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{},"components/ServicesComponent.html":{},"components/WastesComponent.html":{},"coverage.html":{},"overview.html":{}}}],["community",{"_index":1155,"title":{},"body":{"dependencies.html":{}}}],["completa",{"_index":630,"title":{},"body":{"components/MatApprovedPickerRenderComponent.html":{},"components/MatContractPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/InitialViewComponent.html":{},"components/LoginComponent.html":{},"components/MatApprovedPickerRenderComponent.html":{},"components/MatContractPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{},"components/ServicesComponent.html":{},"components/WastesComponent.html":{}},"body":{"components/AppComponent.html":{},"classes/EmailErrorStateMatcher.html":{},"components/InitialViewComponent.html":{},"components/LoginComponent.html":{},"components/MatApprovedPickerRenderComponent.html":{},"components/MatContractPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{},"classes/PasswordErrorStateMatcher.html":{},"components/ServicesComponent.html":{},"components/WastesComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":89,"title":{},"body":{"components/AppComponent.html":{},"components/InitialViewComponent.html":{},"components/LoginComponent.html":{},"components/MatApprovedPickerRenderComponent.html":{},"components/MatContractPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{},"components/ServicesComponent.html":{},"components/WastesComponent.html":{}}}],["componente",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"classes/EmailErrorStateMatcher.html":{},"components/InitialViewComponent.html":{},"components/LoginComponent.html":{},"components/MatApprovedPickerRenderComponent.html":{},"components/MatContractPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{},"classes/PasswordErrorStateMatcher.html":{},"components/ServicesComponent.html":{},"components/WastesComponent.html":{}}}],["componentes",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/InitialViewComponent.html":{},"components/LoginComponent.html":{},"components/MatApprovedPickerRenderComponent.html":{},"components/MatContractPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{},"components/ServicesComponent.html":{},"components/WastesComponent.html":{},"overview.html":{}}}],["components",{"_index":90,"title":{},"body":{"components/AppComponent.html":{},"components/InitialViewComponent.html":{},"components/LoginComponent.html":{},"components/MatApprovedPickerRenderComponent.html":{},"components/MatContractPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{},"components/ServicesComponent.html":{},"components/WastesComponent.html":{}}}],["components/bathrooms/bathrooms.component",{"_index":217,"title":{},"body":{"modules/AppModule.html":{}}}],["components/commercial/commercial.component",{"_index":236,"title":{},"body":{"modules/AppModule.html":{}}}],["components/initial",{"_index":185,"title":{},"body":{"modules/AppModule.html":{}}}],["components/login/login.component",{"_index":166,"title":{},"body":{"modules/AppModule.html":{}}}],["components/services/services.component",{"_index":235,"title":{},"body":{"modules/AppModule.html":{}}}],["components/users/users.component",{"_index":197,"title":{},"body":{"modules/AppModule.html":{}}}],["components/utils/mat",{"_index":202,"title":{},"body":{"modules/AppModule.html":{}}}],["components/wastes/wastes.component",{"_index":212,"title":{},"body":{"modules/AppModule.html":{}}}],["con",{"_index":21,"title":{},"body":{"components/AppComponent.html":{},"components/InitialViewComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/MatApprovedPickerRenderComponent.html":{},"components/MatContractPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{},"components/ServicesComponent.html":{},"injectables/ServicesService.html":{},"injectables/UsersService.html":{},"components/WastesComponent.html":{}}}],["concentra",{"_index":427,"title":{},"body":{"components/InitialViewComponent.html":{}}}],["conexion",{"_index":20,"title":{},"body":{"components/AppComponent.html":{}}}],["console.log(\"aqui",{"_index":776,"title":{},"body":{"components/MatProfilesPickerRenderComponent.html":{}}}],["console.log(\"inicio",{"_index":769,"title":{},"body":{"components/MatProfilesPickerRenderComponent.html":{}}}],["console.log('url",{"_index":334,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["console.log(datafromchild",{"_index":1097,"title":{},"body":{"components/WastesComponent.html":{}}}],["console.log(params",{"_index":774,"title":{},"body":{"components/MatProfilesPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{}}}],["console.log(this.contracts",{"_index":730,"title":{},"body":{"components/MatContractPickerRenderComponent.html":{},"components/ServicesComponent.html":{}}}],["console.log(this.dias",{"_index":669,"title":{},"body":{"components/MatApprovedPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{}}}],["console.log(this.input",{"_index":775,"title":{},"body":{"components/MatProfilesPickerRenderComponent.html":{}}}],["console.log(this.modules",{"_index":751,"title":{},"body":{"components/MatModulesPickerRenderComponent.html":{},"components/ServicesComponent.html":{}}}],["console.log(this.profiles",{"_index":773,"title":{},"body":{"components/MatProfilesPickerRenderComponent.html":{}}}],["console.log(this.servicerowdata",{"_index":896,"title":{},"body":{"components/ServicesComponent.html":{}}}],["console.log(this.services",{"_index":786,"title":{},"body":{"components/MatServicesPickerRenderComponent.html":{}}}],["const",{"_index":260,"title":{},"body":{"modules/AppRoutingModule.html":{},"classes/EmailErrorStateMatcher.html":{},"components/LoginComponent.html":{},"classes/PasswordErrorStateMatcher.html":{}}}],["constructor",{"_index":281,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"classes/EmailErrorStateMatcher.html":{},"components/InitialViewComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"classes/PasswordErrorStateMatcher.html":{},"components/ServicesComponent.html":{},"injectables/ServicesService.html":{},"injectables/UsersService.html":{},"components/WastesComponent.html":{}}}],["constructor(_bottomsheet",{"_index":1017,"title":{},"body":{"components/WastesComponent.html":{}}}],["constructor(http",{"_index":548,"title":{},"body":{"injectables/LoginService.html":{},"injectables/ServicesService.html":{},"injectables/UsersService.html":{}}}],["constructor(loginservice",{"_index":440,"title":{},"body":{"components/InitialViewComponent.html":{},"components/LoginComponent.html":{}}}],["constructor(private",{"_index":468,"title":{},"body":{"components/InitialViewComponent.html":{},"injectables/LoginService.html":{},"components/ServicesComponent.html":{},"injectables/ServicesService.html":{},"injectables/UsersService.html":{},"components/WastesComponent.html":{}}}],["constructor(servicesservice",{"_index":820,"title":{},"body":{"components/ServicesComponent.html":{}}}],["consultar",{"_index":945,"title":{},"body":{"injectables/ServicesService.html":{}}}],["container",{"_index":583,"title":{},"body":{"components/MatApprovedPickerRenderComponent.html":{},"components/MatContractPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{}}}],["content",{"_index":525,"title":{},"body":{"components/InitialViewComponent.html":{}}}],["contid",{"_index":947,"title":{},"body":{"injectables/ServicesService.html":{}}}],["contid',celleditorparams:{contracts",{"_index":875,"title":{},"body":{"components/ServicesComponent.html":{}}}],["contract",{"_index":238,"title":{},"body":{"modules/AppModule.html":{},"components/MatContractPickerRenderComponent.html":{},"components/ServicesComponent.html":{},"coverage.html":{}}}],["contract.contname",{"_index":708,"title":{},"body":{"components/MatContractPickerRenderComponent.html":{}}}],["contractgetter",{"_index":810,"title":{},"body":{"components/ServicesComponent.html":{}}}],["contractgetterformat",{"_index":811,"title":{},"body":{"components/ServicesComponent.html":{}}}],["contractgetterformat(event",{"_index":832,"title":{},"body":{"components/ServicesComponent.html":{}}}],["contractpicker",{"_index":878,"title":{},"body":{"components/ServicesComponent.html":{}}}],["contracts",{"_index":709,"title":{},"body":{"components/MatContractPickerRenderComponent.html":{},"components/ServicesComponent.html":{}}}],["contraseña",{"_index":538,"title":{},"body":{"components/LoginComponent.html":{},"injectables/LoginService.html":{}}}],["contrato",{"_index":718,"title":{},"body":{"components/MatContractPickerRenderComponent.html":{},"components/ServicesComponent.html":{},"injectables/ServicesService.html":{}}}],["contrato',editable",{"_index":874,"title":{},"body":{"components/ServicesComponent.html":{}}}],["contratos",{"_index":707,"title":{},"body":{"components/MatContractPickerRenderComponent.html":{},"components/ServicesComponent.html":{},"injectables/ServicesService.html":{}}}],["control",{"_index":360,"title":{},"body":{"classes/EmailErrorStateMatcher.html":{},"components/LoginComponent.html":{},"classes/PasswordErrorStateMatcher.html":{}}}],["control.dirty",{"_index":377,"title":{},"body":{"classes/EmailErrorStateMatcher.html":{},"components/LoginComponent.html":{},"classes/PasswordErrorStateMatcher.html":{}}}],["control.invalid",{"_index":376,"title":{},"body":{"classes/EmailErrorStateMatcher.html":{},"components/LoginComponent.html":{},"classes/PasswordErrorStateMatcher.html":{}}}],["control.touched",{"_index":378,"title":{},"body":{"classes/EmailErrorStateMatcher.html":{},"components/LoginComponent.html":{},"classes/PasswordErrorStateMatcher.html":{}}}],["conversion",{"_index":1021,"title":{},"body":{"components/WastesComponent.html":{}}}],["convertido",{"_index":1023,"title":{},"body":{"components/WastesComponent.html":{}}}],["corregir",{"_index":422,"title":{},"body":{"classes/EmailErrorStateMatcher.html":{},"components/LoginComponent.html":{},"classes/PasswordErrorStateMatcher.html":{}}}],["countchangedhandler",{"_index":39,"title":{},"body":{"components/AppComponent.html":{}}}],["countchangedhandler(status",{"_index":40,"title":{},"body":{"components/AppComponent.html":{}}}],["coverage",{"_index":1113,"title":{"coverage.html":{}},"body":{}}],["crear",{"_index":836,"title":{},"body":{"components/ServicesComponent.html":{}}}],["createservice",{"_index":812,"title":{},"body":{"components/ServicesComponent.html":{}}}],["cuando",{"_index":603,"title":{},"body":{"components/MatApprovedPickerRenderComponent.html":{},"components/MatContractPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{},"components/WastesComponent.html":{}}}],["custom",{"_index":1094,"title":{},"body":{"components/WastesComponent.html":{}}}],["cycle",{"_index":680,"title":{},"body":{"components/MatApprovedPickerRenderComponent.html":{},"components/MatContractPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{}}}],["data",{"_index":415,"title":{},"body":{"classes/EmailErrorStateMatcher.html":{},"components/LoginComponent.html":{},"classes/PasswordErrorStateMatcher.html":{},"components/ServicesComponent.html":{},"injectables/ServicesService.html":{},"components/WastesComponent.html":{}}}],["data:{contracts:this.contracts,modules:this.modules",{"_index":910,"title":{},"body":{"components/ServicesComponent.html":{}}}],["datafromchild",{"_index":1096,"title":{},"body":{"components/WastesComponent.html":{}}}],["datafromchild.servicerow",{"_index":1098,"title":{},"body":{"components/WastesComponent.html":{}}}],["datafromchild.userrow",{"_index":1100,"title":{},"body":{"components/WastesComponent.html":{}}}],["datatoupload",{"_index":904,"title":{},"body":{"components/ServicesComponent.html":{}}}],["datos",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"components/InitialViewComponent.html":{},"components/LoginComponent.html":{},"components/MatApprovedPickerRenderComponent.html":{},"components/MatContractPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{},"components/ServicesComponent.html":{},"injectables/ServicesService.html":{},"components/WastesComponent.html":{}}}],["de",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interceptors/AuthInterceptor.html":{},"classes/EmailErrorStateMatcher.html":{},"components/InitialViewComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/MatApprovedPickerRenderComponent.html":{},"components/MatContractPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{},"classes/PasswordErrorStateMatcher.html":{},"components/ServicesComponent.html":{},"injectables/ServicesService.html":{},"injectables/UsersService.html":{},"components/WastesComponent.html":{},"coverage.html":{}}}],["declaraciones",{"_index":145,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{}}}],["declarations",{"_index":130,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["decoradores",{"_index":639,"title":{},"body":{"components/MatApprovedPickerRenderComponent.html":{},"components/MatContractPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{}}}],["default",{"_index":1057,"title":{},"body":{"components/WastesComponent.html":{}}}],["defaultcoldef",{"_index":1008,"title":{},"body":{"components/WastesComponent.html":{}}}],["defecto",{"_index":63,"title":{},"body":{"components/AppComponent.html":{},"components/InitialViewComponent.html":{},"components/LoginComponent.html":{},"components/MatApprovedPickerRenderComponent.html":{},"components/MatContractPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{},"components/ServicesComponent.html":{},"components/WastesComponent.html":{}}}],["definido",{"_index":42,"title":{},"body":{"components/AppComponent.html":{},"interceptors/AuthInterceptor.html":{},"classes/EmailErrorStateMatcher.html":{},"components/InitialViewComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/MatApprovedPickerRenderComponent.html":{},"components/MatContractPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{},"classes/PasswordErrorStateMatcher.html":{},"components/ServicesComponent.html":{},"injectables/ServicesService.html":{},"injectables/UsersService.html":{},"components/WastesComponent.html":{}}}],["definir",{"_index":860,"title":{},"body":{"components/ServicesComponent.html":{},"components/WastesComponent.html":{}}}],["del",{"_index":69,"title":{},"body":{"components/AppComponent.html":{},"classes/EmailErrorStateMatcher.html":{},"components/LoginComponent.html":{},"classes/PasswordErrorStateMatcher.html":{}}}],["dependencias",{"_index":1143,"title":{},"body":{"dependencies.html":{}}}],["dependencies",{"_index":128,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["descripción",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"interceptors/AuthInterceptor.html":{},"classes/EmailErrorStateMatcher.html":{},"components/InitialViewComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/MatApprovedPickerRenderComponent.html":{},"components/MatContractPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{},"classes/PasswordErrorStateMatcher.html":{},"components/ServicesComponent.html":{},"injectables/ServicesService.html":{},"injectables/UsersService.html":{},"components/WastesComponent.html":{},"overview.html":{}}}],["desde",{"_index":563,"title":{},"body":{"injectables/LoginService.html":{},"components/MatApprovedPickerRenderComponent.html":{},"components/MatContractPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{},"components/ServicesComponent.html":{},"injectables/ServicesService.html":{},"injectables/UsersService.html":{},"components/WastesComponent.html":{}}}],["destination",{"_index":327,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["detalles",{"_index":960,"title":{},"body":{"injectables/ServicesService.html":{},"components/WastesComponent.html":{}}}],["detectar",{"_index":638,"title":{},"body":{"components/MatApprovedPickerRenderComponent.html":{},"components/MatContractPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{}}}],["dev",{"_index":1178,"title":{},"body":{"index.html":{}}}],["development",{"_index":1173,"title":{},"body":{"index.html":{}}}],["devuelve",{"_index":59,"title":{},"body":{"components/AppComponent.html":{},"interceptors/AuthInterceptor.html":{},"classes/EmailErrorStateMatcher.html":{},"components/InitialViewComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/MatApprovedPickerRenderComponent.html":{},"components/MatContractPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{},"classes/PasswordErrorStateMatcher.html":{},"components/ServicesComponent.html":{},"injectables/ServicesService.html":{},"injectables/UsersService.html":{},"components/WastesComponent.html":{}}}],["dias",{"_index":587,"title":{},"body":{"components/MatApprovedPickerRenderComponent.html":{},"components/MatContractPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{}}}],["diferentes",{"_index":428,"title":{},"body":{"components/InitialViewComponent.html":{}}}],["directiva",{"_index":87,"title":{},"body":{"components/AppComponent.html":{},"components/InitialViewComponent.html":{},"components/LoginComponent.html":{},"components/MatApprovedPickerRenderComponent.html":{},"components/MatContractPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{},"components/ServicesComponent.html":{},"components/WastesComponent.html":{}}}],["directives",{"_index":117,"title":{},"body":{"components/AppComponent.html":{},"components/InitialViewComponent.html":{},"components/LoginComponent.html":{},"components/MatApprovedPickerRenderComponent.html":{},"components/MatContractPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{},"components/ServicesComponent.html":{},"components/WastesComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":1188,"title":{},"body":{"index.html":{}}}],["directory",{"_index":1193,"title":{},"body":{"index.html":{}}}],["disp",{"_index":506,"title":{},"body":{"components/InitialViewComponent.html":{}}}],["disp:hover",{"_index":511,"title":{},"body":{"components/InitialViewComponent.html":{}}}],["display",{"_index":507,"title":{},"body":{"components/InitialViewComponent.html":{}}}],["disponible",{"_index":1223,"title":{},"body":{"modules.html":{}}}],["dist",{"_index":1192,"title":{},"body":{"index.html":{}}}],["divisor",{"_index":498,"title":{},"body":{"components/InitialViewComponent.html":{},"components/WastesComponent.html":{}}}],["documentación",{"_index":1115,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/InitialViewComponent.html":{},"components/LoginComponent.html":{},"components/MatApprovedPickerRenderComponent.html":{},"components/MatContractPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{},"components/ServicesComponent.html":{},"components/WastesComponent.html":{}}}],["dont",{"_index":658,"title":{},"body":{"components/MatApprovedPickerRenderComponent.html":{},"components/MatContractPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{}}}],["dynamic",{"_index":1153,"title":{},"body":{"dependencies.html":{}}}],["e2e",{"_index":1205,"title":{},"body":{"index.html":{}}}],["editable",{"_index":870,"title":{},"body":{"components/ServicesComponent.html":{},"components/WastesComponent.html":{}}}],["ejecutar",{"_index":384,"title":{},"body":{"classes/EmailErrorStateMatcher.html":{},"components/LoginComponent.html":{},"classes/PasswordErrorStateMatcher.html":{},"components/ServicesComponent.html":{},"components/WastesComponent.html":{}}}],["ejemplo",{"_index":58,"title":{},"body":{"components/AppComponent.html":{},"interceptors/AuthInterceptor.html":{},"classes/EmailErrorStateMatcher.html":{},"components/InitialViewComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/MatApprovedPickerRenderComponent.html":{},"components/MatContractPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{},"classes/PasswordErrorStateMatcher.html":{},"components/ServicesComponent.html":{},"injectables/ServicesService.html":{},"injectables/UsersService.html":{},"components/WastesComponent.html":{}}}],["el",{"_index":22,"title":{},"body":{"components/AppComponent.html":{},"interceptors/AuthInterceptor.html":{},"classes/EmailErrorStateMatcher.html":{},"components/InitialViewComponent.html":{},"components/LoginComponent.html":{},"components/MatApprovedPickerRenderComponent.html":{},"components/MatContractPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{},"classes/PasswordErrorStateMatcher.html":{},"components/ServicesComponent.html":{},"injectables/ServicesService.html":{},"components/WastesComponent.html":{}}}],["elemento",{"_index":85,"title":{},"body":{"components/AppComponent.html":{},"components/InitialViewComponent.html":{},"components/LoginComponent.html":{},"components/MatApprovedPickerRenderComponent.html":{},"components/MatContractPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{},"components/ServicesComponent.html":{},"components/WastesComponent.html":{}}}],["email",{"_index":343,"title":{},"body":{"classes/EmailErrorStateMatcher.html":{},"components/LoginComponent.html":{},"classes/PasswordErrorStateMatcher.html":{}}}],["emailerrorstatematcher",{"_index":337,"title":{"classes/EmailErrorStateMatcher.html":{}},"body":{"classes/EmailErrorStateMatcher.html":{},"components/LoginComponent.html":{},"classes/PasswordErrorStateMatcher.html":{},"coverage.html":{}}}],["emailformcontrol",{"_index":394,"title":{},"body":{"classes/EmailErrorStateMatcher.html":{},"components/LoginComponent.html":{},"classes/PasswordErrorStateMatcher.html":{}}}],["emailmatcher",{"_index":399,"title":{},"body":{"classes/EmailErrorStateMatcher.html":{},"components/LoginComponent.html":{},"classes/PasswordErrorStateMatcher.html":{}}}],["emision",{"_index":390,"title":{},"body":{"classes/EmailErrorStateMatcher.html":{},"components/LoginComponent.html":{},"classes/PasswordErrorStateMatcher.html":{}}}],["emisor",{"_index":292,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["emite",{"_index":443,"title":{},"body":{"components/InitialViewComponent.html":{}}}],["en",{"_index":43,"title":{},"body":{"components/AppComponent.html":{},"interceptors/AuthInterceptor.html":{},"classes/EmailErrorStateMatcher.html":{},"components/InitialViewComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/MatApprovedPickerRenderComponent.html":{},"components/MatContractPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{},"classes/PasswordErrorStateMatcher.html":{},"components/ServicesComponent.html":{},"injectables/ServicesService.html":{},"injectables/UsersService.html":{},"components/WastesComponent.html":{}}}],["encarga",{"_index":16,"title":{},"body":{"components/AppComponent.html":{},"interceptors/AuthInterceptor.html":{},"injectables/LoginService.html":{},"injectables/ServicesService.html":{},"injectables/UsersService.html":{}}}],["encargado",{"_index":381,"title":{},"body":{"classes/EmailErrorStateMatcher.html":{},"components/LoginComponent.html":{},"classes/PasswordErrorStateMatcher.html":{},"components/ServicesComponent.html":{},"components/WastesComponent.html":{}}}],["end",{"_index":1204,"title":{},"body":{"index.html":{}}}],["enter",{"_index":690,"title":{},"body":{"components/MatApprovedPickerRenderComponent.html":{},"components/MatContractPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{}}}],["entorno",{"_index":565,"title":{},"body":{"injectables/LoginService.html":{},"injectables/ServicesService.html":{},"injectables/UsersService.html":{}}}],["entrada",{"_index":146,"title":{},"body":{"modules/AppModule.html":{}}}],["entradas",{"_index":646,"title":{},"body":{"components/MatApprovedPickerRenderComponent.html":{},"components/MatContractPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{}}}],["entry",{"_index":852,"title":{},"body":{"components/ServicesComponent.html":{},"components/WastesComponent.html":{}}}],["entrycomponents",{"_index":254,"title":{},"body":{"modules/AppModule.html":{}}}],["envia",{"_index":990,"title":{},"body":{"injectables/UsersService.html":{}}}],["environment",{"_index":566,"title":{},"body":{"injectables/LoginService.html":{},"injectables/ServicesService.html":{},"injectables/UsersService.html":{}}}],["environment.baseurl",{"_index":571,"title":{},"body":{"injectables/LoginService.html":{},"injectables/ServicesService.html":{},"injectables/UsersService.html":{}}}],["errores",{"_index":341,"title":{},"body":{"classes/EmailErrorStateMatcher.html":{},"components/LoginComponent.html":{},"classes/PasswordErrorStateMatcher.html":{}}}],["errorstatematcher",{"_index":178,"title":{},"body":{"modules/AppModule.html":{},"classes/EmailErrorStateMatcher.html":{},"components/LoginComponent.html":{},"classes/PasswordErrorStateMatcher.html":{}}}],["es",{"_index":364,"title":{},"body":{"classes/EmailErrorStateMatcher.html":{},"components/LoginComponent.html":{},"components/MatApprovedPickerRenderComponent.html":{},"components/MatContractPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{},"classes/PasswordErrorStateMatcher.html":{},"components/ServicesComponent.html":{},"components/WastesComponent.html":{}}}],["especificado",{"_index":457,"title":{},"body":{"components/InitialViewComponent.html":{}}}],["especifico",{"_index":944,"title":{},"body":{"injectables/ServicesService.html":{}}}],["esta",{"_index":344,"title":{},"body":{"classes/EmailErrorStateMatcher.html":{},"components/LoginComponent.html":{},"classes/PasswordErrorStateMatcher.html":{}}}],["estado",{"_index":49,"title":{},"body":{"components/AppComponent.html":{},"injectables/LoginService.html":{},"components/MatApprovedPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{},"components/ServicesComponent.html":{},"injectables/ServicesService.html":{},"injectables/UsersService.html":{},"components/WastesComponent.html":{}}}],["estados",{"_index":653,"title":{},"body":{"components/MatApprovedPickerRenderComponent.html":{},"components/MatContractPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{}}}],["este",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"interceptors/AuthInterceptor.html":{},"classes/EmailErrorStateMatcher.html":{},"components/InitialViewComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/MatApprovedPickerRenderComponent.html":{},"components/MatContractPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{},"classes/PasswordErrorStateMatcher.html":{},"components/ServicesComponent.html":{},"injectables/ServicesService.html":{},"injectables/UsersService.html":{},"components/WastesComponent.html":{}}}],["etiquetas",{"_index":1041,"title":{},"body":{"components/WastesComponent.html":{}}}],["event",{"_index":625,"title":{},"body":{"components/MatApprovedPickerRenderComponent.html":{},"components/MatContractPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{},"components/ServicesComponent.html":{}}}],["event.data.contid",{"_index":926,"title":{},"body":{"components/ServicesComponent.html":{}}}],["event.data.moduid",{"_index":930,"title":{},"body":{"components/ServicesComponent.html":{}}}],["event.keycode",{"_index":673,"title":{},"body":{"components/MatApprovedPickerRenderComponent.html":{},"components/MatContractPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{}}}],["event.preventdefault",{"_index":705,"title":{},"body":{"components/MatApprovedPickerRenderComponent.html":{},"components/MatContractPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{}}}],["event.stoppropagation",{"_index":706,"title":{},"body":{"components/MatApprovedPickerRenderComponent.html":{},"components/MatContractPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{}}}],["event.which",{"_index":672,"title":{},"body":{"components/MatApprovedPickerRenderComponent.html":{},"components/MatContractPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{}}}],["eventemitter",{"_index":367,"title":{},"body":{"classes/EmailErrorStateMatcher.html":{},"components/InitialViewComponent.html":{},"components/LoginComponent.html":{},"classes/PasswordErrorStateMatcher.html":{}}}],["evento",{"_index":391,"title":{},"body":{"classes/EmailErrorStateMatcher.html":{},"components/LoginComponent.html":{},"components/MatApprovedPickerRenderComponent.html":{},"components/MatContractPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{},"classes/PasswordErrorStateMatcher.html":{},"components/ServicesComponent.html":{},"components/WastesComponent.html":{}}}],["eventos",{"_index":444,"title":{},"body":{"components/InitialViewComponent.html":{}}}],["events",{"_index":663,"title":{},"body":{"components/MatApprovedPickerRenderComponent.html":{},"components/MatContractPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{}}}],["evitar",{"_index":628,"title":{},"body":{"components/MatApprovedPickerRenderComponent.html":{},"components/MatContractPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{}}}],["example",{"_index":80,"title":{},"body":{"components/AppComponent.html":{},"interceptors/AuthInterceptor.html":{},"classes/EmailErrorStateMatcher.html":{},"components/InitialViewComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/MatApprovedPickerRenderComponent.html":{},"components/MatContractPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{},"classes/PasswordErrorStateMatcher.html":{},"components/ServicesComponent.html":{},"injectables/ServicesService.html":{},"injectables/UsersService.html":{},"components/WastesComponent.html":{}}}],["excluir",{"_index":300,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["execute",{"_index":1201,"title":{},"body":{"index.html":{}}}],["existe",{"_index":450,"title":{},"body":{"components/InitialViewComponent.html":{},"components/MatApprovedPickerRenderComponent.html":{},"components/MatContractPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{}}}],["export",{"_index":77,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interceptors/AuthInterceptor.html":{},"classes/EmailErrorStateMatcher.html":{},"components/InitialViewComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/MatApprovedPickerRenderComponent.html":{},"components/MatContractPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{},"classes/PasswordErrorStateMatcher.html":{},"components/ServicesComponent.html":{},"injectables/ServicesService.html":{},"injectables/UsersService.html":{},"components/WastesComponent.html":{}}}],["exports",{"_index":133,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"overview.html":{}}}],["false",{"_index":332,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"components/InitialViewComponent.html":{},"components/WastesComponent.html":{}}}],["favor",{"_index":421,"title":{},"body":{"classes/EmailErrorStateMatcher.html":{},"components/LoginComponent.html":{},"classes/PasswordErrorStateMatcher.html":{}}}],["favorite",{"_index":1106,"title":{},"body":{"components/WastesComponent.html":{}}}],["fecha",{"_index":950,"title":{},"body":{"injectables/ServicesService.html":{},"components/WastesComponent.html":{}}}],["ff6d55",{"_index":514,"title":{},"body":{"components/InitialViewComponent.html":{}}}],["fichero",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interceptors/AuthInterceptor.html":{},"classes/EmailErrorStateMatcher.html":{},"components/InitialViewComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/MatApprovedPickerRenderComponent.html":{},"components/MatContractPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{},"classes/PasswordErrorStateMatcher.html":{},"components/ServicesComponent.html":{},"injectables/ServicesService.html":{},"injectables/UsersService.html":{},"components/WastesComponent.html":{},"coverage.html":{}}}],["field",{"_index":209,"title":{},"body":{"modules/AppModule.html":{},"components/ServicesComponent.html":{},"components/WastesComponent.html":{}}}],["files",{"_index":1184,"title":{},"body":{"index.html":{}}}],["fileuploadcomponent",{"_index":150,"title":{},"body":{"modules/AppModule.html":{}}}],["filter",{"_index":1056,"title":{},"body":{"components/WastesComponent.html":{}}}],["filtrar",{"_index":1015,"title":{},"body":{"components/WastesComponent.html":{}}}],["filtros",{"_index":1105,"title":{},"body":{"components/WastesComponent.html":{}}}],["final",{"_index":615,"title":{},"body":{"components/MatApprovedPickerRenderComponent.html":{},"components/MatContractPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{}}}],["flag",{"_index":1195,"title":{},"body":{"index.html":{}}}],["flex",{"_index":520,"title":{},"body":{"components/InitialViewComponent.html":{}}}],["flexlayoutmodule",{"_index":188,"title":{},"body":{"modules/AppModule.html":{}}}],["float",{"_index":526,"title":{},"body":{"components/InitialViewComponent.html":{}}}],["focus",{"_index":611,"title":{},"body":{"components/MatApprovedPickerRenderComponent.html":{},"components/MatContractPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{}}}],["focusedinput",{"_index":588,"title":{},"body":{"components/MatApprovedPickerRenderComponent.html":{},"components/MatContractPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{}}}],["focusoninputnexttick",{"_index":594,"title":{},"body":{"components/MatApprovedPickerRenderComponent.html":{},"components/MatContractPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{}}}],["focusoninputnexttick(input",{"_index":608,"title":{},"body":{"components/MatApprovedPickerRenderComponent.html":{},"components/MatContractPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{}}}],["food",{"_index":1107,"title":{},"body":{"components/WastesComponent.html":{}}}],["force",{"_index":1101,"title":{},"body":{"components/WastesComponent.html":{}}}],["form",{"_index":355,"title":{},"body":{"classes/EmailErrorStateMatcher.html":{},"components/LoginComponent.html":{},"classes/PasswordErrorStateMatcher.html":{}}}],["form.submitted",{"_index":375,"title":{},"body":{"classes/EmailErrorStateMatcher.html":{},"components/LoginComponent.html":{},"classes/PasswordErrorStateMatcher.html":{}}}],["formcontrol",{"_index":353,"title":{},"body":{"classes/EmailErrorStateMatcher.html":{},"components/LoginComponent.html":{},"classes/PasswordErrorStateMatcher.html":{}}}],["formgroupdirective",{"_index":356,"title":{},"body":{"classes/EmailErrorStateMatcher.html":{},"components/LoginComponent.html":{},"classes/PasswordErrorStateMatcher.html":{}}}],["formsmodule",{"_index":182,"title":{},"body":{"modules/AppModule.html":{}}}],["formulario",{"_index":359,"title":{},"body":{"classes/EmailErrorStateMatcher.html":{},"components/LoginComponent.html":{},"classes/PasswordErrorStateMatcher.html":{}}}],["frameworkcomponents",{"_index":803,"title":{},"body":{"components/ServicesComponent.html":{},"components/WastesComponent.html":{}}}],["further",{"_index":1207,"title":{},"body":{"index.html":{}}}],["general",{"_index":1224,"title":{},"body":{"overview.html":{}}}],["generate",{"_index":1187,"title":{},"body":{"index.html":{}}}],["generated",{"_index":1170,"title":{},"body":{"index.html":{}}}],["getallcontracts",{"_index":813,"title":{},"body":{"components/ServicesComponent.html":{},"injectables/ServicesService.html":{}}}],["getallcontracts():observable",{"_index":966,"title":{},"body":{"injectables/ServicesService.html":{}}}],["getallmodules",{"_index":814,"title":{},"body":{"components/ServicesComponent.html":{},"injectables/ServicesService.html":{}}}],["getallmodules():observable",{"_index":974,"title":{},"body":{"injectables/ServicesService.html":{}}}],["getallpermissions",{"_index":978,"title":{},"body":{"injectables/UsersService.html":{}}}],["getallprofiles",{"_index":979,"title":{},"body":{"injectables/UsersService.html":{}}}],["getallservices",{"_index":933,"title":{},"body":{"injectables/ServicesService.html":{}}}],["getallusers",{"_index":980,"title":{},"body":{"injectables/UsersService.html":{}}}],["getservicemodalcomponent",{"_index":240,"title":{},"body":{"modules/AppModule.html":{}}}],["getservicesdata",{"_index":934,"title":{},"body":{"injectables/ServicesService.html":{}}}],["getservicesdata(id",{"_index":942,"title":{},"body":{"injectables/ServicesService.html":{}}}],["getservicesdata(id):observable",{"_index":970,"title":{},"body":{"injectables/ServicesService.html":{}}}],["getservicesfiltered",{"_index":935,"title":{},"body":{"injectables/ServicesService.html":{}}}],["getservicesfiltered(fecha",{"_index":946,"title":{},"body":{"injectables/ServicesService.html":{}}}],["getservicesfiltered(fecha,contid",{"_index":951,"title":{},"body":{"injectables/ServicesService.html":{}}}],["getservicesfiltered(fecha,contid):observable",{"_index":972,"title":{},"body":{"injectables/ServicesService.html":{}}}],["getting",{"_index":1167,"title":{"index.html":{}},"body":{}}],["getvalue",{"_index":595,"title":{},"body":{"components/MatApprovedPickerRenderComponent.html":{},"components/MatContractPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{}}}],["go",{"_index":1210,"title":{},"body":{"index.html":{}}}],["grafica",{"_index":1052,"title":{},"body":{"components/WastesComponent.html":{}}}],["graficas",{"_index":1042,"title":{},"body":{"components/WastesComponent.html":{}}}],["grid",{"_index":200,"title":{},"body":{"modules/AppModule.html":{},"components/MatApprovedPickerRenderComponent.html":{},"components/MatContractPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{},"dependencies.html":{}}}],["gridapi",{"_index":804,"title":{},"body":{"components/ServicesComponent.html":{},"components/WastesComponent.html":{}}}],["gridcolumnapi",{"_index":805,"title":{},"body":{"components/ServicesComponent.html":{},"components/WastesComponent.html":{}}}],["gráfica",{"_index":1222,"title":{},"body":{"modules.html":{}}}],["guarda",{"_index":464,"title":{},"body":{"components/InitialViewComponent.html":{}}}],["guardar",{"_index":634,"title":{},"body":{"components/MatApprovedPickerRenderComponent.html":{},"components/MatContractPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{},"components/ServicesComponent.html":{},"components/WastesComponent.html":{}}}],["gui",{"_index":662,"title":{},"body":{"components/MatApprovedPickerRenderComponent.html":{},"components/MatContractPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{}}}],["ha",{"_index":621,"title":{},"body":{"components/MatApprovedPickerRenderComponent.html":{},"components/MatContractPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{}}}],["hay",{"_index":121,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interceptors/AuthInterceptor.html":{},"classes/EmailErrorStateMatcher.html":{},"components/InitialViewComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/MatApprovedPickerRenderComponent.html":{},"components/MatContractPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{},"classes/PasswordErrorStateMatcher.html":{},"components/ServicesComponent.html":{},"injectables/ServicesService.html":{},"injectables/UsersService.html":{},"components/WastesComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{}}}],["header",{"_index":510,"title":{},"body":{"components/InitialViewComponent.html":{}}}],["headername",{"_index":863,"title":{},"body":{"components/ServicesComponent.html":{},"components/WastesComponent.html":{}}}],["headers",{"_index":314,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["hecha",{"_index":790,"title":{},"body":{"components/MatStatusPickerRenderComponent.html":{}}}],["height",{"_index":487,"title":{},"body":{"components/InitialViewComponent.html":{},"components/MatApprovedPickerRenderComponent.html":{},"components/MatContractPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{},"components/WastesComponent.html":{}}}],["height:100",{"_index":527,"title":{},"body":{"components/InitialViewComponent.html":{}}}],["help",{"_index":1208,"title":{},"body":{"index.html":{}}}],["hide",{"_index":867,"title":{},"body":{"components/ServicesComponent.html":{}}}],["hook",{"_index":664,"title":{},"body":{"components/MatApprovedPickerRenderComponent.html":{},"components/MatContractPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{}}}],["html",{"_index":86,"title":{},"body":{"components/AppComponent.html":{},"components/InitialViewComponent.html":{},"components/LoginComponent.html":{},"components/MatApprovedPickerRenderComponent.html":{},"components/MatContractPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{},"components/ServicesComponent.html":{},"components/WastesComponent.html":{}}}],["http",{"_index":551,"title":{},"body":{"injectables/LoginService.html":{},"injectables/ServicesService.html":{},"injectables/UsersService.html":{}}}],["http://localhost:4200",{"_index":1180,"title":{},"body":{"index.html":{}}}],["http:httpclient",{"_index":569,"title":{},"body":{"injectables/LoginService.html":{},"injectables/ServicesService.html":{},"injectables/UsersService.html":{}}}],["http_interceptors",{"_index":160,"title":{},"body":{"modules/AppModule.html":{}}}],["httpclient",{"_index":549,"title":{},"body":{"injectables/LoginService.html":{},"injectables/ServicesService.html":{},"injectables/UsersService.html":{}}}],["httpclientmodule",{"_index":159,"title":{},"body":{"modules/AppModule.html":{}}}],["httpevent",{"_index":304,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["httphandler",{"_index":286,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["httpheaderresponse",{"_index":305,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["httpheaders",{"_index":306,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"injectables/LoginService.html":{},"injectables/UsersService.html":{}}}],["httpheaders().set('token',token",{"_index":316,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["httpinterceptor",{"_index":303,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["httprequest",{"_index":284,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["icelleditorangularcomp",{"_index":581,"title":{},"body":{"components/MatApprovedPickerRenderComponent.html":{},"components/MatContractPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{}}}],["id",{"_index":864,"title":{},"body":{"components/ServicesComponent.html":{},"injectables/ServicesService.html":{}}}],["identificador",{"_index":1116,"title":{},"body":{"coverage.html":{}}}],["if(data1.reload",{"_index":912,"title":{},"body":{"components/ServicesComponent.html":{}}}],["if(data[\"status",{"_index":416,"title":{},"body":{"classes/EmailErrorStateMatcher.html":{},"components/LoginComponent.html":{},"classes/PasswordErrorStateMatcher.html":{}}}],["if(params.data.p_prof_active",{"_index":795,"title":{},"body":{"components/MatStatusPickerRenderComponent.html":{}}}],["if(params.data.useractive",{"_index":797,"title":{},"body":{"components/MatStatusPickerRenderComponent.html":{}}}],["if(this.emailformcontrol.status",{"_index":411,"title":{},"body":{"classes/EmailErrorStateMatcher.html":{},"components/LoginComponent.html":{},"classes/PasswordErrorStateMatcher.html":{}}}],["if(this.permissions.includes(perm",{"_index":470,"title":{},"body":{"components/InitialViewComponent.html":{}}}],["implementa",{"_index":350,"title":{},"body":{"classes/EmailErrorStateMatcher.html":{},"components/InitialViewComponent.html":{},"components/LoginComponent.html":{},"components/MatApprovedPickerRenderComponent.html":{},"components/MatContractPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{},"classes/PasswordErrorStateMatcher.html":{},"components/ServicesComponent.html":{},"components/WastesComponent.html":{}}}],["implements",{"_index":308,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"classes/EmailErrorStateMatcher.html":{},"components/InitialViewComponent.html":{},"components/LoginComponent.html":{},"components/MatApprovedPickerRenderComponent.html":{},"components/MatContractPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{},"classes/PasswordErrorStateMatcher.html":{},"components/ServicesComponent.html":{},"components/WastesComponent.html":{}}}],["import",{"_index":75,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interceptors/AuthInterceptor.html":{},"classes/EmailErrorStateMatcher.html":{},"components/InitialViewComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/MatApprovedPickerRenderComponent.html":{},"components/MatContractPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{},"classes/PasswordErrorStateMatcher.html":{},"components/ServicesComponent.html":{},"injectables/ServicesService.html":{},"injectables/UsersService.html":{},"components/WastesComponent.html":{}}}],["importa",{"_index":153,"title":{},"body":{"modules/AppModule.html":{}}}],["important",{"_index":509,"title":{},"body":{"components/InitialViewComponent.html":{}}}],["imports",{"_index":248,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["incorrectas",{"_index":420,"title":{},"body":{"classes/EmailErrorStateMatcher.html":{},"components/LoginComponent.html":{},"classes/PasswordErrorStateMatcher.html":{}}}],["index",{"_index":687,"title":{"index.html":{}},"body":{"components/MatApprovedPickerRenderComponent.html":{},"components/MatContractPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{}}}],["indicando",{"_index":362,"title":{},"body":{"classes/EmailErrorStateMatcher.html":{},"components/LoginComponent.html":{},"classes/PasswordErrorStateMatcher.html":{}}}],["indicar",{"_index":1044,"title":{},"body":{"components/WastesComponent.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interceptors/AuthInterceptor.html":{},"classes/EmailErrorStateMatcher.html":{},"components/InitialViewComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/MatApprovedPickerRenderComponent.html":{},"components/MatContractPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{},"classes/PasswordErrorStateMatcher.html":{},"components/ServicesComponent.html":{},"injectables/ServicesService.html":{},"injectables/UsersService.html":{},"components/WastesComponent.html":{}}}],["inform",{"_index":700,"title":{},"body":{"components/MatApprovedPickerRenderComponent.html":{},"components/MatContractPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{}}}],["ingresar",{"_index":347,"title":{},"body":{"classes/EmailErrorStateMatcher.html":{},"components/LoginComponent.html":{},"classes/PasswordErrorStateMatcher.html":{}}}],["inicia",{"_index":604,"title":{},"body":{"components/MatApprovedPickerRenderComponent.html":{},"components/MatContractPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{}}}],["inicial",{"_index":406,"title":{},"body":{"classes/EmailErrorStateMatcher.html":{},"components/InitialViewComponent.html":{},"components/LoginComponent.html":{},"classes/PasswordErrorStateMatcher.html":{},"components/ServicesComponent.html":{},"components/WastesComponent.html":{}}}],["iniciar",{"_index":540,"title":{},"body":{"components/LoginComponent.html":{}}}],["inicio",{"_index":481,"title":{},"body":{"components/InitialViewComponent.html":{},"components/LoginComponent.html":{}}}],["initial",{"_index":98,"title":{},"body":{"components/AppComponent.html":{},"components/InitialViewComponent.html":{},"components/LoginComponent.html":{},"components/MatApprovedPickerRenderComponent.html":{},"components/MatContractPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{},"components/ServicesComponent.html":{},"components/WastesComponent.html":{}}}],["initialviewcomponent",{"_index":97,"title":{"components/InitialViewComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/InitialViewComponent.html":{},"components/LoginComponent.html":{},"components/MatApprovedPickerRenderComponent.html":{},"components/MatContractPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{},"components/ServicesComponent.html":{},"components/WastesComponent.html":{},"coverage.html":{},"overview.html":{}}}],["injectable",{"_index":307,"title":{"injectables/LoginService.html":{},"injectables/ServicesService.html":{},"injectables/UsersService.html":{}},"body":{"interceptors/AuthInterceptor.html":{},"injectables/LoginService.html":{},"injectables/ServicesService.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["input",{"_index":103,"title":{},"body":{"components/AppComponent.html":{},"components/InitialViewComponent.html":{},"components/LoginComponent.html":{},"components/MatApprovedPickerRenderComponent.html":{},"components/MatContractPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{},"components/ServicesComponent.html":{},"components/WastesComponent.html":{}}}],["input.element.nativeelement.focus",{"_index":668,"title":{},"body":{"components/MatApprovedPickerRenderComponent.html":{},"components/MatContractPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{}}}],["input.element.nativeelement.value",{"_index":703,"title":{},"body":{"components/MatApprovedPickerRenderComponent.html":{},"components/MatContractPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{}}}],["inputdate",{"_index":656,"title":{},"body":{"components/MatApprovedPickerRenderComponent.html":{},"components/MatContractPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{}}}],["inputs",{"_index":590,"title":{},"body":{"components/MatApprovedPickerRenderComponent.html":{},"components/MatContractPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{}}}],["inputtofocuson",{"_index":685,"title":{},"body":{"components/MatApprovedPickerRenderComponent.html":{},"components/MatContractPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{}}}],["instead",{"_index":665,"title":{},"body":{"components/MatApprovedPickerRenderComponent.html":{},"components/MatContractPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{}}}],["intercepccion",{"_index":288,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["intercept",{"_index":278,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["intercept(request",{"_index":283,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["interceptador",{"_index":265,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["interceptar",{"_index":336,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["interceptor",{"_index":229,"title":{"interceptors/AuthInterceptor.html":{}},"body":{"modules/AppModule.html":{},"coverage.html":{}}}],["interceptor.ts",{"_index":264,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"coverage.html":{}}}],["interceptor.ts:16",{"_index":282,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["interceptor.ts:37",{"_index":287,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["interceptor.ts:60",{"_index":295,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["interceptores",{"_index":262,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["involuntario",{"_index":632,"title":{},"body":{"components/MatApprovedPickerRenderComponent.html":{},"components/MatContractPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{}}}],["inyectables",{"_index":541,"title":{},"body":{"injectables/LoginService.html":{},"injectables/ServicesService.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["iserrorstate",{"_index":351,"title":{},"body":{"classes/EmailErrorStateMatcher.html":{},"classes/PasswordErrorStateMatcher.html":{}}}],["iserrorstate(control",{"_index":352,"title":{},"body":{"classes/EmailErrorStateMatcher.html":{},"components/LoginComponent.html":{},"classes/PasswordErrorStateMatcher.html":{}}}],["ispopup",{"_index":596,"title":{},"body":{"components/MatApprovedPickerRenderComponent.html":{},"components/MatContractPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{}}}],["issubmitted",{"_index":374,"title":{},"body":{"classes/EmailErrorStateMatcher.html":{},"components/LoginComponent.html":{},"classes/PasswordErrorStateMatcher.html":{}}}],["isvalidrequestforinterceptor",{"_index":280,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["isvalidrequestforinterceptor(requesturl",{"_index":294,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["items",{"_index":522,"title":{},"body":{"components/InitialViewComponent.html":{}}}],["json",{"_index":558,"title":{},"body":{"injectables/LoginService.html":{},"injectables/ServicesService.html":{},"injectables/UsersService.html":{}}}],["json.parse(localstorage.getitem('user",{"_index":472,"title":{},"body":{"components/InitialViewComponent.html":{}}}],["justify",{"_index":524,"title":{},"body":{"components/InitialViewComponent.html":{}}}],["karma",{"_index":1203,"title":{},"body":{"index.html":{}}}],["key",{"_index":671,"title":{},"body":{"components/MatApprovedPickerRenderComponent.html":{},"components/MatContractPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{}}}],["kilogramos",{"_index":1085,"title":{},"body":{"components/WastesComponent.html":{}}}],["la",{"_index":19,"title":{},"body":{"components/AppComponent.html":{},"interceptors/AuthInterceptor.html":{},"classes/EmailErrorStateMatcher.html":{},"components/InitialViewComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/MatApprovedPickerRenderComponent.html":{},"components/MatContractPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{},"classes/PasswordErrorStateMatcher.html":{},"components/ServicesComponent.html":{},"injectables/ServicesService.html":{},"injectables/UsersService.html":{},"components/WastesComponent.html":{},"coverage.html":{}}}],["las",{"_index":268,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"injectables/LoginService.html":{},"components/ServicesComponent.html":{},"injectables/ServicesService.html":{},"injectables/UsersService.html":{},"components/WastesComponent.html":{}}}],["layout",{"_index":190,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["left",{"_index":518,"title":{},"body":{"components/InitialViewComponent.html":{},"components/WastesComponent.html":{}}}],["legend",{"_index":129,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["legenda",{"_index":1046,"title":{},"body":{"components/WastesComponent.html":{}}}],["leyenda",{"_index":84,"title":{},"body":{"components/AppComponent.html":{},"components/InitialViewComponent.html":{},"components/LoginComponent.html":{},"components/MatApprovedPickerRenderComponent.html":{},"components/MatContractPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{},"components/ServicesComponent.html":{},"components/WastesComponent.html":{}}}],["list",{"_index":169,"title":{},"body":{"modules/AppModule.html":{}}}],["lista",{"_index":939,"title":{},"body":{"injectables/ServicesService.html":{},"injectables/UsersService.html":{}}}],["llamadas",{"_index":553,"title":{},"body":{"injectables/LoginService.html":{},"injectables/ServicesService.html":{},"injectables/UsersService.html":{}}}],["lo",{"_index":386,"title":{},"body":{"classes/EmailErrorStateMatcher.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"classes/PasswordErrorStateMatcher.html":{},"components/ServicesComponent.html":{},"injectables/ServicesService.html":{},"components/WastesComponent.html":{}}}],["localstorage.getitem('token",{"_index":313,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["localstorage.setitem('user',json.stringify(data['data",{"_index":417,"title":{},"body":{"classes/EmailErrorStateMatcher.html":{},"components/LoginComponent.html":{},"classes/PasswordErrorStateMatcher.html":{}}}],["login",{"_index":50,"title":{},"body":{"components/AppComponent.html":{},"classes/EmailErrorStateMatcher.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"classes/PasswordErrorStateMatcher.html":{}}}],["login'},{'name",{"_index":101,"title":{},"body":{"components/AppComponent.html":{},"components/InitialViewComponent.html":{},"components/LoginComponent.html":{},"components/MatApprovedPickerRenderComponent.html":{},"components/MatContractPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{},"components/ServicesComponent.html":{},"components/WastesComponent.html":{}}}],["login.component.html",{"_index":388,"title":{},"body":{"classes/EmailErrorStateMatcher.html":{},"components/LoginComponent.html":{},"classes/PasswordErrorStateMatcher.html":{}}}],["login.component.scss",{"_index":389,"title":{},"body":{"classes/EmailErrorStateMatcher.html":{},"components/LoginComponent.html":{},"classes/PasswordErrorStateMatcher.html":{}}}],["loginchanged",{"_index":392,"title":{},"body":{"classes/EmailErrorStateMatcher.html":{},"components/InitialViewComponent.html":{},"components/LoginComponent.html":{},"classes/PasswordErrorStateMatcher.html":{}}}],["logincomponent",{"_index":100,"title":{"components/LoginComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/EmailErrorStateMatcher.html":{},"components/InitialViewComponent.html":{},"components/LoginComponent.html":{},"components/MatApprovedPickerRenderComponent.html":{},"components/MatContractPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{},"classes/PasswordErrorStateMatcher.html":{},"components/ServicesComponent.html":{},"components/WastesComponent.html":{},"coverage.html":{},"overview.html":{}}}],["loginservice",{"_index":372,"title":{"injectables/LoginService.html":{}},"body":{"classes/EmailErrorStateMatcher.html":{},"components/InitialViewComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"classes/PasswordErrorStateMatcher.html":{},"coverage.html":{}}}],["loginservice:loginservice",{"_index":469,"title":{},"body":{"components/InitialViewComponent.html":{}}}],["loginstatus",{"_index":36,"title":{},"body":{"components/AppComponent.html":{}}}],["loginuser",{"_index":547,"title":{},"body":{"injectables/LoginService.html":{}}}],["loginuser(user",{"_index":554,"title":{},"body":{"injectables/LoginService.html":{}}}],["loginuser(user,password",{"_index":557,"title":{},"body":{"injectables/LoginService.html":{}}}],["logout",{"_index":438,"title":{},"body":{"components/InitialViewComponent.html":{},"injectables/LoginService.html":{}}}],["los",{"_index":348,"title":{},"body":{"classes/EmailErrorStateMatcher.html":{},"components/InitialViewComponent.html":{},"components/LoginComponent.html":{},"components/MatApprovedPickerRenderComponent.html":{},"components/MatContractPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{},"classes/PasswordErrorStateMatcher.html":{},"components/ServicesComponent.html":{},"injectables/ServicesService.html":{},"injectables/UsersService.html":{},"components/WastesComponent.html":{}}}],["make",{"_index":1053,"title":{},"body":{"components/WastesComponent.html":{}}}],["mandatory",{"_index":694,"title":{},"body":{"components/MatApprovedPickerRenderComponent.html":{},"components/MatContractPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{}}}],["maneja",{"_index":429,"title":{},"body":{"components/InitialViewComponent.html":{}}}],["manejar",{"_index":1032,"title":{},"body":{"components/WastesComponent.html":{}}}],["mantener",{"_index":68,"title":{},"body":{"components/AppComponent.html":{}}}],["mantenga",{"_index":271,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["margin",{"_index":516,"title":{},"body":{"components/InitialViewComponent.html":{},"components/WastesComponent.html":{}}}],["matapprovedpickerrendercomponent",{"_index":102,"title":{"components/MatApprovedPickerRenderComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/InitialViewComponent.html":{},"components/LoginComponent.html":{},"components/MatApprovedPickerRenderComponent.html":{},"components/MatContractPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{},"components/ServicesComponent.html":{},"components/WastesComponent.html":{},"coverage.html":{},"overview.html":{}}}],["matbottomsheet",{"_index":823,"title":{},"body":{"components/ServicesComponent.html":{},"components/WastesComponent.html":{}}}],["matbottomsheetmodule",{"_index":222,"title":{},"body":{"modules/AppModule.html":{}}}],["matbuttonmodule",{"_index":176,"title":{},"body":{"modules/AppModule.html":{}}}],["matcardmodule",{"_index":170,"title":{},"body":{"modules/AppModule.html":{}}}],["matching",{"_index":120,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interceptors/AuthInterceptor.html":{},"classes/EmailErrorStateMatcher.html":{},"components/InitialViewComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/MatApprovedPickerRenderComponent.html":{},"components/MatContractPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{},"classes/PasswordErrorStateMatcher.html":{},"components/ServicesComponent.html":{},"injectables/ServicesService.html":{},"injectables/UsersService.html":{},"components/WastesComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{}}}],["matcontractpickerrendercomponent",{"_index":105,"title":{"components/MatContractPickerRenderComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/InitialViewComponent.html":{},"components/LoginComponent.html":{},"components/MatApprovedPickerRenderComponent.html":{},"components/MatContractPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{},"components/ServicesComponent.html":{},"components/WastesComponent.html":{},"coverage.html":{},"overview.html":{}}}],["matdatepickermodule",{"_index":215,"title":{},"body":{"modules/AppModule.html":{}}}],["matdividermodule",{"_index":172,"title":{},"body":{"modules/AppModule.html":{}}}],["matformfieldmodule",{"_index":207,"title":{},"body":{"modules/AppModule.html":{}}}],["matgridlistmodule",{"_index":167,"title":{},"body":{"modules/AppModule.html":{}}}],["maticonmodule",{"_index":191,"title":{},"body":{"modules/AppModule.html":{}}}],["matinputmodule",{"_index":174,"title":{},"body":{"modules/AppModule.html":{}}}],["matlistmodule",{"_index":243,"title":{},"body":{"modules/AppModule.html":{}}}],["matmenumodule",{"_index":213,"title":{},"body":{"modules/AppModule.html":{}}}],["matmodulespickerrendercomponent",{"_index":106,"title":{"components/MatModulesPickerRenderComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/InitialViewComponent.html":{},"components/LoginComponent.html":{},"components/MatApprovedPickerRenderComponent.html":{},"components/MatContractPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{},"components/ServicesComponent.html":{},"components/WastesComponent.html":{},"coverage.html":{},"overview.html":{}}}],["matnativedatemodule",{"_index":179,"title":{},"body":{"modules/AppModule.html":{}}}],["matpermissionspickerrendercomponent",{"_index":107,"title":{"components/MatPermissionsPickerRenderComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/InitialViewComponent.html":{},"components/LoginComponent.html":{},"components/MatApprovedPickerRenderComponent.html":{},"components/MatContractPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{},"components/ServicesComponent.html":{},"components/WastesComponent.html":{},"coverage.html":{},"overview.html":{}}}],["matprofilespickerrendercomponent",{"_index":108,"title":{"components/MatProfilesPickerRenderComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/InitialViewComponent.html":{},"components/LoginComponent.html":{},"components/MatApprovedPickerRenderComponent.html":{},"components/MatContractPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{},"components/ServicesComponent.html":{},"components/WastesComponent.html":{},"coverage.html":{},"overview.html":{}}}],["matselectmodule",{"_index":210,"title":{},"body":{"modules/AppModule.html":{}}}],["matservicespickerrendercomponent",{"_index":109,"title":{"components/MatServicesPickerRenderComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/InitialViewComponent.html":{},"components/LoginComponent.html":{},"components/MatApprovedPickerRenderComponent.html":{},"components/MatContractPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{},"components/ServicesComponent.html":{},"components/WastesComponent.html":{},"coverage.html":{},"overview.html":{}}}],["matsnackbar",{"_index":371,"title":{},"body":{"classes/EmailErrorStateMatcher.html":{},"components/LoginComponent.html":{},"classes/PasswordErrorStateMatcher.html":{}}}],["matsnackbarmodule",{"_index":225,"title":{},"body":{"modules/AppModule.html":{}}}],["matstatuspickerrendercomponent",{"_index":110,"title":{"components/MatStatusPickerRenderComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/InitialViewComponent.html":{},"components/LoginComponent.html":{},"components/MatApprovedPickerRenderComponent.html":{},"components/MatContractPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{},"components/ServicesComponent.html":{},"components/WastesComponent.html":{},"coverage.html":{},"overview.html":{}}}],["mattabsmodule",{"_index":195,"title":{},"body":{"modules/AppModule.html":{}}}],["mattooltipmodule",{"_index":193,"title":{},"body":{"modules/AppModule.html":{}}}],["medida",{"_index":1022,"title":{},"body":{"components/WastesComponent.html":{}}}],["memoria",{"_index":831,"title":{},"body":{"components/ServicesComponent.html":{}}}],["meta",{"_index":25,"title":{},"body":{"components/AppComponent.html":{},"components/InitialViewComponent.html":{},"components/LoginComponent.html":{},"components/MatApprovedPickerRenderComponent.html":{},"components/MatContractPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{},"components/ServicesComponent.html":{},"components/WastesComponent.html":{}}}],["metodo",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"interceptors/AuthInterceptor.html":{},"classes/EmailErrorStateMatcher.html":{},"components/InitialViewComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/MatApprovedPickerRenderComponent.html":{},"components/MatContractPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{},"classes/PasswordErrorStateMatcher.html":{},"components/ServicesComponent.html":{},"injectables/ServicesService.html":{},"injectables/UsersService.html":{},"components/WastesComponent.html":{}}}],["metricas",{"_index":1064,"title":{},"body":{"components/WastesComponent.html":{}}}],["modal",{"_index":613,"title":{},"body":{"components/MatApprovedPickerRenderComponent.html":{},"components/MatContractPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{},"components/ServicesComponent.html":{},"components/WastesComponent.html":{}}}],["modal.component",{"_index":234,"title":{},"body":{"modules/AppModule.html":{},"components/ServicesComponent.html":{}}}],["modal/add",{"_index":233,"title":{},"body":{"modules/AppModule.html":{},"components/ServicesComponent.html":{}}}],["modal/get",{"_index":242,"title":{},"body":{"modules/AppModule.html":{}}}],["modificar",{"_index":956,"title":{},"body":{"injectables/ServicesService.html":{},"injectables/UsersService.html":{}}}],["modifyprofiles",{"_index":981,"title":{},"body":{"injectables/UsersService.html":{}}}],["modifyprofiles(profiles",{"_index":987,"title":{},"body":{"injectables/UsersService.html":{}}}],["modifyprofiles(profiles):observable",{"_index":998,"title":{},"body":{"injectables/UsersService.html":{}}}],["modifyusers",{"_index":982,"title":{},"body":{"injectables/UsersService.html":{}}}],["modifyusers(users",{"_index":991,"title":{},"body":{"injectables/UsersService.html":{}}}],["modifyusers(users):observable",{"_index":996,"title":{},"body":{"injectables/UsersService.html":{}}}],["moduid',valuegetter:this.modulegetterformat.bind(this),celleditor",{"_index":880,"title":{},"body":{"components/ServicesComponent.html":{}}}],["module",{"_index":125,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"components/InitialViewComponent.html":{},"overview.html":{}}}],["module.moduname",{"_index":733,"title":{},"body":{"components/MatModulesPickerRenderComponent.html":{}}}],["modulegetter",{"_index":815,"title":{},"body":{"components/ServicesComponent.html":{}}}],["modulegetterformat",{"_index":816,"title":{},"body":{"components/ServicesComponent.html":{}}}],["modulegetterformat(event",{"_index":840,"title":{},"body":{"components/ServicesComponent.html":{}}}],["modules",{"_index":245,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/ServicesComponent.html":{},"coverage.html":{}}}],["modulespicker",{"_index":890,"title":{},"body":{"components/ServicesComponent.html":{}}}],["modulespicker',celleditorparams:{modules",{"_index":881,"title":{},"body":{"components/ServicesComponent.html":{}}}],["modulo",{"_index":387,"title":{},"body":{"classes/EmailErrorStateMatcher.html":{},"components/InitialViewComponent.html":{},"components/LoginComponent.html":{},"classes/PasswordErrorStateMatcher.html":{},"components/ServicesComponent.html":{},"injectables/ServicesService.html":{},"components/WastesComponent.html":{}}}],["modulo',editable",{"_index":879,"title":{},"body":{"components/ServicesComponent.html":{}}}],["modulos",{"_index":24,"title":{},"body":{"components/AppComponent.html":{},"components/InitialViewComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/ServicesComponent.html":{},"injectables/ServicesService.html":{}}}],["moment",{"_index":655,"title":{},"body":{"components/MatApprovedPickerRenderComponent.html":{},"components/MatContractPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{},"dependencies.html":{}}}],["momento",{"_index":274,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["more",{"_index":1209,"title":{},"body":{"index.html":{}}}],["mostrar",{"_index":382,"title":{},"body":{"classes/EmailErrorStateMatcher.html":{},"components/LoginComponent.html":{},"classes/PasswordErrorStateMatcher.html":{},"components/ServicesComponent.html":{},"components/WastesComponent.html":{}}}],["move",{"_index":677,"title":{},"body":{"components/MatApprovedPickerRenderComponent.html":{},"components/MatContractPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{}}}],["muestra",{"_index":1045,"title":{},"body":{"components/WastesComponent.html":{}}}],["multi",{"_index":252,"title":{},"body":{"modules/AppModule.html":{}}}],["métodos",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"interceptors/AuthInterceptor.html":{},"classes/EmailErrorStateMatcher.html":{},"components/InitialViewComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/MatApprovedPickerRenderComponent.html":{},"components/MatContractPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{},"classes/PasswordErrorStateMatcher.html":{},"components/ServicesComponent.html":{},"injectables/ServicesService.html":{},"injectables/UsersService.html":{},"components/WastesComponent.html":{}}}],["métricas",{"_index":1109,"title":{},"body":{"components/WastesComponent.html":{}}}],["módulos",{"_index":127,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["name",{"_index":91,"title":{},"body":{"components/AppComponent.html":{},"components/InitialViewComponent.html":{},"components/LoginComponent.html":{},"components/MatApprovedPickerRenderComponent.html":{},"components/MatContractPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{},"components/ServicesComponent.html":{},"components/WastesComponent.html":{},"index.html":{}}}],["navegador",{"_index":1218,"title":{},"body":{"modules.html":{}}}],["navegar",{"_index":1221,"title":{},"body":{"modules.html":{}}}],["navigate",{"_index":1179,"title":{},"body":{"index.html":{}}}],["ndice",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"interceptors/AuthInterceptor.html":{},"classes/EmailErrorStateMatcher.html":{},"components/InitialViewComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/MatApprovedPickerRenderComponent.html":{},"components/MatContractPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{},"classes/PasswordErrorStateMatcher.html":{},"components/ServicesComponent.html":{},"injectables/ServicesService.html":{},"injectables/UsersService.html":{},"components/WastesComponent.html":{}}}],["necesarias",{"_index":544,"title":{},"body":{"injectables/LoginService.html":{},"injectables/ServicesService.html":{},"injectables/UsersService.html":{}}}],["necesario",{"_index":957,"title":{},"body":{"injectables/ServicesService.html":{}}}],["new",{"_index":315,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"classes/EmailErrorStateMatcher.html":{},"components/InitialViewComponent.html":{},"components/LoginComponent.html":{},"classes/PasswordErrorStateMatcher.html":{},"components/ServicesComponent.html":{},"coverage.html":{},"index.html":{}}}],["next",{"_index":285,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["next.handle(request",{"_index":320,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["ng",{"_index":1176,"title":{},"body":{"index.html":{}}}],["ngafterviewinit",{"_index":597,"title":{},"body":{"components/MatApprovedPickerRenderComponent.html":{},"components/MatContractPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{}}}],["ngafterviewinit(params",{"_index":618,"title":{},"body":{"components/MatApprovedPickerRenderComponent.html":{},"components/MatContractPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{}}}],["ngform",{"_index":357,"title":{},"body":{"classes/EmailErrorStateMatcher.html":{},"components/LoginComponent.html":{},"classes/PasswordErrorStateMatcher.html":{}}}],["ngmodule",{"_index":158,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["ngoninit",{"_index":407,"title":{},"body":{"classes/EmailErrorStateMatcher.html":{},"components/InitialViewComponent.html":{},"components/LoginComponent.html":{},"classes/PasswordErrorStateMatcher.html":{},"components/ServicesComponent.html":{},"components/WastesComponent.html":{}}}],["node_modules/chart.js",{"_index":1089,"title":{},"body":{"components/WastesComponent.html":{}}}],["nombre",{"_index":53,"title":{},"body":{"components/AppComponent.html":{},"interceptors/AuthInterceptor.html":{},"classes/EmailErrorStateMatcher.html":{},"components/InitialViewComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/MatApprovedPickerRenderComponent.html":{},"components/MatContractPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{},"classes/PasswordErrorStateMatcher.html":{},"components/ServicesComponent.html":{},"injectables/ServicesService.html":{},"injectables/UsersService.html":{},"components/WastesComponent.html":{}}}],["null",{"_index":354,"title":{},"body":{"classes/EmailErrorStateMatcher.html":{},"components/LoginComponent.html":{},"classes/PasswordErrorStateMatcher.html":{}}}],["number",{"_index":636,"title":{},"body":{"components/MatApprovedPickerRenderComponent.html":{},"components/MatContractPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{},"components/WastesComponent.html":{}}}],["o",{"_index":366,"title":{},"body":{"classes/EmailErrorStateMatcher.html":{},"components/LoginComponent.html":{},"classes/PasswordErrorStateMatcher.html":{},"injectables/ServicesService.html":{},"components/WastesComponent.html":{}}}],["object",{"_index":41,"title":{},"body":{"components/AppComponent.html":{},"interceptors/AuthInterceptor.html":{},"components/MatApprovedPickerRenderComponent.html":{},"components/MatContractPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{},"components/ServicesComponent.html":{},"injectables/ServicesService.html":{},"injectables/UsersService.html":{},"components/WastesComponent.html":{}}}],["objeto",{"_index":57,"title":{},"body":{"components/AppComponent.html":{},"interceptors/AuthInterceptor.html":{},"classes/EmailErrorStateMatcher.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/MatApprovedPickerRenderComponent.html":{},"components/MatContractPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{},"classes/PasswordErrorStateMatcher.html":{},"components/ServicesComponent.html":{},"injectables/ServicesService.html":{},"injectables/UsersService.html":{},"components/WastesComponent.html":{}}}],["observable",{"_index":290,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"injectables/LoginService.html":{},"injectables/ServicesService.html":{},"injectables/UsersService.html":{}}}],["obtencion",{"_index":560,"title":{},"body":{"injectables/LoginService.html":{},"injectables/ServicesService.html":{},"injectables/UsersService.html":{}}}],["obtener",{"_index":545,"title":{},"body":{"injectables/LoginService.html":{},"components/MatApprovedPickerRenderComponent.html":{},"components/MatContractPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{},"components/ServicesComponent.html":{},"injectables/ServicesService.html":{},"injectables/UsersService.html":{}}}],["obtenido",{"_index":606,"title":{},"body":{"components/MatApprovedPickerRenderComponent.html":{},"components/MatContractPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{},"components/ServicesComponent.html":{},"components/WastesComponent.html":{}}}],["ok",{"_index":423,"title":{},"body":{"classes/EmailErrorStateMatcher.html":{},"components/LoginComponent.html":{},"classes/PasswordErrorStateMatcher.html":{}}}],["one",{"_index":678,"title":{},"body":{"components/MatApprovedPickerRenderComponent.html":{},"components/MatContractPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{}}}],["ongridready",{"_index":818,"title":{},"body":{"components/ServicesComponent.html":{},"components/WastesComponent.html":{}}}],["ongridready(params",{"_index":843,"title":{},"body":{"components/ServicesComponent.html":{},"components/WastesComponent.html":{}}}],["oninit",{"_index":368,"title":{},"body":{"classes/EmailErrorStateMatcher.html":{},"components/InitialViewComponent.html":{},"components/LoginComponent.html":{},"classes/PasswordErrorStateMatcher.html":{},"components/ServicesComponent.html":{},"components/WastesComponent.html":{}}}],["onkeydown",{"_index":598,"title":{},"body":{"components/MatApprovedPickerRenderComponent.html":{},"components/MatContractPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{}}}],["onkeydown(event",{"_index":619,"title":{},"body":{"components/MatApprovedPickerRenderComponent.html":{},"components/MatContractPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{}}}],["opcional",{"_index":55,"title":{},"body":{"components/AppComponent.html":{},"interceptors/AuthInterceptor.html":{},"classes/EmailErrorStateMatcher.html":{},"components/InitialViewComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/MatApprovedPickerRenderComponent.html":{},"components/MatContractPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{},"classes/PasswordErrorStateMatcher.html":{},"components/ServicesComponent.html":{},"injectables/ServicesService.html":{},"injectables/UsersService.html":{},"components/WastesComponent.html":{}}}],["opciones",{"_index":1050,"title":{},"body":{"components/WastesComponent.html":{}}}],["openfileupload",{"_index":1016,"title":{},"body":{"components/WastesComponent.html":{}}}],["original",{"_index":293,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["out",{"_index":1212,"title":{},"body":{"index.html":{}}}],["output",{"_index":369,"title":{},"body":{"classes/EmailErrorStateMatcher.html":{},"components/InitialViewComponent.html":{},"components/LoginComponent.html":{},"classes/PasswordErrorStateMatcher.html":{}}}],["overview",{"_index":1213,"title":{"overview.html":{}},"body":{"index.html":{}}}],["package",{"_index":1142,"title":{"dependencies.html":{}},"body":{}}],["padding:0",{"_index":504,"title":{},"body":{"components/InitialViewComponent.html":{},"components/WastesComponent.html":{}}}],["padre",{"_index":607,"title":{},"body":{"components/MatApprovedPickerRenderComponent.html":{},"components/MatContractPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{}}}],["page",{"_index":1216,"title":{},"body":{"index.html":{}}}],["pagina",{"_index":74,"title":{},"body":{"components/AppComponent.html":{}}}],["panel",{"_index":486,"title":{},"body":{"components/InitialViewComponent.html":{}}}],["panelclass",{"_index":1093,"title":{},"body":{"components/WastesComponent.html":{}}}],["para",{"_index":47,"title":{},"body":{"components/AppComponent.html":{},"interceptors/AuthInterceptor.html":{},"classes/EmailErrorStateMatcher.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/MatApprovedPickerRenderComponent.html":{},"components/MatContractPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{},"classes/PasswordErrorStateMatcher.html":{},"components/ServicesComponent.html":{},"injectables/ServicesService.html":{},"injectables/UsersService.html":{},"components/WastesComponent.html":{}}}],["param",{"_index":81,"title":{},"body":{"components/AppComponent.html":{},"interceptors/AuthInterceptor.html":{},"classes/EmailErrorStateMatcher.html":{},"components/InitialViewComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/MatApprovedPickerRenderComponent.html":{},"components/MatContractPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{},"classes/PasswordErrorStateMatcher.html":{},"components/ServicesComponent.html":{},"injectables/ServicesService.html":{},"injectables/UsersService.html":{},"components/WastesComponent.html":{}}}],["parametros",{"_index":761,"title":{},"body":{"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{}}}],["params",{"_index":605,"title":{},"body":{"components/MatApprovedPickerRenderComponent.html":{},"components/MatContractPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{},"components/ServicesComponent.html":{},"components/WastesComponent.html":{}}}],["params.api",{"_index":914,"title":{},"body":{"components/ServicesComponent.html":{},"components/WastesComponent.html":{}}}],["params.columnapi",{"_index":916,"title":{},"body":{"components/ServicesComponent.html":{},"components/WastesComponent.html":{}}}],["params.contracts",{"_index":729,"title":{},"body":{"components/MatContractPickerRenderComponent.html":{}}}],["params.data.p_prof_active",{"_index":796,"title":{},"body":{"components/MatStatusPickerRenderComponent.html":{}}}],["params.data.permissions",{"_index":762,"title":{},"body":{"components/MatPermissionsPickerRenderComponent.html":{}}}],["params.data.prof_name",{"_index":770,"title":{},"body":{"components/MatProfilesPickerRenderComponent.html":{}}}],["params.data.ton/this.selectedwastemetric",{"_index":1091,"title":{},"body":{"components/WastesComponent.html":{}}}],["params.data.useractive",{"_index":798,"title":{},"body":{"components/MatStatusPickerRenderComponent.html":{}}}],["params.modules",{"_index":750,"title":{},"body":{"components/MatModulesPickerRenderComponent.html":{}}}],["params.services",{"_index":785,"title":{},"body":{"components/MatServicesPickerRenderComponent.html":{}}}],["parámetros",{"_index":51,"title":{},"body":{"components/AppComponent.html":{},"interceptors/AuthInterceptor.html":{},"classes/EmailErrorStateMatcher.html":{},"components/InitialViewComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/MatApprovedPickerRenderComponent.html":{},"components/MatContractPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{},"classes/PasswordErrorStateMatcher.html":{},"components/ServicesComponent.html":{},"injectables/ServicesService.html":{},"injectables/UsersService.html":{},"components/WastesComponent.html":{}}}],["password",{"_index":379,"title":{},"body":{"classes/EmailErrorStateMatcher.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"classes/PasswordErrorStateMatcher.html":{}}}],["passworderrorstatematcher",{"_index":380,"title":{"classes/PasswordErrorStateMatcher.html":{}},"body":{"classes/EmailErrorStateMatcher.html":{},"components/LoginComponent.html":{},"classes/PasswordErrorStateMatcher.html":{},"coverage.html":{}}}],["passwordformcontrol",{"_index":397,"title":{},"body":{"classes/EmailErrorStateMatcher.html":{},"components/LoginComponent.html":{},"classes/PasswordErrorStateMatcher.html":{}}}],["passwordmatcher",{"_index":400,"title":{},"body":{"classes/EmailErrorStateMatcher.html":{},"components/LoginComponent.html":{},"classes/PasswordErrorStateMatcher.html":{}}}],["perfil",{"_index":752,"title":{},"body":{"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{}}}],["perfiles",{"_index":586,"title":{},"body":{"components/MatApprovedPickerRenderComponent.html":{},"components/MatContractPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{},"injectables/UsersService.html":{}}}],["perform",{"_index":691,"title":{},"body":{"components/MatApprovedPickerRenderComponent.html":{},"components/MatContractPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{}}}],["perm",{"_index":458,"title":{},"body":{"components/InitialViewComponent.html":{}}}],["permiso",{"_index":451,"title":{},"body":{"components/InitialViewComponent.html":{}}}],["permisos",{"_index":431,"title":{},"body":{"components/InitialViewComponent.html":{},"components/MatApprovedPickerRenderComponent.html":{},"components/MatContractPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{},"injectables/UsersService.html":{}}}],["permission.p_perm_name",{"_index":753,"title":{},"body":{"components/MatPermissionsPickerRenderComponent.html":{}}}],["permissions",{"_index":230,"title":{},"body":{"modules/AppModule.html":{},"components/InitialViewComponent.html":{},"components/MatApprovedPickerRenderComponent.html":{},"components/MatContractPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{},"coverage.html":{}}}],["permite",{"_index":345,"title":{},"body":{"classes/EmailErrorStateMatcher.html":{},"components/InitialViewComponent.html":{},"components/LoginComponent.html":{},"classes/PasswordErrorStateMatcher.html":{}}}],["peticion",{"_index":266,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"injectables/ServicesService.html":{},"injectables/UsersService.html":{}}}],["peticiones",{"_index":543,"title":{},"body":{"injectables/LoginService.html":{},"injectables/ServicesService.html":{},"injectables/UsersService.html":{}}}],["picker",{"_index":204,"title":{},"body":{"modules/AppModule.html":{},"components/MatApprovedPickerRenderComponent.html":{},"components/MatContractPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{},"components/ServicesComponent.html":{},"components/WastesComponent.html":{},"coverage.html":{}}}],["plataforma",{"_index":462,"title":{},"body":{"components/InitialViewComponent.html":{},"injectables/LoginService.html":{}}}],["points",{"_index":853,"title":{},"body":{"components/ServicesComponent.html":{},"components/WastesComponent.html":{}}}],["popup",{"_index":404,"title":{},"body":{"classes/EmailErrorStateMatcher.html":{},"components/LoginComponent.html":{},"components/MatApprovedPickerRenderComponent.html":{},"components/MatContractPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{},"classes/PasswordErrorStateMatcher.html":{}}}],["por",{"_index":62,"title":{},"body":{"components/AppComponent.html":{},"classes/EmailErrorStateMatcher.html":{},"components/InitialViewComponent.html":{},"components/LoginComponent.html":{},"components/MatApprovedPickerRenderComponent.html":{},"components/MatContractPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{},"classes/PasswordErrorStateMatcher.html":{},"components/ServicesComponent.html":{},"components/WastesComponent.html":{}}}],["posee",{"_index":456,"title":{},"body":{"components/InitialViewComponent.html":{}}}],["position",{"_index":324,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["positionindicator",{"_index":322,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["positionindicator.length",{"_index":329,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["post",{"_index":661,"title":{},"body":{"components/MatApprovedPickerRenderComponent.html":{},"components/MatContractPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{}}}],["precio',editable",{"_index":872,"title":{},"body":{"components/ServicesComponent.html":{}}}],["presionado",{"_index":622,"title":{},"body":{"components/MatApprovedPickerRenderComponent.html":{},"components/MatContractPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{}}}],["preventdefaultandpropagation",{"_index":599,"title":{},"body":{"components/MatApprovedPickerRenderComponent.html":{},"components/MatContractPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{}}}],["preventdefaultandpropagation(event",{"_index":626,"title":{},"body":{"components/MatApprovedPickerRenderComponent.html":{},"components/MatContractPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{}}}],["principal",{"_index":13,"title":{},"body":{"components/AppComponent.html":{}}}],["private",{"_index":279,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"classes/EmailErrorStateMatcher.html":{},"components/LoginComponent.html":{},"components/MatApprovedPickerRenderComponent.html":{},"components/MatContractPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{},"classes/PasswordErrorStateMatcher.html":{},"components/ServicesComponent.html":{}}}],["probably",{"_index":698,"title":{},"body":{"components/MatApprovedPickerRenderComponent.html":{},"components/MatContractPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{}}}],["procesadas",{"_index":647,"title":{},"body":{"components/MatApprovedPickerRenderComponent.html":{},"components/MatContractPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{}}}],["prod",{"_index":1194,"title":{},"body":{"index.html":{}}}],["production",{"_index":1196,"title":{},"body":{"index.html":{}}}],["profile.p_prof_name",{"_index":764,"title":{},"body":{"components/MatProfilesPickerRenderComponent.html":{}}}],["profiles",{"_index":203,"title":{},"body":{"modules/AppModule.html":{},"components/MatProfilesPickerRenderComponent.html":{},"injectables/UsersService.html":{},"components/WastesComponent.html":{},"coverage.html":{}}}],["project",{"_index":1169,"title":{},"body":{"index.html":{}}}],["promise",{"_index":572,"title":{},"body":{"injectables/LoginService.html":{},"components/ServicesComponent.html":{},"injectables/ServicesService.html":{},"injectables/UsersService.html":{}}}],["promise((resolve",{"_index":917,"title":{},"body":{"components/ServicesComponent.html":{}}}],["propagacion",{"_index":629,"title":{},"body":{"components/MatApprovedPickerRenderComponent.html":{},"components/MatContractPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{}}}],["proper",{"_index":695,"title":{},"body":{"components/MatApprovedPickerRenderComponent.html":{},"components/MatContractPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{}}}],["propiedades",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"interceptors/AuthInterceptor.html":{},"components/InitialViewComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/MatApprovedPickerRenderComponent.html":{},"components/MatContractPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{},"components/ServicesComponent.html":{},"injectables/ServicesService.html":{},"injectables/UsersService.html":{},"components/WastesComponent.html":{}}}],["protractor",{"_index":1206,"title":{},"body":{"index.html":{}}}],["proveedores",{"_index":152,"title":{},"body":{"modules/AppModule.html":{}}}],["provide",{"_index":250,"title":{},"body":{"modules/AppModule.html":{}}}],["providedin",{"_index":568,"title":{},"body":{"injectables/LoginService.html":{},"injectables/ServicesService.html":{},"injectables/UsersService.html":{}}}],["providers",{"_index":132,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["public",{"_index":589,"title":{},"body":{"components/MatApprovedPickerRenderComponent.html":{},"components/MatContractPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{},"components/WastesComponent.html":{}}}],["punto",{"_index":561,"title":{},"body":{"injectables/LoginService.html":{},"injectables/ServicesService.html":{},"injectables/UsersService.html":{}}}],["que",{"_index":123,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interceptors/AuthInterceptor.html":{},"classes/EmailErrorStateMatcher.html":{},"components/InitialViewComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/MatApprovedPickerRenderComponent.html":{},"components/MatContractPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{},"classes/PasswordErrorStateMatcher.html":{},"components/ServicesComponent.html":{},"injectables/ServicesService.html":{},"injectables/UsersService.html":{},"components/WastesComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{}}}],["querylist",{"_index":644,"title":{},"body":{"components/MatApprovedPickerRenderComponent.html":{},"components/MatContractPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{}}}],["radius",{"_index":494,"title":{},"body":{"components/InitialViewComponent.html":{}}}],["reactiveformsmodule",{"_index":183,"title":{},"body":{"modules/AppModule.html":{}}}],["read",{"_index":641,"title":{},"body":{"components/MatApprovedPickerRenderComponent.html":{},"components/MatContractPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{}}}],["realiza",{"_index":461,"title":{},"body":{"components/InitialViewComponent.html":{}}}],["realizado",{"_index":848,"title":{},"body":{"components/ServicesComponent.html":{},"components/WastesComponent.html":{}}}],["realizar",{"_index":18,"title":{},"body":{"components/AppComponent.html":{},"interceptors/AuthInterceptor.html":{},"classes/EmailErrorStateMatcher.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"classes/PasswordErrorStateMatcher.html":{},"injectables/ServicesService.html":{},"injectables/UsersService.html":{},"components/WastesComponent.html":{}}}],["ref",{"_index":908,"title":{},"body":{"components/ServicesComponent.html":{},"components/WastesComponent.html":{}}}],["ref.afterdismissed().subscribe",{"_index":1095,"title":{},"body":{"components/WastesComponent.html":{}}}],["ref.afterdismissed().subscribe(data1",{"_index":911,"title":{},"body":{"components/ServicesComponent.html":{}}}],["reference",{"_index":1215,"title":{},"body":{"index.html":{}}}],["referencia",{"_index":403,"title":{},"body":{"classes/EmailErrorStateMatcher.html":{},"components/LoginComponent.html":{},"components/MatApprovedPickerRenderComponent.html":{},"components/MatContractPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{},"classes/PasswordErrorStateMatcher.html":{},"components/ServicesComponent.html":{},"components/WastesComponent.html":{}}}],["referencias",{"_index":846,"title":{},"body":{"components/ServicesComponent.html":{},"components/WastesComponent.html":{}}}],["referente",{"_index":1029,"title":{},"body":{"components/WastesComponent.html":{}}}],["regexp(address).test(destination",{"_index":331,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["registrar",{"_index":845,"title":{},"body":{"components/ServicesComponent.html":{},"components/WastesComponent.html":{}}}],["reject",{"_index":918,"title":{},"body":{"components/ServicesComponent.html":{}}}],["reject(err",{"_index":921,"title":{},"body":{"components/ServicesComponent.html":{}}}],["relacionada",{"_index":393,"title":{},"body":{"classes/EmailErrorStateMatcher.html":{},"components/LoginComponent.html":{},"classes/PasswordErrorStateMatcher.html":{}}}],["relacionado",{"_index":361,"title":{},"body":{"classes/EmailErrorStateMatcher.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"classes/PasswordErrorStateMatcher.html":{},"components/ServicesComponent.html":{},"injectables/ServicesService.html":{},"components/WastesComponent.html":{}}}],["reload",{"_index":1182,"title":{},"body":{"index.html":{}}}],["render.component",{"_index":206,"title":{},"body":{"modules/AppModule.html":{},"components/ServicesComponent.html":{},"components/WastesComponent.html":{}}}],["render.component.ts",{"_index":576,"title":{},"body":{"components/MatApprovedPickerRenderComponent.html":{},"components/MatContractPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{},"coverage.html":{}}}],["render.component.ts:100",{"_index":768,"title":{},"body":{"components/MatProfilesPickerRenderComponent.html":{}}}],["render.component.ts:102",{"_index":617,"title":{},"body":{"components/MatApprovedPickerRenderComponent.html":{}}}],["render.component.ts:107",{"_index":781,"title":{},"body":{"components/MatServicesPickerRenderComponent.html":{}}}],["render.component.ts:108",{"_index":754,"title":{},"body":{"components/MatPermissionsPickerRenderComponent.html":{}}}],["render.component.ts:110",{"_index":737,"title":{},"body":{"components/MatModulesPickerRenderComponent.html":{}}}],["render.component.ts:111",{"_index":714,"title":{},"body":{"components/MatContractPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{}}}],["render.component.ts:112",{"_index":766,"title":{},"body":{"components/MatProfilesPickerRenderComponent.html":{}}}],["render.component.ts:113",{"_index":610,"title":{},"body":{"components/MatApprovedPickerRenderComponent.html":{}}}],["render.component.ts:119",{"_index":755,"title":{},"body":{"components/MatPermissionsPickerRenderComponent.html":{}}}],["render.component.ts:120",{"_index":779,"title":{},"body":{"components/MatServicesPickerRenderComponent.html":{}}}],["render.component.ts:121",{"_index":734,"title":{},"body":{"components/MatModulesPickerRenderComponent.html":{}}}],["render.component.ts:122",{"_index":711,"title":{},"body":{"components/MatContractPickerRenderComponent.html":{}}}],["render.component.ts:123",{"_index":767,"title":{},"body":{"components/MatProfilesPickerRenderComponent.html":{}}}],["render.component.ts:124",{"_index":614,"title":{},"body":{"components/MatApprovedPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{}}}],["render.component.ts:132",{"_index":735,"title":{},"body":{"components/MatModulesPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{}}}],["render.component.ts:133",{"_index":712,"title":{},"body":{"components/MatContractPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{}}}],["render.component.ts:137",{"_index":616,"title":{},"body":{"components/MatApprovedPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{}}}],["render.component.ts:144",{"_index":757,"title":{},"body":{"components/MatPermissionsPickerRenderComponent.html":{}}}],["render.component.ts:145",{"_index":736,"title":{},"body":{"components/MatModulesPickerRenderComponent.html":{}}}],["render.component.ts:146",{"_index":713,"title":{},"body":{"components/MatContractPickerRenderComponent.html":{}}}],["render.component.ts:147",{"_index":780,"title":{},"body":{"components/MatServicesPickerRenderComponent.html":{}}}],["render.component.ts:149",{"_index":620,"title":{},"body":{"components/MatApprovedPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{}}}],["render.component.ts:152",{"_index":787,"title":{},"body":{"components/MatStatusPickerRenderComponent.html":{}}}],["render.component.ts:157",{"_index":738,"title":{},"body":{"components/MatModulesPickerRenderComponent.html":{}}}],["render.component.ts:158",{"_index":715,"title":{},"body":{"components/MatContractPickerRenderComponent.html":{}}}],["render.component.ts:160",{"_index":782,"title":{},"body":{"components/MatServicesPickerRenderComponent.html":{}}}],["render.component.ts:164",{"_index":788,"title":{},"body":{"components/MatStatusPickerRenderComponent.html":{}}}],["render.component.ts:182",{"_index":758,"title":{},"body":{"components/MatPermissionsPickerRenderComponent.html":{}}}],["render.component.ts:187",{"_index":627,"title":{},"body":{"components/MatApprovedPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{}}}],["render.component.ts:195",{"_index":739,"title":{},"body":{"components/MatModulesPickerRenderComponent.html":{}}}],["render.component.ts:196",{"_index":716,"title":{},"body":{"components/MatContractPickerRenderComponent.html":{}}}],["render.component.ts:199",{"_index":783,"title":{},"body":{"components/MatServicesPickerRenderComponent.html":{}}}],["render.component.ts:203",{"_index":789,"title":{},"body":{"components/MatStatusPickerRenderComponent.html":{}}}],["render.component.ts:43",{"_index":724,"title":{},"body":{"components/MatContractPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{}}}],["render.component.ts:45",{"_index":760,"title":{},"body":{"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{}}}],["render.component.ts:47",{"_index":652,"title":{},"body":{"components/MatApprovedPickerRenderComponent.html":{}}}],["render.component.ts:48",{"_index":748,"title":{},"body":{"components/MatModulesPickerRenderComponent.html":{}}}],["render.component.ts:49",{"_index":727,"title":{},"body":{"components/MatContractPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{}}}],["render.component.ts:50",{"_index":759,"title":{},"body":{"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{}}}],["render.component.ts:53",{"_index":633,"title":{},"body":{"components/MatApprovedPickerRenderComponent.html":{}}}],["render.component.ts:54",{"_index":740,"title":{},"body":{"components/MatModulesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{}}}],["render.component.ts:55",{"_index":720,"title":{},"body":{"components/MatContractPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{}}}],["render.component.ts:58",{"_index":642,"title":{},"body":{"components/MatApprovedPickerRenderComponent.html":{}}}],["render.component.ts:59",{"_index":742,"title":{},"body":{"components/MatModulesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{}}}],["render.component.ts:60",{"_index":717,"title":{},"body":{"components/MatContractPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{}}}],["render.component.ts:61",{"_index":792,"title":{},"body":{"components/MatStatusPickerRenderComponent.html":{}}}],["render.component.ts:63",{"_index":645,"title":{},"body":{"components/MatApprovedPickerRenderComponent.html":{}}}],["render.component.ts:64",{"_index":743,"title":{},"body":{"components/MatModulesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{}}}],["render.component.ts:65",{"_index":722,"title":{},"body":{"components/MatContractPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{}}}],["render.component.ts:66",{"_index":793,"title":{},"body":{"components/MatStatusPickerRenderComponent.html":{}}}],["render.component.ts:68",{"_index":637,"title":{},"body":{"components/MatApprovedPickerRenderComponent.html":{}}}],["render.component.ts:69",{"_index":741,"title":{},"body":{"components/MatModulesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{}}}],["render.component.ts:70",{"_index":723,"title":{},"body":{"components/MatContractPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{}}}],["render.component.ts:71",{"_index":791,"title":{},"body":{"components/MatStatusPickerRenderComponent.html":{}}}],["render.component.ts:73",{"_index":648,"title":{},"body":{"components/MatApprovedPickerRenderComponent.html":{}}}],["render.component.ts:74",{"_index":745,"title":{},"body":{"components/MatModulesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{}}}],["render.component.ts:75",{"_index":721,"title":{},"body":{"components/MatContractPickerRenderComponent.html":{}}}],["render.component.ts:76",{"_index":794,"title":{},"body":{"components/MatStatusPickerRenderComponent.html":{}}}],["render.component.ts:78",{"_index":649,"title":{},"body":{"components/MatApprovedPickerRenderComponent.html":{}}}],["render.component.ts:79",{"_index":746,"title":{},"body":{"components/MatModulesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{}}}],["render.component.ts:80",{"_index":725,"title":{},"body":{"components/MatContractPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{}}}],["render.component.ts:81",{"_index":765,"title":{},"body":{"components/MatProfilesPickerRenderComponent.html":{}}}],["render.component.ts:84",{"_index":744,"title":{},"body":{"components/MatModulesPickerRenderComponent.html":{}}}],["render.component.ts:85",{"_index":719,"title":{},"body":{"components/MatContractPickerRenderComponent.html":{}}}],["render.component.ts:87",{"_index":601,"title":{},"body":{"components/MatApprovedPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{}}}],["render.component.ts:90",{"_index":778,"title":{},"body":{"components/MatServicesPickerRenderComponent.html":{}}}],["render.component.ts:94",{"_index":710,"title":{},"body":{"components/MatContractPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{}}}],["render.component.ts:97",{"_index":756,"title":{},"body":{"components/MatPermissionsPickerRenderComponent.html":{}}}],["render/mat",{"_index":205,"title":{},"body":{"modules/AppModule.html":{},"components/MatApprovedPickerRenderComponent.html":{},"components/MatContractPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{},"components/ServicesComponent.html":{},"components/WastesComponent.html":{},"coverage.html":{}}}],["renderizado",{"_index":579,"title":{},"body":{"components/MatApprovedPickerRenderComponent.html":{},"components/MatContractPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{}}}],["renderizar",{"_index":834,"title":{},"body":{"components/ServicesComponent.html":{}}}],["renderusername",{"_index":434,"title":{},"body":{"components/InitialViewComponent.html":{}}}],["requerido",{"_index":537,"title":{},"body":{"components/LoginComponent.html":{}}}],["request",{"_index":289,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["request.clone",{"_index":317,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["requesturl",{"_index":296,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["requesturl.includes(url",{"_index":333,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["requesturl.indexof(positionindicator",{"_index":325,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["requesturl.substr(position",{"_index":328,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["requireda",{"_index":539,"title":{},"body":{"components/LoginComponent.html":{}}}],["residuos",{"_index":482,"title":{},"body":{"components/InitialViewComponent.html":{},"components/WastesComponent.html":{}}}],["resolve(data);},err",{"_index":920,"title":{},"body":{"components/ServicesComponent.html":{}}}],["responsive",{"_index":1048,"title":{},"body":{"components/WastesComponent.html":{}}}],["restablecer",{"_index":142,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["resto",{"_index":23,"title":{},"body":{"components/AppComponent.html":{}}}],["result",{"_index":119,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interceptors/AuthInterceptor.html":{},"classes/EmailErrorStateMatcher.html":{},"components/InitialViewComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/MatApprovedPickerRenderComponent.html":{},"components/MatContractPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{},"classes/PasswordErrorStateMatcher.html":{},"components/ServicesComponent.html":{},"injectables/ServicesService.html":{},"injectables/UsersService.html":{},"components/WastesComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{}}}],["resultados",{"_index":122,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interceptors/AuthInterceptor.html":{},"classes/EmailErrorStateMatcher.html":{},"components/InitialViewComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/MatApprovedPickerRenderComponent.html":{},"components/MatContractPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{},"classes/PasswordErrorStateMatcher.html":{},"components/ServicesComponent.html":{},"injectables/ServicesService.html":{},"injectables/UsersService.html":{},"components/WastesComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{}}}],["retorno",{"_index":408,"title":{},"body":{"classes/EmailErrorStateMatcher.html":{},"components/InitialViewComponent.html":{},"components/LoginComponent.html":{},"classes/PasswordErrorStateMatcher.html":{},"components/ServicesComponent.html":{},"components/WastesComponent.html":{}}}],["return",{"_index":319,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"classes/EmailErrorStateMatcher.html":{},"components/InitialViewComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/MatApprovedPickerRenderComponent.html":{},"components/MatContractPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{},"classes/PasswordErrorStateMatcher.html":{},"components/ServicesComponent.html":{},"injectables/ServicesService.html":{},"injectables/UsersService.html":{},"components/WastesComponent.html":{}}}],["returns",{"_index":310,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"classes/EmailErrorStateMatcher.html":{},"components/InitialViewComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/MatApprovedPickerRenderComponent.html":{},"components/MatContractPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{},"classes/PasswordErrorStateMatcher.html":{},"components/ServicesComponent.html":{},"injectables/ServicesService.html":{},"injectables/UsersService.html":{},"components/WastesComponent.html":{}}}],["right",{"_index":493,"title":{},"body":{"components/InitialViewComponent.html":{}}}],["root",{"_index":29,"title":{},"body":{"components/AppComponent.html":{},"injectables/LoginService.html":{},"injectables/ServicesService.html":{},"injectables/UsersService.html":{}}}],["root'},{'name",{"_index":92,"title":{},"body":{"components/AppComponent.html":{},"components/InitialViewComponent.html":{},"components/LoginComponent.html":{},"components/MatApprovedPickerRenderComponent.html":{},"components/MatContractPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{},"components/ServicesComponent.html":{},"components/WastesComponent.html":{}}}],["routermodule",{"_index":258,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":261,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routes",{"_index":257,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{}}}],["routing.module",{"_index":162,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.ts",{"_index":256,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["rowdata",{"_index":901,"title":{},"body":{"components/ServicesComponent.html":{}}}],["rowdata.filter(rownode",{"_index":905,"title":{},"body":{"components/ServicesComponent.html":{}}}],["rowdata.push(node.data",{"_index":903,"title":{},"body":{"components/ServicesComponent.html":{}}}],["rownode",{"_index":897,"title":{},"body":{"components/ServicesComponent.html":{}}}],["rownode.change_status",{"_index":906,"title":{},"body":{"components/ServicesComponent.html":{}}}],["rownode.setdatavalue('change_status",{"_index":899,"title":{},"body":{"components/ServicesComponent.html":{}}}],["run",{"_index":1175,"title":{},"body":{"index.html":{}}}],["running",{"_index":1197,"title":{},"body":{"index.html":{}}}],["rut",{"_index":1067,"title":{},"body":{"components/WastesComponent.html":{}}}],["rutas",{"_index":1227,"title":{},"body":{"routes.html":{}}}],["rxjs",{"_index":302,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"injectables/LoginService.html":{},"injectables/ServicesService.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["salidas",{"_index":439,"title":{},"body":{"components/InitialViewComponent.html":{},"components/LoginComponent.html":{}}}],["sarmfrontend",{"_index":71,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["saveservicebuttonactive",{"_index":806,"title":{},"body":{"components/ServicesComponent.html":{}}}],["saveservices",{"_index":819,"title":{},"body":{"components/ServicesComponent.html":{},"injectables/ServicesService.html":{}}}],["saveservices(data",{"_index":952,"title":{},"body":{"injectables/ServicesService.html":{}}}],["scaffolding",{"_index":1186,"title":{},"body":{"index.html":{}}}],["scaleshowverticallines",{"_index":1047,"title":{},"body":{"components/WastesComponent.html":{}}}],["se",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"interceptors/AuthInterceptor.html":{},"classes/EmailErrorStateMatcher.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/MatApprovedPickerRenderComponent.html":{},"components/MatContractPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{},"classes/PasswordErrorStateMatcher.html":{},"components/ServicesComponent.html":{},"injectables/ServicesService.html":{},"injectables/UsersService.html":{},"components/WastesComponent.html":{}}}],["segun",{"_index":949,"title":{},"body":{"injectables/ServicesService.html":{}}}],["seleccion",{"_index":635,"title":{},"body":{"components/MatApprovedPickerRenderComponent.html":{},"components/MatContractPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{}}}],["seleccionada",{"_index":1065,"title":{},"body":{"components/WastesComponent.html":{}}}],["seleccionado",{"_index":448,"title":{},"body":{"components/InitialViewComponent.html":{},"components/MatApprovedPickerRenderComponent.html":{},"components/MatContractPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{}}}],["selected",{"_index":513,"title":{},"body":{"components/InitialViewComponent.html":{}}}],["selectedmodule",{"_index":435,"title":{},"body":{"components/InitialViewComponent.html":{}}}],["selectedwastemetric",{"_index":1009,"title":{},"body":{"components/WastesComponent.html":{}}}],["selection",{"_index":449,"title":{},"body":{"components/InitialViewComponent.html":{}}}],["selector",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"classes/EmailErrorStateMatcher.html":{},"components/InitialViewComponent.html":{},"components/LoginComponent.html":{},"components/MatApprovedPickerRenderComponent.html":{},"components/MatContractPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{},"classes/PasswordErrorStateMatcher.html":{},"components/ServicesComponent.html":{},"components/WastesComponent.html":{}}}],["serie",{"_index":1035,"title":{},"body":{"components/WastesComponent.html":{}}}],["servcolumnsdefs",{"_index":1010,"title":{},"body":{"components/WastesComponent.html":{}}}],["serve",{"_index":1177,"title":{},"body":{"index.html":{}}}],["server",{"_index":1174,"title":{},"body":{"index.html":{}}}],["service",{"_index":237,"title":{},"body":{"modules/AppModule.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{},"components/ServicesComponent.html":{},"injectables/ServicesService.html":{},"coverage.html":{}}}],["service.servname",{"_index":777,"title":{},"body":{"components/MatServicesPickerRenderComponent.html":{}}}],["service_data",{"_index":961,"title":{},"body":{"injectables/ServicesService.html":{}}}],["servicerowdata",{"_index":807,"title":{},"body":{"components/ServicesComponent.html":{},"components/WastesComponent.html":{}}}],["services",{"_index":591,"title":{},"body":{"components/MatApprovedPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{},"components/ServicesComponent.html":{}}}],["services'},{'name",{"_index":112,"title":{},"body":{"components/AppComponent.html":{},"components/InitialViewComponent.html":{},"components/LoginComponent.html":{},"components/MatApprovedPickerRenderComponent.html":{},"components/MatContractPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{},"components/ServicesComponent.html":{},"components/WastesComponent.html":{}}}],["services.component.html",{"_index":802,"title":{},"body":{"components/ServicesComponent.html":{}}}],["services.component.scss",{"_index":801,"title":{},"body":{"components/ServicesComponent.html":{}}}],["services/auth",{"_index":228,"title":{},"body":{"modules/AppModule.html":{}}}],["servicescolumnsdefs",{"_index":808,"title":{},"body":{"components/ServicesComponent.html":{}}}],["servicescomponent",{"_index":111,"title":{"components/ServicesComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/InitialViewComponent.html":{},"components/LoginComponent.html":{},"components/MatApprovedPickerRenderComponent.html":{},"components/MatContractPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{},"components/ServicesComponent.html":{},"components/WastesComponent.html":{},"coverage.html":{},"overview.html":{}}}],["servicesservice",{"_index":821,"title":{"injectables/ServicesService.html":{}},"body":{"components/ServicesComponent.html":{},"injectables/ServicesService.html":{},"coverage.html":{}}}],["servicio",{"_index":401,"title":{},"body":{"classes/EmailErrorStateMatcher.html":{},"components/InitialViewComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{},"classes/PasswordErrorStateMatcher.html":{},"components/ServicesComponent.html":{},"injectables/ServicesService.html":{},"injectables/UsersService.html":{},"components/WastesComponent.html":{}}}],["servicios",{"_index":276,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"classes/EmailErrorStateMatcher.html":{},"components/InitialViewComponent.html":{},"components/LoginComponent.html":{},"components/MatApprovedPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{},"classes/PasswordErrorStateMatcher.html":{},"components/ServicesComponent.html":{},"injectables/ServicesService.html":{},"components/WastesComponent.html":{}}}],["servname",{"_index":869,"title":{},"body":{"components/ServicesComponent.html":{}}}],["servprice",{"_index":873,"title":{},"body":{"components/ServicesComponent.html":{}}}],["servtypeid",{"_index":865,"title":{},"body":{"components/ServicesComponent.html":{}}}],["sesion",{"_index":536,"title":{},"body":{"components/LoginComponent.html":{}}}],["sesiones",{"_index":272,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["sheet",{"_index":224,"title":{},"body":{"modules/AppModule.html":{},"components/ServicesComponent.html":{},"components/WastesComponent.html":{}}}],["sheet/add",{"_index":231,"title":{},"body":{"modules/AppModule.html":{},"components/ServicesComponent.html":{}}}],["sheet/file",{"_index":219,"title":{},"body":{"modules/AppModule.html":{}}}],["sheet/get",{"_index":241,"title":{},"body":{"modules/AppModule.html":{}}}],["sheet/waste",{"_index":246,"title":{},"body":{"modules/AppModule.html":{},"components/WastesComponent.html":{}}}],["showondirtyerrorstatematcher",{"_index":180,"title":{},"body":{"modules/AppModule.html":{}}}],["si",{"_index":363,"title":{},"body":{"classes/EmailErrorStateMatcher.html":{},"components/InitialViewComponent.html":{},"components/LoginComponent.html":{},"components/MatApprovedPickerRenderComponent.html":{},"components/MatContractPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{},"classes/PasswordErrorStateMatcher.html":{},"components/WastesComponent.html":{}}}],["sin",{"_index":335,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"classes/EmailErrorStateMatcher.html":{},"components/InitialViewComponent.html":{},"components/LoginComponent.html":{},"classes/PasswordErrorStateMatcher.html":{},"components/ServicesComponent.html":{},"components/WastesComponent.html":{}}}],["sistema",{"_index":409,"title":{},"body":{"classes/EmailErrorStateMatcher.html":{},"components/LoginComponent.html":{},"classes/PasswordErrorStateMatcher.html":{}}}],["sobre",{"_index":612,"title":{},"body":{"components/MatApprovedPickerRenderComponent.html":{},"components/MatContractPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{},"components/ServicesComponent.html":{},"components/WastesComponent.html":{}}}],["soporta",{"_index":1219,"title":{},"body":{"modules.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interceptors/AuthInterceptor.html":{},"classes/EmailErrorStateMatcher.html":{},"components/InitialViewComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/MatApprovedPickerRenderComponent.html":{},"components/MatContractPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{},"classes/PasswordErrorStateMatcher.html":{},"components/ServicesComponent.html":{},"injectables/ServicesService.html":{},"injectables/UsersService.html":{},"components/WastesComponent.html":{},"index.html":{}}}],["src/app/app",{"_index":255,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:19",{"_index":72,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:24",{"_index":65,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:33",{"_index":44,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":144,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/botoom",{"_index":886,"title":{},"body":{"components/ServicesComponent.html":{},"components/WastesComponent.html":{}}}],["src/app/components/bathrooms/bathrooms.component.ts",{"_index":1118,"title":{},"body":{"coverage.html":{}}}],["src/app/components/commercial/commercial.component.ts",{"_index":1120,"title":{},"body":{"coverage.html":{}}}],["src/app/components/initial",{"_index":424,"title":{},"body":{"components/InitialViewComponent.html":{},"coverage.html":{}}}],["src/app/components/login/login.component.ts",{"_index":339,"title":{},"body":{"classes/EmailErrorStateMatcher.html":{},"components/LoginComponent.html":{},"classes/PasswordErrorStateMatcher.html":{},"coverage.html":{}}}],["src/app/components/login/login.component.ts:109",{"_index":532,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:117",{"_index":531,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:24",{"_index":358,"title":{},"body":{"classes/EmailErrorStateMatcher.html":{}}}],["src/app/components/login/login.component.ts:45",{"_index":799,"title":{},"body":{"classes/PasswordErrorStateMatcher.html":{}}}],["src/app/components/login/login.component.ts:65",{"_index":530,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:70",{"_index":533,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:79",{"_index":535,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:88",{"_index":534,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:93",{"_index":529,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/services/services.component.ts",{"_index":800,"title":{},"body":{"components/ServicesComponent.html":{},"coverage.html":{}}}],["src/app/components/services/services.component.ts:117",{"_index":826,"title":{},"body":{"components/ServicesComponent.html":{}}}],["src/app/components/services/services.component.ts:131",{"_index":850,"title":{},"body":{"components/ServicesComponent.html":{}}}],["src/app/components/services/services.component.ts:151",{"_index":835,"title":{},"body":{"components/ServicesComponent.html":{}}}],["src/app/components/services/services.component.ts:170",{"_index":844,"title":{},"body":{"components/ServicesComponent.html":{}}}],["src/app/components/services/services.component.ts:180",{"_index":837,"title":{},"body":{"components/ServicesComponent.html":{}}}],["src/app/components/services/services.component.ts:191",{"_index":838,"title":{},"body":{"components/ServicesComponent.html":{}}}],["src/app/components/services/services.component.ts:202",{"_index":830,"title":{},"body":{"components/ServicesComponent.html":{}}}],["src/app/components/services/services.component.ts:211",{"_index":839,"title":{},"body":{"components/ServicesComponent.html":{}}}],["src/app/components/services/services.component.ts:220",{"_index":833,"title":{},"body":{"components/ServicesComponent.html":{}}}],["src/app/components/services/services.component.ts:230",{"_index":841,"title":{},"body":{"components/ServicesComponent.html":{}}}],["src/app/components/services/services.component.ts:24",{"_index":855,"title":{},"body":{"components/ServicesComponent.html":{}}}],["src/app/components/services/services.component.ts:29",{"_index":857,"title":{},"body":{"components/ServicesComponent.html":{}}}],["src/app/components/services/services.component.ts:35",{"_index":884,"title":{},"body":{"components/ServicesComponent.html":{}}}],["src/app/components/services/services.component.ts:61",{"_index":862,"title":{},"body":{"components/ServicesComponent.html":{}}}],["src/app/components/services/services.component.ts:66",{"_index":859,"title":{},"body":{"components/ServicesComponent.html":{}}}],["src/app/components/services/services.component.ts:71",{"_index":851,"title":{},"body":{"components/ServicesComponent.html":{}}}],["src/app/components/services/services.component.ts:76",{"_index":858,"title":{},"body":{"components/ServicesComponent.html":{}}}],["src/app/components/services/services.component.ts:81",{"_index":824,"title":{},"body":{"components/ServicesComponent.html":{}}}],["src/app/components/services/services.component.ts:95",{"_index":842,"title":{},"body":{"components/ServicesComponent.html":{}}}],["src/app/components/users/users.component.ts",{"_index":1126,"title":{},"body":{"coverage.html":{}}}],["src/app/components/utils/mat",{"_index":575,"title":{},"body":{"components/MatApprovedPickerRenderComponent.html":{},"components/MatContractPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{},"coverage.html":{}}}],["src/app/components/wastes/wastes.component.ts",{"_index":1000,"title":{},"body":{"components/WastesComponent.html":{},"coverage.html":{}}}],["src/app/components/wastes/wastes.component.ts:104",{"_index":1079,"title":{},"body":{"components/WastesComponent.html":{}}}],["src/app/components/wastes/wastes.component.ts:117",{"_index":1070,"title":{},"body":{"components/WastesComponent.html":{}}}],["src/app/components/wastes/wastes.component.ts:130",{"_index":1075,"title":{},"body":{"components/WastesComponent.html":{}}}],["src/app/components/wastes/wastes.component.ts:136",{"_index":1083,"title":{},"body":{"components/WastesComponent.html":{}}}],["src/app/components/wastes/wastes.component.ts:149",{"_index":1025,"title":{},"body":{"components/WastesComponent.html":{}}}],["src/app/components/wastes/wastes.component.ts:164",{"_index":1020,"title":{},"body":{"components/WastesComponent.html":{}}}],["src/app/components/wastes/wastes.component.ts:178",{"_index":1026,"title":{},"body":{"components/WastesComponent.html":{}}}],["src/app/components/wastes/wastes.component.ts:192",{"_index":1027,"title":{},"body":{"components/WastesComponent.html":{}}}],["src/app/components/wastes/wastes.component.ts:212",{"_index":1024,"title":{},"body":{"components/WastesComponent.html":{}}}],["src/app/components/wastes/wastes.component.ts:23",{"_index":1061,"title":{},"body":{"components/WastesComponent.html":{}}}],["src/app/components/wastes/wastes.component.ts:28",{"_index":1062,"title":{},"body":{"components/WastesComponent.html":{}}}],["src/app/components/wastes/wastes.component.ts:33",{"_index":1049,"title":{},"body":{"components/WastesComponent.html":{}}}],["src/app/components/wastes/wastes.component.ts:41",{"_index":1040,"title":{},"body":{"components/WastesComponent.html":{}}}],["src/app/components/wastes/wastes.component.ts:46",{"_index":1051,"title":{},"body":{"components/WastesComponent.html":{}}}],["src/app/components/wastes/wastes.component.ts:51",{"_index":1043,"title":{},"body":{"components/WastesComponent.html":{}}}],["src/app/components/wastes/wastes.component.ts:56",{"_index":1038,"title":{},"body":{"components/WastesComponent.html":{}}}],["src/app/components/wastes/wastes.component.ts:59",{"_index":1018,"title":{},"body":{"components/WastesComponent.html":{}}}],["src/app/components/wastes/wastes.component.ts:73",{"_index":1087,"title":{},"body":{"components/WastesComponent.html":{}}}],["src/app/components/wastes/wastes.component.ts:82",{"_index":1063,"title":{},"body":{"components/WastesComponent.html":{}}}],["src/app/components/wastes/wastes.component.ts:87",{"_index":1059,"title":{},"body":{"components/WastesComponent.html":{}}}],["src/app/components/wastes/wastes.component.ts:99",{"_index":1060,"title":{},"body":{"components/WastesComponent.html":{}}}],["src/app/services/auth",{"_index":263,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"coverage.html":{}}}],["src/app/services/login.service",{"_index":373,"title":{},"body":{"classes/EmailErrorStateMatcher.html":{},"components/InitialViewComponent.html":{},"components/LoginComponent.html":{},"classes/PasswordErrorStateMatcher.html":{}}}],["src/app/services/login.service.ts",{"_index":542,"title":{},"body":{"injectables/LoginService.html":{},"coverage.html":{}}}],["src/app/services/login.service.ts:22",{"_index":550,"title":{},"body":{"injectables/LoginService.html":{}}}],["src/app/services/login.service.ts:44",{"_index":555,"title":{},"body":{"injectables/LoginService.html":{}}}],["src/app/services/login.service.ts:55",{"_index":559,"title":{},"body":{"injectables/LoginService.html":{}}}],["src/app/services/services.service",{"_index":887,"title":{},"body":{"components/ServicesComponent.html":{}}}],["src/app/services/services.service.ts",{"_index":932,"title":{},"body":{"injectables/ServicesService.html":{},"coverage.html":{}}}],["src/app/services/services.service.ts:112",{"_index":948,"title":{},"body":{"injectables/ServicesService.html":{}}}],["src/app/services/services.service.ts:123",{"_index":940,"title":{},"body":{"injectables/ServicesService.html":{}}}],["src/app/services/services.service.ts:21",{"_index":937,"title":{},"body":{"injectables/ServicesService.html":{}}}],["src/app/services/services.service.ts:41",{"_index":941,"title":{},"body":{"injectables/ServicesService.html":{}}}],["src/app/services/services.service.ts:55",{"_index":953,"title":{},"body":{"injectables/ServicesService.html":{}}}],["src/app/services/services.service.ts:67",{"_index":938,"title":{},"body":{"injectables/ServicesService.html":{}}}],["src/app/services/services.service.ts:84",{"_index":959,"title":{},"body":{"injectables/ServicesService.html":{}}}],["src/app/services/services.service.ts:97",{"_index":943,"title":{},"body":{"injectables/ServicesService.html":{}}}],["src/app/services/users.service.ts",{"_index":977,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{}}}],["src/app/services/users.service.ts:21",{"_index":983,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/app/services/users.service.ts:42",{"_index":986,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/app/services/users.service.ts:53",{"_index":985,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/app/services/users.service.ts:66",{"_index":984,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/app/services/users.service.ts:79",{"_index":992,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/app/services/users.service.ts:92",{"_index":988,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/environments/environment",{"_index":567,"title":{},"body":{"injectables/LoginService.html":{},"injectables/ServicesService.html":{},"injectables/UsersService.html":{}}}],["started",{"_index":1168,"title":{"index.html":{}},"body":{}}],["status",{"_index":56,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/MatApprovedPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{},"components/ServicesComponent.html":{},"coverage.html":{}}}],["status:false",{"_index":64,"title":{},"body":{"components/AppComponent.html":{}}}],["status[\"status",{"_index":83,"title":{},"body":{"components/AppComponent.html":{}}}],["statuses",{"_index":592,"title":{},"body":{"components/MatApprovedPickerRenderComponent.html":{},"components/MatContractPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{}}}],["stored",{"_index":1191,"title":{},"body":{"index.html":{}}}],["string",{"_index":70,"title":{},"body":{"components/AppComponent.html":{},"interceptors/AuthInterceptor.html":{},"components/InitialViewComponent.html":{},"injectables/LoginService.html":{},"components/MatApprovedPickerRenderComponent.html":{},"components/MatContractPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{},"components/ServicesComponent.html":{},"injectables/ServicesService.html":{},"injectables/UsersService.html":{},"components/WastesComponent.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/InitialViewComponent.html":{},"components/LoginComponent.html":{},"components/MatApprovedPickerRenderComponent.html":{},"components/MatContractPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{},"components/ServicesComponent.html":{},"components/WastesComponent.html":{}}}],["styleurls",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"classes/EmailErrorStateMatcher.html":{},"components/InitialViewComponent.html":{},"components/LoginComponent.html":{},"classes/PasswordErrorStateMatcher.html":{},"components/ServicesComponent.html":{},"components/WastesComponent.html":{}}}],["subir",{"_index":1103,"title":{},"body":{"components/WastesComponent.html":{}}}],["suministrados",{"_index":643,"title":{},"body":{"components/MatApprovedPickerRenderComponent.html":{},"components/MatContractPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{}}}],["suppresstoolpanel",{"_index":868,"title":{},"body":{"components/ServicesComponent.html":{}}}],["sus",{"_index":430,"title":{},"body":{"components/InitialViewComponent.html":{},"injectables/ServicesService.html":{}}}],["svg",{"_index":1220,"title":{},"body":{"modules.html":{}}}],["tab",{"_index":675,"title":{},"body":{"components/MatApprovedPickerRenderComponent.html":{},"components/MatContractPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{}}}],["tabla",{"_index":829,"title":{},"body":{"components/ServicesComponent.html":{},"components/WastesComponent.html":{}}}],["tablas",{"_index":847,"title":{},"body":{"components/ServicesComponent.html":{},"components/WastesComponent.html":{}}}],["table",{"_index":1141,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1140,"title":{},"body":{"coverage.html":{}}}],["tecla",{"_index":624,"title":{},"body":{"components/MatApprovedPickerRenderComponent.html":{},"components/MatContractPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/InitialViewComponent.html":{},"components/LoginComponent.html":{},"components/MatApprovedPickerRenderComponent.html":{},"components/MatContractPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{},"components/ServicesComponent.html":{},"components/WastesComponent.html":{}}}],["templateurl",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"classes/EmailErrorStateMatcher.html":{},"components/InitialViewComponent.html":{},"components/LoginComponent.html":{},"classes/PasswordErrorStateMatcher.html":{},"components/ServicesComponent.html":{},"components/WastesComponent.html":{}}}],["test",{"_index":1200,"title":{},"body":{"index.html":{}}}],["tests",{"_index":1199,"title":{},"body":{"index.html":{}}}],["text",{"_index":1055,"title":{},"body":{"components/WastesComponent.html":{}}}],["this._bottomsheet.open(addservicemodalcomponent",{"_index":909,"title":{},"body":{"components/ServicesComponent.html":{}}}],["this._bottomsheet.open(wasteuploadcomponent,{disableclose:true",{"_index":1092,"title":{},"body":{"components/WastesComponent.html":{}}}],["this._snackbar.open(\"creedenciales",{"_index":419,"title":{},"body":{"classes/EmailErrorStateMatcher.html":{},"components/LoginComponent.html":{},"classes/PasswordErrorStateMatcher.html":{}}}],["this.baseurl",{"_index":570,"title":{},"body":{"injectables/LoginService.html":{},"injectables/ServicesService.html":{},"injectables/UsersService.html":{}}}],["this.contract",{"_index":732,"title":{},"body":{"components/MatContractPickerRenderComponent.html":{}}}],["this.contractgetter.bind(this)},valuegetter:this.contractgetterformat.bind(this",{"_index":876,"title":{},"body":{"components/ServicesComponent.html":{}}}],["this.contracts",{"_index":728,"title":{},"body":{"components/MatContractPickerRenderComponent.html":{},"components/ServicesComponent.html":{}}}],["this.contracts.filter((v)=>{return",{"_index":924,"title":{},"body":{"components/ServicesComponent.html":{}}}],["this.dias",{"_index":670,"title":{},"body":{"components/MatApprovedPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{}}}],["this.focusedinput",{"_index":682,"title":{},"body":{"components/MatApprovedPickerRenderComponent.html":{},"components/MatContractPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{}}}],["this.focusoninputnexttick(input",{"_index":704,"title":{},"body":{"components/MatApprovedPickerRenderComponent.html":{},"components/MatContractPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{}}}],["this.focusoninputnexttick(inputtofocuson",{"_index":688,"title":{},"body":{"components/MatApprovedPickerRenderComponent.html":{},"components/MatContractPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{}}}],["this.focusoninputnexttick(this.inputs.first",{"_index":666,"title":{},"body":{"components/MatApprovedPickerRenderComponent.html":{},"components/MatContractPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{}}}],["this.frameworkcomponents",{"_index":889,"title":{},"body":{"components/ServicesComponent.html":{}}}],["this.getallcontracts",{"_index":892,"title":{},"body":{"components/ServicesComponent.html":{}}}],["this.getallmodules",{"_index":893,"title":{},"body":{"components/ServicesComponent.html":{}}}],["this.gridapi",{"_index":913,"title":{},"body":{"components/ServicesComponent.html":{},"components/WastesComponent.html":{}}}],["this.gridapi.foreachnode(node",{"_index":902,"title":{},"body":{"components/ServicesComponent.html":{}}}],["this.gridapi.getrownode(event.rowindex",{"_index":898,"title":{},"body":{"components/ServicesComponent.html":{}}}],["this.gridapi.refreshcells(params",{"_index":1102,"title":{},"body":{"components/WastesComponent.html":{}}}],["this.gridcolumnapi",{"_index":915,"title":{},"body":{"components/ServicesComponent.html":{},"components/WastesComponent.html":{}}}],["this.http.get(this.baseurl+'getallusers",{"_index":993,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.http.get(this.baseurl+'logout",{"_index":574,"title":{},"body":{"injectables/LoginService.html":{}}}],["this.http.post(this.baseurl+'addservice',{data:data",{"_index":965,"title":{},"body":{"injectables/ServicesService.html":{}}}],["this.http.post(this.baseurl+'adduser',{data:users",{"_index":997,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.http.post(this.baseurl+'getallcontracts",{"_index":967,"title":{},"body":{"injectables/ServicesService.html":{}}}],["this.http.post(this.baseurl+'getallmodules",{"_index":975,"title":{},"body":{"injectables/ServicesService.html":{}}}],["this.http.post(this.baseurl+'getallservices",{"_index":964,"title":{},"body":{"injectables/ServicesService.html":{}}}],["this.http.post(this.baseurl+'getservicesdata',{servid:id",{"_index":971,"title":{},"body":{"injectables/ServicesService.html":{}}}],["this.http.post(this.baseurl+'getservicesfiltered',{fecha:fecha,contid:contid",{"_index":973,"title":{},"body":{"injectables/ServicesService.html":{}}}],["this.http.post(this.baseurl+'login',{user:user,password:password",{"_index":573,"title":{},"body":{"injectables/LoginService.html":{}}}],["this.http.post(this.baseurl+'permissionslist",{"_index":995,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.http.post(this.baseurl+'profiles/modify',{data:profiles",{"_index":999,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.http.post(this.baseurl+'profileslist",{"_index":994,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.http.post(this.baseurl+'services/adddataservices',{service:service,data:data",{"_index":969,"title":{},"body":{"injectables/ServicesService.html":{}}}],["this.inputs.find((item",{"_index":686,"title":{},"body":{"components/MatApprovedPickerRenderComponent.html":{},"components/MatContractPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{}}}],["this.inputs.foreach(input",{"_index":702,"title":{},"body":{"components/MatApprovedPickerRenderComponent.html":{},"components/MatContractPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{}}}],["this.inputs.length",{"_index":683,"title":{},"body":{"components/MatApprovedPickerRenderComponent.html":{},"components/MatContractPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{}}}],["this.isvalidrequestforinterceptor(request.url",{"_index":311,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["this.loginchanged.emit({status:false",{"_index":480,"title":{},"body":{"components/InitialViewComponent.html":{}}}],["this.loginchanged.emit({status:true",{"_index":418,"title":{},"body":{"classes/EmailErrorStateMatcher.html":{},"components/LoginComponent.html":{},"classes/PasswordErrorStateMatcher.html":{}}}],["this.loginservice.loginuser(this.emailformcontrol.value,this.passwordformcontrol.value).subscribe",{"_index":414,"title":{},"body":{"classes/EmailErrorStateMatcher.html":{},"components/LoginComponent.html":{},"classes/PasswordErrorStateMatcher.html":{}}}],["this.loginservice.logout().subscribe(data",{"_index":479,"title":{},"body":{"components/InitialViewComponent.html":{}}}],["this.loginstatus.status",{"_index":82,"title":{},"body":{"components/AppComponent.html":{}}}],["this.modulegetter.bind(this",{"_index":882,"title":{},"body":{"components/ServicesComponent.html":{}}}],["this.modules",{"_index":749,"title":{},"body":{"components/MatModulesPickerRenderComponent.html":{},"components/ServicesComponent.html":{}}}],["this.modules.filter((v)=>{return",{"_index":928,"title":{},"body":{"components/ServicesComponent.html":{}}}],["this.params",{"_index":731,"title":{},"body":{"components/MatContractPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{}}}],["this.params.permissions().data",{"_index":763,"title":{},"body":{"components/MatPermissionsPickerRenderComponent.html":{}}}],["this.params.profiles().data",{"_index":772,"title":{},"body":{"components/MatProfilesPickerRenderComponent.html":{}}}],["this.passwordformcontrol.status",{"_index":413,"title":{},"body":{"classes/EmailErrorStateMatcher.html":{},"components/LoginComponent.html":{},"classes/PasswordErrorStateMatcher.html":{}}}],["this.permissions",{"_index":473,"title":{},"body":{"components/InitialViewComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{}}}],["this.preventdefaultandpropagation(event",{"_index":676,"title":{},"body":{"components/MatApprovedPickerRenderComponent.html":{},"components/MatContractPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{}}}],["this.profiles",{"_index":771,"title":{},"body":{"components/MatProfilesPickerRenderComponent.html":{}}}],["this.renderusername",{"_index":475,"title":{},"body":{"components/InitialViewComponent.html":{}}}],["this.saveservicebuttonactive=true",{"_index":900,"title":{},"body":{"components/ServicesComponent.html":{}}}],["this.selectedmodule=selection",{"_index":478,"title":{},"body":{"components/InitialViewComponent.html":{}}}],["this.selectedwastemetric",{"_index":1090,"title":{},"body":{"components/WastesComponent.html":{}}}],["this.servicerowdata",{"_index":895,"title":{},"body":{"components/ServicesComponent.html":{},"components/WastesComponent.html":{}}}],["this.services",{"_index":784,"title":{},"body":{"components/MatServicesPickerRenderComponent.html":{}}}],["this.servicesservice.getallcontracts().subscribe(data",{"_index":919,"title":{},"body":{"components/ServicesComponent.html":{}}}],["this.servicesservice.getallmodules().subscribe(data",{"_index":922,"title":{},"body":{"components/ServicesComponent.html":{}}}],["this.servicesservice.getallservices().subscribe(data",{"_index":894,"title":{},"body":{"components/ServicesComponent.html":{}}}],["this.servicesservice.saveservices(datatoupload).subscribe(data2",{"_index":907,"title":{},"body":{"components/ServicesComponent.html":{}}}],["this.urlstonotuse",{"_index":309,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["this.user",{"_index":471,"title":{},"body":{"components/InitialViewComponent.html":{}}}],["this.user[\"permissions",{"_index":474,"title":{},"body":{"components/InitialViewComponent.html":{}}}],["this.user[\"user\"].user_username",{"_index":476,"title":{},"body":{"components/InitialViewComponent.html":{}}}],["this.userrowdata",{"_index":1099,"title":{},"body":{"components/WastesComponent.html":{}}}],["tipo",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"interceptors/AuthInterceptor.html":{},"classes/EmailErrorStateMatcher.html":{},"components/InitialViewComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/MatApprovedPickerRenderComponent.html":{},"components/MatContractPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{},"classes/PasswordErrorStateMatcher.html":{},"components/ServicesComponent.html":{},"injectables/ServicesService.html":{},"injectables/UsersService.html":{},"components/WastesComponent.html":{},"coverage.html":{}}}],["tipos",{"_index":747,"title":{},"body":{"components/MatModulesPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{}}}],["title",{"_index":37,"title":{},"body":{"components/AppComponent.html":{}}}],["titulo",{"_index":73,"title":{},"body":{"components/AppComponent.html":{}}}],["todo",{"_index":385,"title":{},"body":{"classes/EmailErrorStateMatcher.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"classes/PasswordErrorStateMatcher.html":{},"components/ServicesComponent.html":{},"injectables/ServicesService.html":{},"components/WastesComponent.html":{}}}],["token",{"_index":312,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["ton",{"_index":1077,"title":{},"body":{"components/WastesComponent.html":{}}}],["ton:\"29000",{"_index":1080,"title":{},"body":{"components/WastesComponent.html":{}}}],["toneladas",{"_index":1076,"title":{},"body":{"components/WastesComponent.html":{}}}],["top",{"_index":492,"title":{},"body":{"components/InitialViewComponent.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"components/InitialViewComponent.html":{},"components/LoginComponent.html":{},"components/MatApprovedPickerRenderComponent.html":{},"components/MatContractPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{},"components/ServicesComponent.html":{},"components/WastesComponent.html":{}}}],["true",{"_index":253,"title":{},"body":{"modules/AppModule.html":{},"interceptors/AuthInterceptor.html":{},"components/InitialViewComponent.html":{},"injectables/LoginService.html":{},"components/MatApprovedPickerRenderComponent.html":{},"components/MatContractPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{},"components/ServicesComponent.html":{},"components/WastesComponent.html":{}}}],["tslib",{"_index":1161,"title":{},"body":{"dependencies.html":{}}}],["tu",{"_index":1217,"title":{},"body":{"modules.html":{}}}],["type",{"_index":79,"title":{},"body":{"components/AppComponent.html":{},"interceptors/AuthInterceptor.html":{},"classes/EmailErrorStateMatcher.html":{},"components/InitialViewComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/MatApprovedPickerRenderComponent.html":{},"components/MatContractPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{},"classes/PasswordErrorStateMatcher.html":{},"components/ServicesComponent.html":{},"injectables/ServicesService.html":{},"injectables/UsersService.html":{},"components/WastesComponent.html":{}}}],["un",{"_index":578,"title":{},"body":{"components/MatApprovedPickerRenderComponent.html":{},"components/MatContractPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{},"injectables/ServicesService.html":{}}}],["una",{"_index":623,"title":{},"body":{"components/MatApprovedPickerRenderComponent.html":{},"components/MatContractPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{},"components/ServicesComponent.html":{},"components/WastesComponent.html":{}}}],["unit",{"_index":1198,"title":{},"body":{"index.html":{}}}],["upload.component",{"_index":221,"title":{},"body":{"modules/AppModule.html":{},"components/WastesComponent.html":{}}}],["upload/file",{"_index":220,"title":{},"body":{"modules/AppModule.html":{}}}],["upload/waste",{"_index":247,"title":{},"body":{"modules/AppModule.html":{},"components/WastesComponent.html":{}}}],["uploadservicedata",{"_index":936,"title":{},"body":{"injectables/ServicesService.html":{}}}],["uploadservicedata(service",{"_index":958,"title":{},"body":{"injectables/ServicesService.html":{}}}],["uploadservicedata(service,data",{"_index":963,"title":{},"body":{"injectables/ServicesService.html":{}}}],["uploadservicedata(service,data):observable",{"_index":968,"title":{},"body":{"injectables/ServicesService.html":{}}}],["url",{"_index":297,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["urls",{"_index":301,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["urlstonotuse",{"_index":277,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["usa",{"_index":602,"title":{},"body":{"components/MatApprovedPickerRenderComponent.html":{},"components/MatContractPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{}}}],["usada",{"_index":67,"title":{},"body":{"components/AppComponent.html":{},"interceptors/AuthInterceptor.html":{},"injectables/LoginService.html":{},"injectables/ServicesService.html":{},"injectables/UsersService.html":{}}}],["usaran",{"_index":854,"title":{},"body":{"components/ServicesComponent.html":{},"components/WastesComponent.html":{}}}],["use",{"_index":659,"title":{},"body":{"components/MatApprovedPickerRenderComponent.html":{},"components/MatContractPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{},"components/WastesComponent.html":{},"index.html":{}}}],["useclass",{"_index":251,"title":{},"body":{"modules/AppModule.html":{}}}],["user",{"_index":232,"title":{},"body":{"modules/AppModule.html":{},"components/InitialViewComponent.html":{},"injectables/LoginService.html":{},"components/MatApprovedPickerRenderComponent.html":{},"components/MatContractPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{}}}],["user_code",{"_index":1068,"title":{},"body":{"components/WastesComponent.html":{}}}],["user_name",{"_index":1066,"title":{},"body":{"components/WastesComponent.html":{}}}],["user_status",{"_index":1069,"title":{},"body":{"components/WastesComponent.html":{}}}],["usercolumnsdefs",{"_index":1011,"title":{},"body":{"components/WastesComponent.html":{}}}],["userrowdata",{"_index":1012,"title":{},"body":{"components/WastesComponent.html":{}}}],["users",{"_index":989,"title":{},"body":{"injectables/UsersService.html":{}}}],["users'},{'name",{"_index":114,"title":{},"body":{"components/AppComponent.html":{},"components/InitialViewComponent.html":{},"components/LoginComponent.html":{},"components/MatApprovedPickerRenderComponent.html":{},"components/MatContractPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{},"components/ServicesComponent.html":{},"components/WastesComponent.html":{}}}],["userscomponent",{"_index":113,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/InitialViewComponent.html":{},"components/LoginComponent.html":{},"components/MatApprovedPickerRenderComponent.html":{},"components/MatContractPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{},"components/ServicesComponent.html":{},"components/WastesComponent.html":{},"coverage.html":{},"overview.html":{}}}],["usersservice",{"_index":976,"title":{"injectables/UsersService.html":{}},"body":{"injectables/UsersService.html":{},"coverage.html":{}}}],["usuario",{"_index":455,"title":{},"body":{"components/InitialViewComponent.html":{},"injectables/LoginService.html":{},"components/MatProfilesPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{},"components/WastesComponent.html":{}}}],["usuario1",{"_index":1071,"title":{},"body":{"components/WastesComponent.html":{}}}],["usuario2",{"_index":1081,"title":{},"body":{"components/WastesComponent.html":{}}}],["usuario3",{"_index":1082,"title":{},"body":{"components/WastesComponent.html":{}}}],["usuarios",{"_index":485,"title":{},"body":{"components/InitialViewComponent.html":{},"injectables/LoginService.html":{},"injectables/UsersService.html":{},"components/WastesComponent.html":{}}}],["util",{"_index":577,"title":{},"body":{"components/MatApprovedPickerRenderComponent.html":{},"components/MatContractPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{}}}],["utiliza",{"_index":46,"title":{},"body":{"components/AppComponent.html":{},"interceptors/AuthInterceptor.html":{},"classes/EmailErrorStateMatcher.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"classes/PasswordErrorStateMatcher.html":{},"components/ServicesComponent.html":{},"injectables/ServicesService.html":{},"injectables/UsersService.html":{},"components/WastesComponent.html":{}}}],["utilizar",{"_index":275,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["utils/mat",{"_index":888,"title":{},"body":{"components/ServicesComponent.html":{},"components/WastesComponent.html":{}}}],["v.contid",{"_index":925,"title":{},"body":{"components/ServicesComponent.html":{}}}],["v.moduid",{"_index":929,"title":{},"body":{"components/ServicesComponent.html":{}}}],["vacio",{"_index":410,"title":{},"body":{"classes/EmailErrorStateMatcher.html":{},"components/InitialViewComponent.html":{},"components/LoginComponent.html":{},"components/MatApprovedPickerRenderComponent.html":{},"components/MatContractPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{},"classes/PasswordErrorStateMatcher.html":{},"components/ServicesComponent.html":{},"components/WastesComponent.html":{}}}],["valid",{"_index":412,"title":{},"body":{"classes/EmailErrorStateMatcher.html":{},"components/LoginComponent.html":{},"classes/PasswordErrorStateMatcher.html":{}}}],["valida",{"_index":454,"title":{},"body":{"components/InitialViewComponent.html":{}}}],["validar",{"_index":267,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["validation",{"_index":692,"title":{},"body":{"components/MatApprovedPickerRenderComponent.html":{},"components/MatContractPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{}}}],["validators",{"_index":370,"title":{},"body":{"classes/EmailErrorStateMatcher.html":{},"components/LoginComponent.html":{},"classes/PasswordErrorStateMatcher.html":{}}}],["validators.email",{"_index":396,"title":{},"body":{"classes/EmailErrorStateMatcher.html":{},"components/LoginComponent.html":{},"classes/PasswordErrorStateMatcher.html":{}}}],["validators.required",{"_index":395,"title":{},"body":{"classes/EmailErrorStateMatcher.html":{},"components/LoginComponent.html":{},"classes/PasswordErrorStateMatcher.html":{}}}],["valido",{"_index":365,"title":{},"body":{"classes/EmailErrorStateMatcher.html":{},"components/LoginComponent.html":{},"classes/PasswordErrorStateMatcher.html":{}}}],["valor",{"_index":61,"title":{},"body":{"components/AppComponent.html":{},"classes/EmailErrorStateMatcher.html":{},"components/InitialViewComponent.html":{},"components/LoginComponent.html":{},"components/MatApprovedPickerRenderComponent.html":{},"components/MatContractPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{},"classes/PasswordErrorStateMatcher.html":{},"components/ServicesComponent.html":{},"components/WastesComponent.html":{}}}],["value",{"_index":923,"title":{},"body":{"components/ServicesComponent.html":{},"components/WastesComponent.html":{}}}],["value[0].contname",{"_index":927,"title":{},"body":{"components/ServicesComponent.html":{}}}],["value[0].moduname",{"_index":931,"title":{},"body":{"components/ServicesComponent.html":{}}}],["valuegetter:this.abvaluegetter.bind(this",{"_index":1078,"title":{},"body":{"components/WastesComponent.html":{}}}],["var",{"_index":88,"title":{},"body":{"components/AppComponent.html":{},"components/InitialViewComponent.html":{},"components/LoginComponent.html":{},"components/MatApprovedPickerRenderComponent.html":{},"components/MatContractPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{},"components/ServicesComponent.html":{},"components/WastesComponent.html":{}}}],["variable",{"_index":66,"title":{},"body":{"components/AppComponent.html":{},"interceptors/AuthInterceptor.html":{},"classes/EmailErrorStateMatcher.html":{},"components/InitialViewComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/MatApprovedPickerRenderComponent.html":{},"components/MatContractPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{},"classes/PasswordErrorStateMatcher.html":{},"components/ServicesComponent.html":{},"injectables/ServicesService.html":{},"injectables/UsersService.html":{},"components/WastesComponent.html":{}}}],["variables",{"_index":564,"title":{},"body":{"injectables/LoginService.html":{},"injectables/ServicesService.html":{},"injectables/UsersService.html":{}}}],["verificar",{"_index":459,"title":{},"body":{"components/InitialViewComponent.html":{},"components/MatApprovedPickerRenderComponent.html":{},"components/MatContractPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{}}}],["version",{"_index":1172,"title":{},"body":{"index.html":{}}}],["via",{"_index":1202,"title":{},"body":{"index.html":{}}}],["view",{"_index":426,"title":{},"body":{"components/InitialViewComponent.html":{}}}],["view'},{'name",{"_index":99,"title":{},"body":{"components/AppComponent.html":{},"components/InitialViewComponent.html":{},"components/LoginComponent.html":{},"components/MatApprovedPickerRenderComponent.html":{},"components/MatContractPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{},"components/ServicesComponent.html":{},"components/WastesComponent.html":{}}}],["view.component",{"_index":187,"title":{},"body":{"modules/AppModule.html":{}}}],["view.component.html",{"_index":433,"title":{},"body":{"components/InitialViewComponent.html":{}}}],["view.component.scss",{"_index":432,"title":{},"body":{"components/InitialViewComponent.html":{}}}],["view.component.ts",{"_index":425,"title":{},"body":{"components/InitialViewComponent.html":{},"coverage.html":{}}}],["view.component.ts:19",{"_index":466,"title":{},"body":{"components/InitialViewComponent.html":{}}}],["view.component.ts:24",{"_index":442,"title":{},"body":{"components/InitialViewComponent.html":{}}}],["view.component.ts:29",{"_index":467,"title":{},"body":{"components/InitialViewComponent.html":{}}}],["view.component.ts:34",{"_index":465,"title":{},"body":{"components/InitialViewComponent.html":{}}}],["view.component.ts:39",{"_index":441,"title":{},"body":{"components/InitialViewComponent.html":{}}}],["view.component.ts:54",{"_index":453,"title":{},"body":{"components/InitialViewComponent.html":{}}}],["view.component.ts:69",{"_index":463,"title":{},"body":{"components/InitialViewComponent.html":{}}}],["view.component.ts:83",{"_index":447,"title":{},"body":{"components/InitialViewComponent.html":{}}}],["view.component.ts:93",{"_index":460,"title":{},"body":{"components/InitialViewComponent.html":{}}}],["view/initial",{"_index":186,"title":{},"body":{"modules/AppModule.html":{},"components/InitialViewComponent.html":{},"coverage.html":{}}}],["viewchildren",{"_index":654,"title":{},"body":{"components/MatApprovedPickerRenderComponent.html":{},"components/MatContractPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{}}}],["viewchildren(\"input",{"_index":657,"title":{},"body":{"components/MatApprovedPickerRenderComponent.html":{},"components/MatContractPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{}}}],["viewchildren('input",{"_index":640,"title":{},"body":{"components/MatApprovedPickerRenderComponent.html":{},"components/MatContractPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{}}}],["viewcontainerref",{"_index":609,"title":{},"body":{"components/MatApprovedPickerRenderComponent.html":{},"components/MatContractPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{}}}],["viewvalue",{"_index":1084,"title":{},"body":{"components/WastesComponent.html":{}}}],["void",{"_index":60,"title":{},"body":{"components/AppComponent.html":{},"classes/EmailErrorStateMatcher.html":{},"components/InitialViewComponent.html":{},"components/LoginComponent.html":{},"components/MatApprovedPickerRenderComponent.html":{},"components/MatContractPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{},"classes/PasswordErrorStateMatcher.html":{},"components/ServicesComponent.html":{},"components/WastesComponent.html":{}}}],["want",{"_index":699,"title":{},"body":{"components/MatApprovedPickerRenderComponent.html":{},"components/MatContractPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{}}}],["wasteconvertmetrics",{"_index":1013,"title":{},"body":{"components/WastesComponent.html":{}}}],["wastem.viewvalue",{"_index":1108,"title":{},"body":{"components/WastesComponent.html":{}}}],["wastes",{"_index":116,"title":{},"body":{"components/AppComponent.html":{},"components/InitialViewComponent.html":{},"components/LoginComponent.html":{},"components/MatApprovedPickerRenderComponent.html":{},"components/MatContractPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{},"components/ServicesComponent.html":{},"components/WastesComponent.html":{}}}],["wastes.component.html",{"_index":1002,"title":{},"body":{"components/WastesComponent.html":{}}}],["wastes.component.scss",{"_index":1001,"title":{},"body":{"components/WastesComponent.html":{}}}],["wastescomponent",{"_index":115,"title":{"components/WastesComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/InitialViewComponent.html":{},"components/LoginComponent.html":{},"components/MatApprovedPickerRenderComponent.html":{},"components/MatContractPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{},"components/ServicesComponent.html":{},"components/WastesComponent.html":{},"coverage.html":{},"overview.html":{}}}],["wasteuploadcomponent",{"_index":151,"title":{},"body":{"modules/AppModule.html":{},"components/WastesComponent.html":{}}}],["white",{"_index":505,"title":{},"body":{"components/InitialViewComponent.html":{}}}],["width",{"_index":501,"title":{},"body":{"components/InitialViewComponent.html":{},"components/MatApprovedPickerRenderComponent.html":{},"components/MatContractPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{},"components/ServicesComponent.html":{},"components/WastesComponent.html":{}}}],["width:20vw",{"_index":1112,"title":{},"body":{"components/WastesComponent.html":{}}}],["width:30",{"_index":528,"title":{},"body":{"components/InitialViewComponent.html":{}}}],["window.settimeout",{"_index":667,"title":{},"body":{"components/MatApprovedPickerRenderComponent.html":{},"components/MatContractPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{}}}],["withcredentials",{"_index":318,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"injectables/LoginService.html":{}}}],["wrapper",{"_index":1111,"title":{},"body":{"components/WastesComponent.html":{}}}],["xlsx",{"_index":1163,"title":{},"body":{"dependencies.html":{}}}],["y",{"_index":383,"title":{},"body":{"classes/EmailErrorStateMatcher.html":{},"components/InitialViewComponent.html":{},"components/LoginComponent.html":{},"components/MatApprovedPickerRenderComponent.html":{},"components/MatContractPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{},"classes/PasswordErrorStateMatcher.html":{},"components/ServicesComponent.html":{},"injectables/ServicesService.html":{},"components/WastesComponent.html":{}}}],["y/o",{"_index":955,"title":{},"body":{"injectables/ServicesService.html":{},"injectables/UsersService.html":{}}}],["you'd",{"_index":697,"title":{},"body":{"components/MatApprovedPickerRenderComponent.html":{},"components/MatContractPickerRenderComponent.html":{},"components/MatModulesPickerRenderComponent.html":{},"components/MatPermissionsPickerRenderComponent.html":{},"components/MatProfilesPickerRenderComponent.html":{},"components/MatServicesPickerRenderComponent.html":{},"components/MatStatusPickerRenderComponent.html":{}}}],["zone.js",{"_index":1165,"title":{},"body":{"dependencies.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Componentes\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    Fichero\n\n\n    src/app/app.component.ts\n\n\n    \n        Descripción\n    \n    \n        Componente principal\nEste componente se encarga de realizar la conexion con el resto de modulos\n\n    \n\n\n\n\n\n    Meta datos\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Índice\n    \n        \n                \n                    \n                        Propiedades\n                    \n                \n                \n                    \n                        \n                            \n                                loginStatus\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Métodos\n                    \n                \n                \n                    \n                        \n                            \n                                countChangedHandler\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Métodos\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            countChangedHandler\n                        \n                        \n                    \n                \n            \n            \n                \ncountChangedHandler(status: Object)\n                \n            \n\n\n            \n                \n                    Definido en src/app/app.component.ts:33\n                \n            \n\n\n            \n                \n                    Este metodo se utiliza para cambiar el estado de login\n\n\n                    \n                        Parámetros :\n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                    Descripción\n                                \n                            \n                            \n                                \n                                    status\n                                    \n                                                Object\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Objeto con estado\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                        Ejemplo :\n                        \n                            countChangedHandler(status)\n                        \n                    \n                    \n                        Devuelve :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Propiedades\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loginStatus\n                            \n                        \n                    \n                \n                    \n                        \n                            Tipo :         object\n\n                        \n                    \n                    \n                        \n                            Valor por defecto : {status:false}\n                        \n                    \n                        \n                            \n                                    Definido en src/app/app.component.ts:24\n                            \n                        \n\n                \n                    \n                        Variable usada para mantener el estado del login\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Tipo :         string\n\n                        \n                    \n                    \n                        \n                            Valor por defecto : 'SarmFrontend'\n                        \n                    \n                        \n                            \n                                    Definido en src/app/app.component.ts:19\n                            \n                        \n\n                \n                    \n                        Variable para el titulo de la pagina\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n\n/**\n * Componente principal\n * Este componente se encarga de realizar la conexion con el resto de modulos\n */\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  /**\n     * Variable para el titulo de la pagina\n     * @type string\n     */\n  title = 'SarmFrontend';\n  /**\n     * Variable usada para mantener el estado del login\n     * @type Object\n     */\n  loginStatus = {status:false}\n\n  /**\n  * Este metodo se utiliza para cambiar el estado de login\n  * @example\n  *  countChangedHandler(status)\n  * @param {String} status\n  * Objeto con estado\n  */\n  countChangedHandler(status: Object) {\n    \n    \n    \n    this.loginStatus.status = status[\"status\"]\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n    \n  \n\n\n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Leyenda\n            \n            \n                Elemento Html\n            \n            \n                Componente\n            \n            \n                Elemento Html con directiva\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BathroomsComponent', 'selector': 'app-bathrooms'},{'name': 'CommercialComponent', 'selector': 'app-commercial'},{'name': 'InitialViewComponent', 'selector': 'app-initial-view'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MatApprovedPickerRenderComponent', 'selector': 'input-cell'},{'name': 'MatContractPickerRenderComponent', 'selector': 'input-cell'},{'name': 'MatModulesPickerRenderComponent', 'selector': 'input-cell'},{'name': 'MatPermissionsPickerRenderComponent', 'selector': 'input-cell'},{'name': 'MatProfilesPickerRenderComponent', 'selector': 'input-cell'},{'name': 'MatServicesPickerRenderComponent', 'selector': 'input-cell'},{'name': 'MatStatusPickerRenderComponent', 'selector': 'input-cell'},{'name': 'ServicesComponent', 'selector': 'app-services'},{'name': 'UsersComponent', 'selector': 'app-users'},{'name': 'WastesComponent', 'selector': 'app-wastes'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Módulos\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_declarations\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nBathroomsComponent\n\nBathroomsComponent\n\nAppModule -->\n\nBathroomsComponent->AppModule\n\n\n\n\n\nCommercialComponent\n\nCommercialComponent\n\nAppModule -->\n\nCommercialComponent->AppModule\n\n\n\n\n\nInitialViewComponent\n\nInitialViewComponent\n\nAppModule -->\n\nInitialViewComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nMatApprovedPickerRenderComponent\n\nMatApprovedPickerRenderComponent\n\nAppModule -->\n\nMatApprovedPickerRenderComponent->AppModule\n\n\n\n\n\nMatContractPickerRenderComponent\n\nMatContractPickerRenderComponent\n\nAppModule -->\n\nMatContractPickerRenderComponent->AppModule\n\n\n\n\n\nMatModulesPickerRenderComponent\n\nMatModulesPickerRenderComponent\n\nAppModule -->\n\nMatModulesPickerRenderComponent->AppModule\n\n\n\n\n\nMatPermissionsPickerRenderComponent\n\nMatPermissionsPickerRenderComponent\n\nAppModule -->\n\nMatPermissionsPickerRenderComponent->AppModule\n\n\n\n\n\nMatProfilesPickerRenderComponent\n\nMatProfilesPickerRenderComponent\n\nAppModule -->\n\nMatProfilesPickerRenderComponent->AppModule\n\n\n\n\n\nMatServicesPickerRenderComponent\n\nMatServicesPickerRenderComponent\n\nAppModule -->\n\nMatServicesPickerRenderComponent->AppModule\n\n\n\n\n\nMatStatusPickerRenderComponent\n\nMatStatusPickerRenderComponent\n\nAppModule -->\n\nMatStatusPickerRenderComponent->AppModule\n\n\n\n\n\nServicesComponent\n\nServicesComponent\n\nAppModule -->\n\nServicesComponent->AppModule\n\n\n\n\n\nUsersComponent\n\nUsersComponent\n\nAppModule -->\n\nUsersComponent->AppModule\n\n\n\n\n\nWastesComponent\n\nWastesComponent\n\nAppModule -->\n\nWastesComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nAuthInterceptor\n\nAuthInterceptor\n\nAppModule -->\n\nAuthInterceptor->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Ampliar\n        Restablecer\n        Alejar\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            Fichero\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declaraciones\n                    \n                        \n                            AppComponent\n                        \n                        \n                            BathroomsComponent\n                        \n                        \n                            CommercialComponent\n                        \n                        \n                            InitialViewComponent\n                        \n                        \n                            LoginComponent\n                        \n                        \n                            MatApprovedPickerRenderComponent\n                        \n                        \n                            MatContractPickerRenderComponent\n                        \n                        \n                            MatModulesPickerRenderComponent\n                        \n                        \n                            MatPermissionsPickerRenderComponent\n                        \n                        \n                            MatProfilesPickerRenderComponent\n                        \n                        \n                            MatServicesPickerRenderComponent\n                        \n                        \n                            MatStatusPickerRenderComponent\n                        \n                        \n                            ServicesComponent\n                        \n                        \n                            UsersComponent\n                        \n                        \n                            WastesComponent\n                        \n                    \n                \n                \n                    Componentes de entrada\n                    \n                        \n                            AddProfilesModalComponent\n                        \n                        \n                            AddServiceModalComponent\n                        \n                        \n                            AddUserModalComponent\n                        \n                        \n                            FileUploadComponent\n                        \n                        \n                            MatApprovedPickerRenderComponent\n                        \n                        \n                            MatContractPickerRenderComponent\n                        \n                        \n                            MatModulesPickerRenderComponent\n                        \n                        \n                            MatPermissionsPickerRenderComponent\n                        \n                        \n                            MatProfilesPickerRenderComponent\n                        \n                        \n                            MatServicesPickerRenderComponent\n                        \n                        \n                            MatStatusPickerRenderComponent\n                        \n                        \n                            WasteUploadComponent\n                        \n                    \n                \n                \n                    Proveedores\n                    \n                        \n                            AuthInterceptor\n                        \n                    \n                \n                \n                    Importa\n                    \n                        \n                            AppRoutingModule\n                        \n                    \n                \n                \n                    Arranque\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { LoginComponent } from './components/login/login.component';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatDividerModule} from '@angular/material/divider';\nimport {MatInputModule} from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\nimport { ErrorStateMatcher, MatNativeDateModule, ShowOnDirtyErrorStateMatcher } from '@angular/material/core';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport { InitialViewComponent } from './components/initial-view/initial-view.component';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatTooltipModule} from '@angular/material/tooltip';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport { UsersComponent } from './components/users/users.component';\nimport { AgGridModule } from 'ag-grid-angular';\nimport { MatProfilesPickerRenderComponent } from './components/utils/mat-profiles-picker-render/mat-profiles-picker-render.component';\nimport { MatFormFieldModule } from \"@angular/material/form-field\";\nimport {MatSelectModule} from '@angular/material/select';\nimport { WastesComponent } from './components/wastes/wastes.component';\nimport {MatMenuModule} from '@angular/material/menu';\nimport {MatDatepickerModule} from '@angular/material/datepicker';\nimport { BathroomsComponent } from './components/bathrooms/bathrooms.component';\nimport { FileUploadComponent } from './botoom-sheet/file-upload/file-upload.component';\nimport {MatBottomSheetModule} from '@angular/material/bottom-sheet';\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\nimport { AuthInterceptor } from './services/auth-interceptor';\nimport { MatPermissionsPickerRenderComponent } from './components/utils/mat-permissions-picker-render/mat-permissions-picker-render.component';\nimport { MatStatusPickerRenderComponent } from './components/utils/mat-status-picker-render/mat-status-picker-render.component';\nimport { AddUserModalComponent } from './botoom-sheet/add-user-modal/add-user-modal.component';\nimport { AddProfilesModalComponent } from './botoom-sheet/add-profiles-modal/add-profiles-modal.component';\nimport { ServicesComponent } from './components/services/services.component';\nimport { CommercialComponent } from './components/commercial/commercial.component';\nimport { AddServiceModalComponent } from './botoom-sheet/add-service-modal/add-service-modal.component';\nimport { MatContractPickerRenderComponent } from './components/utils/mat-contract-picker-render/mat-contract-picker-render.component';\nimport { MatServicesPickerRenderComponent } from './components/utils/mat-service-picker-render/mat-service-picker-render.component';\nimport { MatApprovedPickerRenderComponent } from './components/utils/mat-approved-picker-render/mat-approved-picker-render.component';\nimport { GetServiceModalComponent } from './botoom-sheet/get-service-modal/get-service-modal.component';\nimport {MatListModule} from '@angular/material/list';\nimport { MatModulesPickerRenderComponent } from './components/utils/mat-modules-picker-render/mat-service-modules-render.component';\nimport { WasteUploadComponent } from './botoom-sheet/waste-upload/waste-upload.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    InitialViewComponent,\n    UsersComponent,\n    MatProfilesPickerRenderComponent,\n    WastesComponent,\n    BathroomsComponent,\n    FileUploadComponent,\n    MatPermissionsPickerRenderComponent,\n    MatStatusPickerRenderComponent,\n    AddUserModalComponent,\n    AddProfilesModalComponent,\n    ServicesComponent,\n    CommercialComponent,\n    AddServiceModalComponent,\n    MatContractPickerRenderComponent,\n    MatServicesPickerRenderComponent,\n    MatApprovedPickerRenderComponent,\n    MatModulesPickerRenderComponent,\n    GetServiceModalComponent,\n    WasteUploadComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MatGridListModule,\n    MatCardModule,\n    MatDividerModule,\n    MatInputModule,\n    MatButtonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    FlexLayoutModule,\n    MatIconModule,\n    MatTooltipModule,\n    MatTabsModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatSelectModule,\n    MatMenuModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    MatBottomSheetModule,\n    HttpClientModule,\n    MatSnackBarModule,\n    MatListModule,\n    \n    AgGridModule.withComponents([])\n  ],\n  providers: [\n    {provide: ErrorStateMatcher, useClass: ShowOnDirtyErrorStateMatcher},\n    {provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true,},\n  ],\n  bootstrap: [AppComponent],\n  entryComponents: [\n    MatProfilesPickerRenderComponent,\n    FileUploadComponent,\n    MatPermissionsPickerRenderComponent,\n    MatStatusPickerRenderComponent,\n    AddUserModalComponent,\n    AddProfilesModalComponent,\n    AddServiceModalComponent,\n    MatContractPickerRenderComponent,\n    MatServicesPickerRenderComponent,\n    MatModulesPickerRenderComponent,\n    MatApprovedPickerRenderComponent,\n    WasteUploadComponent\n\n  ]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Módulos\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            Fichero\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"interceptors/AuthInterceptor.html":{"url":"interceptors/AuthInterceptor.html","title":"interceptor - AuthInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptores\n  AuthInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            Fichero\n        \n        \n            src/app/services/auth-interceptor.ts\n        \n\n            \n                Descripción\n            \n            \n                Interceptador de peticion\nEste interceptador se encarga de validar las cabeceras para que el backend mantenga las sesiones al momento de utilizar servicios\n\n            \n\n\n            \n    Índice\n    \n        \n                \n                    \n                        Propiedades\n                    \n                \n                \n                    \n                        \n                            \n                                urlsToNotUse\n                            \n                        \n                    \n                \n\n                \n                    \n                        Métodos\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                            \n                                    Private\n                                isValidRequestForInterceptor\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Definido en src/app/services/auth-interceptor.ts:16\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                    \n                \n            \n        \n\n\n            \n    \n    \n        Métodos\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(request: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Definido en src/app/services/auth-interceptor.ts:37\n                \n            \n\n\n            \n                \n                    Este metodo se utiliza para realizar la intercepccion\n\n\n                    \n                        Parámetros :\n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                    Descripción\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Objeto de tipo Request\n\n                                    \n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Objeto de tipo Next\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                        Ejemplo :\n                        \n                            intercept(request, next)\n                        \n                    \n                    \n                        Devuelve :     Observable>\n\n                    \n                    \n                        Cesion de peticion a emisor original\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            isValidRequestForInterceptor\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isValidRequestForInterceptor(requestUrl: string)\n                \n            \n\n\n            \n                \n                    Definido en src/app/services/auth-interceptor.ts:60\n                \n            \n\n\n            \n                \n                    Este metodo se utiliza para validar la peticion\n\n\n                    \n                        Parámetros :\n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                    Descripción\n                                \n                            \n                            \n                                \n                                    requestUrl\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Url a validar\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                        Ejemplo :\n                        \n                            intercept(request, next)\n                        \n                    \n                    \n                        Devuelve :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Propiedades\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            urlsToNotUse\n                            \n                        \n                    \n                \n                    \n                        \n                            Tipo :     Array\n\n                        \n                    \n                        \n                            \n                                    Definido en src/app/services/auth-interceptor.ts:16\n                            \n                        \n\n                \n                    \n                        Variable usada para excluir Urls\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Observable } from 'rxjs';\nimport { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent, HttpHeaderResponse, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n/**\n * Interceptador de peticion\n * Este interceptador se encarga de validar las cabeceras para que el backend mantenga las sesiones al momento de utilizar servicios\n */\n\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor {\n\t/**\n     * Variable usada para excluir Urls\n     * @type string\n     */\n\turlsToNotUse: Array;\n\t/**\n\t * Constructor\n\t *\n\t */\n\tconstructor() {\n\t\tthis.urlsToNotUse= [];\n\t}\n\n\n\t/**\n\t * Este metodo se utiliza para realizar la intercepccion\n\t * @example\n\t * intercept(request, next)\n\t * @param {Object} request\n\t *\tObjeto de tipo Request\n\t * @param {Object} next\n\t * Objeto de tipo Next\n\t * @returns  {Next} Cesion de peticion a emisor original\n\t */\n\n\tintercept(request: HttpRequest, next: HttpHandler): Observable> {\n\t\tif (this.isValidRequestForInterceptor(request.url)) {\n\t\t\tlet token = localStorage.getItem('token');\n\t\t\tif (token) {\n\t\t\t\tlet headers = new HttpHeaders().set('token',token);\n\t\t\t}\n\t\t\trequest = request.clone({\n\t\t\t\t\"withCredentials\": true\n\t\t\t});\n\t\t}\n\t\t\n\t\treturn next.handle(request);\n\t}\n\n\n\t/**\n\t * Este metodo se utiliza para validar la peticion\n\t * @example\n\t * intercept(request, next)\n\t * @param {Object} requestUrl\n\t * Url a validar\n\t * @returns {Bool} \n\t */\n\tprivate isValidRequestForInterceptor(requestUrl: string): boolean {\n\t\t// let positionIndicator: string = 'api/';\n\t\t// let position = requestUrl.indexOf(positionIndicator);\n\t\t// if (position > 0) {\n\t\t//   let destination: string = requestUrl.substr(position + positionIndicator.length);\n\t\t//   for (let address of this.urlsToNotUse) {\n\t\t// \tif (new RegExp(address).test(destination)) {\n\t\t// \t  return false;\n\t\t// \t}\n\t\t//   }\n\t\t// }\n\n\t\tfor (let url of this.urlsToNotUse) {\n\t\t\tif (requestUrl.includes(url)) {\n\t\t\t\tconsole.log('url sin interceptar')\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t  }\n}\n\n\n\n    \n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"classes/EmailErrorStateMatcher.html":{"url":"classes/EmailErrorStateMatcher.html","title":"class - EmailErrorStateMatcher","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Clases\n  EmailErrorStateMatcher\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            Fichero\n        \n        \n            src/app/components/login/login.component.ts\n        \n\n            \n                Descripción\n            \n            \n                Clase errores campo email\nEsta clase permite la captura de errores al ingresar los campos de email\n\n            \n\n\n            \n                Implementa\n            \n            \n                        ErrorStateMatcher\n            \n\n\n            \n    Índice\n    \n        \n\n                \n                    \n                        Métodos\n                    \n                \n                \n                    \n                        \n                            \n                                isErrorState\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Métodos\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isErrorState\n                        \n                        \n                    \n                \n            \n            \n                \nisErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null)\n                \n            \n\n\n            \n                \n                    Definido en src/app/components/login/login.component.ts:24\n                \n            \n\n\n            \n                \n                    Este metodo captura errores en el formulario\n\n\n                    \n                        Parámetros :\n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                    Descripción\n                                \n                            \n                            \n                                \n                                    control\n                                    \n                                            FormControl | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Objeto relacionado al control del formulario\n\n                                    \n                                \n                                \n                                    form\n                                    \n                                            FormGroupDirective | NgForm | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Objeto relacionado al formulario\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                        Ejemplo :\n                        \n                            isErrorState(control, form )\n                        \n                    \n                    \n                        Devuelve :         boolean\n\n                    \n                    \n                        Valor indicando si es valido o no\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport {FormControl, FormGroupDirective, NgForm, Validators} from '@angular/forms';\nimport {ErrorStateMatcher} from '@angular/material/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { LoginService } from 'src/app/services/login.service';\n\n\n/**\n * Clase errores campo email\n * Esta clase permite la captura de errores al ingresar los campos de email\n */\n\nexport class EmailErrorStateMatcher implements ErrorStateMatcher {\n  /**\n  * Este metodo captura errores en el formulario\n  * @example\n  * isErrorState(control, form )\n  * @param {FormControl | null} control\n  * Objeto relacionado al control del formulario\n  * @param {FormGroupDirective | NgForm | null} form\n  * Objeto relacionado al formulario\n  * @returns {Bool} Valor indicando si es valido o no\n  */\n  isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n    const isSubmitted = form && form.submitted;\n    return !!(control && control.invalid && (control.dirty || control.touched || isSubmitted));\n  }\n}\n\n/**\n * Clase errores campo Password\n * Esta clase permite la captura de errores al ingresar los campos de Password\n */\nexport class PasswordErrorStateMatcher implements ErrorStateMatcher {\n  /**\n  * Este metodo captura errores en el formulario\n  * @example\n  * isErrorState(control, form )\n  * @param {FormControl | null} control\n  * Objeto relacionado al control del formulario\n  * @param {FormGroupDirective | NgForm | null} form\n  * Objeto relacionado al formulario\n  * @returns {Bool} Valor indicando si es valido o no\n  */\n  isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n    const isSubmitted = form && form.submitted;\n    return !!(control && control.invalid && (control.dirty || control.touched || isSubmitted));\n  }\n}\n\n/**\n * Componente de login\n * Este componente es el encargado de mostrar y ejecutar todo lo relacionado al modulo de login\n */\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n  /**\n     * Variable para realizar emision de evento\n     * @type EventEmitter\n     */\n  @Output() loginChanged: EventEmitter = new EventEmitter()\n  /**\n     * Variable relacionada a formulario de email para control\n     * @type FormControl\n     */\n  emailFormControl = new FormControl('', [\n    Validators.required,\n    Validators.email,\n  ]);\n\n  /**\n     * Variable relacionada a formulario de password para control\n     * @type FormControl\n     */\n  passwordFormControl = new FormControl('', [\n    Validators.required\n  ]);\n\n\n  /**\n     * Variable que implementa clase capturadora de errores\n     * @type EmailErrorStateMatcher\n     */\n  emailMatcher = new EmailErrorStateMatcher();\n  /**\n     * Variable que implementa clase capturadora de errores\n     * @type PasswordErrorStateMatcher\n     */\n  passwordMatcher = new PasswordErrorStateMatcher();\n  /**\n  * Constructor\t\n  * @param {LoginService}\tloginService Servicio de servicios\n  * @param {MatSnackBar} _snackBar Referencia a popUp de alertas\n  */\n  constructor(\n    private loginService: LoginService,\n    private _snackBar: MatSnackBar\n  ) { }\n     /**\n  * Metodo inicial\n  * @example\n  * ngOnInit()\n  * @returns  {void} Sin retorno\n  */\n  ngOnInit(): void {\n  }\n  /**\n  * Este metodo se utiliza para realizar login en el sistema\n  * @example\n  * login()\n  * @returns {Void} Vacio\n  */\n  login(){\n    \n    if(this.emailFormControl.status == \"VALID\" && this.passwordFormControl.status == \"VALID\"){\n      this.loginService.loginUser(this.emailFormControl.value,this.passwordFormControl.value).subscribe( data =>{\n        \n        if(data[\"status\"]){\n          localStorage.setItem('user',JSON.stringify(data['data']));\n          this.loginChanged.emit({status:true});\n        }else{\n          this._snackBar.open(\"Creedenciales Incorrectas, Por favor corregir\", \"Ok\");\n        }\n      })\n    }\n    //\n  }\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"components/InitialViewComponent.html":{"url":"components/InitialViewComponent.html","title":"component - InitialViewComponent","body":"\n                   \n\n\n\n\n\n  Componentes\n  InitialViewComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    Fichero\n\n\n    src/app/components/initial-view/initial-view.component.ts\n\n\n    \n        Descripción\n    \n    \n        Componente initial view\nEste componente concentra los diferentes modulos y maneja sus permisos\n\n    \n\n\n    \n        Implementa\n    \n    \n                    OnInit\n    \n\n\n\n    Meta datos\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-initial-view\n            \n\n            \n                styleUrls\n                ./initial-view.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./initial-view.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Índice\n    \n        \n                \n                    \n                        Propiedades\n                    \n                \n                \n                    \n                        \n                            \n                                permissions\n                            \n                            \n                                renderUserName\n                            \n                            \n                                selectedModule\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Métodos\n                    \n                \n                \n                    \n                        \n                            \n                                changeModule\n                            \n                            \n                                checkPerm\n                            \n                            \n                                logout\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Salidas\n                    \n                \n                \n                    \n                        \n                            \n                                loginChanged\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(loginService: LoginService)\n                    \n                \n                        \n                            \n                                Definido en src/app/components/initial-view/initial-view.component.ts:39\n                            \n                        \n\n                \n                    \n                            Constructor    \n\n                            \n                                    Parámetros :\n                                    \n                                        \n                                            \n                                                Nombre\n                                                    Tipo\n                                                Opcional\n                                                    Descripción\n                                            \n                                        \n                                        \n                                                \n                                                        loginService\n                                                  \n                                                        \n                                                                        LoginService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio de servicios\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n    \n    Salidas\n        \n            \n                \n                    \n                        \n                        loginChanged\n                    \n                \n                \n                    \n                        Tipo :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Definido en src/app/components/initial-view/initial-view.component.ts:24\n                            \n                        \n                \n                    \n                        Variable que emite eventos de autenticado\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Métodos\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            changeModule\n                        \n                        \n                    \n                \n            \n            \n                \nchangeModule(selection: string)\n                \n            \n\n\n            \n                \n                    Definido en src/app/components/initial-view/initial-view.component.ts:83\n                \n            \n\n\n            \n                \n                    Este metodo permite cambiar el modulo seleccionado\n\n\n                    \n                        Parámetros :\n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                \n                            \n                            \n                                \n                                    selection\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                        Ejemplo :\n                        \n                            changeModule(selection)\n                        \n                    \n                    \n                        Devuelve :         void\n\n                    \n                    \n                        True si existe el permiso , False si no\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            checkPerm\n                        \n                        \n                    \n                \n            \n            \n                \ncheckPerm(perm)\n                \n            \n\n\n            \n                \n                    Definido en src/app/components/initial-view/initial-view.component.ts:54\n                \n            \n\n\n            \n                \n                    Este metodo valida si el usuario posee el permiso especificado\n\n\n                    \n                        Parámetros :\n                        \n                            \n                                \n                                    Nombre\n                                    Opcional\n                                    Descripción\n                                \n                            \n                            \n                                \n                                    perm\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        permiso a verificar\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                        Ejemplo :\n                        \n                            checkPerm(perm)\n                        \n                    \n                    \n                        Devuelve :         boolean\n\n                    \n                    \n                        True si existe el permiso , False si no\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            logout\n                        \n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n            \n                \n                    Definido en src/app/components/initial-view/initial-view.component.ts:93\n                \n            \n\n\n            \n                \n                    Este metodo realiza logout de la plataforma\n\n\n                    \n                        Ejemplo :\n                        \n                            logout()\n                        \n                    \n                    \n                        Devuelve :         void\n\n                    \n                    \n                        Vacio\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Definido en src/app/components/initial-view/initial-view.component.ts:69\n                \n            \n\n\n            \n                \n                    Metodo inicial\n\n\n                    \n                        Ejemplo :\n                        \n                            ngOnInit()\n                        \n                    \n                    \n                        Devuelve :         void\n\n                    \n                    \n                        Sin retorno\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Propiedades\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            permissions\n                            \n                        \n                    \n                \n                    \n                        \n                            Tipo :         any\n\n                        \n                    \n                        \n                            \n                                    Definido en src/app/components/initial-view/initial-view.component.ts:39\n                            \n                        \n\n                \n                    \n                        Variable que guarda permisos\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            renderUserName\n                            \n                        \n                    \n                \n                        \n                            \n                                    Definido en src/app/components/initial-view/initial-view.component.ts:34\n                            \n                        \n\n                \n                    \n                        Variable que guarda nombre de usuario\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedModule\n                            \n                        \n                    \n                \n                    \n                        \n                            Tipo :         string\n\n                        \n                    \n                    \n                        \n                            Valor por defecto : \"initial\"\n                        \n                    \n                        \n                            \n                                    Definido en src/app/components/initial-view/initial-view.component.ts:19\n                            \n                        \n\n                \n                    \n                        Modulo seleccionado\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Tipo :         string\n\n                        \n                    \n                        \n                            \n                                    Definido en src/app/components/initial-view/initial-view.component.ts:29\n                            \n                        \n\n                \n                    \n                        Variable que guarda usuario\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { EventEmitter, Output } from '@angular/core';\nimport { Component, OnInit } from '@angular/core';\nimport { LoginService } from 'src/app/services/login.service';\n\n/**\n * Componente initial view\n * Este componente concentra los diferentes modulos y maneja sus permisos\n */\n@Component({\n  selector: 'app-initial-view',\n  templateUrl: './initial-view.component.html',\n  styleUrls: ['./initial-view.component.scss']\n})\nexport class InitialViewComponent implements OnInit {\n  /**\n     * Modulo seleccionado\n     * @type String\n     */\n  selectedModule = \"initial\"\n  /**\n     * Variable que emite eventos de autenticado\n     * @type EventEmitter\n     */\n  @Output() loginChanged: EventEmitter = new EventEmitter()\n  /**\n     * Variable que guarda usuario\n     * @type String\n     */\n  user: string;\n  /**\n     * Variable que guarda nombre de usuario\n     * @type string\n     */\n  renderUserName;\n  /**\n     * Variable que guarda permisos\n     * @type any\n     */\n  permissions: any;\n\n  /**\n  * Constructor\t\n  * @param {LoginService}\tloginService Servicio de servicios\n  */\n  constructor(private loginService:LoginService) { }\n  /**\n  * Este metodo valida si el usuario posee el permiso especificado\n  * @example\n  * checkPerm(perm)\n  * @param {string} perm\n  * permiso a verificar\n  * @returns {Bool} True si existe el permiso , False si no\n  */\n  checkPerm(perm){\n    \n    if(this.permissions.includes(perm)){\n      return true\n    }else{\n      return false\n    }\n  }\n  /**\n  * Metodo inicial\n  * @example\n  * ngOnInit()\n  * @returns  {void} Sin retorno\n  */\n\n  ngOnInit(): void {\n    this.user = JSON.parse(localStorage.getItem('user'))\n    this.permissions = this.user[\"permissions\"]\n    this.renderUserName = this.user[\"user\"].user_username;\n    \n  }\n    /**\n  * Este metodo permite cambiar el modulo seleccionado\n  * @example\n  * changeModule(selection)\n  * @param {String} Selection\n  * permiso a verificar\n  * @returns {Bool} True si existe el permiso , False si no\n  */\n  changeModule(selection:string){\n    this.selectedModule=selection\n  }\n  /**\n  * Este metodo realiza logout de la plataforma\n  * @example\n  * logout()\n\n  * @returns {Void} Vacio\n  */\n  logout(){\n    \n    this.loginService.logOut().subscribe(data =>{\n      this.loginChanged.emit({status:false});\n    })\n    \n  }\n\n}\n\n    \n\n    \n        \n    \n        \n        \n            \n                \n            \n        \n        \n            \n        \n        \n            \n        \n        \n         \n\n        \n            Inicio\n            \n            \n        \n        \n        \n            Residuos\n            \n            \n         \n\n        \n            Baños\n            \n            \n         \n\n        \n            Comercial\n            \n            \n        \n\n        \n            Servicios\n            \n            \n        \n\n        \n            Usuarios\n            \n            \n         \n        \n    \n    \n        \n            \n                logout\n                \n                {{renderUserName}}\n            \n            \n            \n        \n\n        \n\n             \n            \n            \n            \n            \n                        \n        \n    \n\n\n    \n\n    \n                \n                    ./initial-view.component.scss\n                \n                .panel{\n    height: 100vh;\n    background: #03506F;\n    border-top-right-radius: 15px;\n    border-bottom-right-radius: 15px;\n    color:white;\n    \n}\n.divisor{\n    background-color: #0A043C;\n    width: 90%;\n    height: 3px;\n    padding:0;\n}\n\n.divisor-white{\n    background-color: white;\n    width: 90%;\n    height: 3px;\n    padding:0;\n}\n\n\n.module-disp{\n    display: block !important;\n}\n.module-header{\n    display: block !important;\n}\n.module-disp:hover{\n    background:#ff6c556e;\n}\n.divisor-selected{\n    background-color: #FF6D55;\n    width: 70%;\n    height: 3px;\n    padding:0;\n    margin-top: 5%;\n}\n.divisor-header{\n    background-color: #0A043C;\n    width: 90%;\n    height: 3px;\n    padding:0;\n    margin-left: 3.4vw;\n}\n.header{\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    float: right;\n    height:100%;\n    width:30%;\n}\n    \n\n    \n        \n        \n            \n                Leyenda\n            \n            \n                Elemento Html\n            \n            \n                Componente\n            \n            \n                Elemento Html con directiva\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                                                                 Inicio                                                            Residuos                                                     Baños                                                     Comercial                                                    Servicios                                                    Usuarios                                                                                     logout                                {{renderUserName}}                                                                                                                                                     '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BathroomsComponent', 'selector': 'app-bathrooms'},{'name': 'CommercialComponent', 'selector': 'app-commercial'},{'name': 'InitialViewComponent', 'selector': 'app-initial-view'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MatApprovedPickerRenderComponent', 'selector': 'input-cell'},{'name': 'MatContractPickerRenderComponent', 'selector': 'input-cell'},{'name': 'MatModulesPickerRenderComponent', 'selector': 'input-cell'},{'name': 'MatPermissionsPickerRenderComponent', 'selector': 'input-cell'},{'name': 'MatProfilesPickerRenderComponent', 'selector': 'input-cell'},{'name': 'MatServicesPickerRenderComponent', 'selector': 'input-cell'},{'name': 'MatStatusPickerRenderComponent', 'selector': 'input-cell'},{'name': 'ServicesComponent', 'selector': 'app-services'},{'name': 'UsersComponent', 'selector': 'app-users'},{'name': 'WastesComponent', 'selector': 'app-wastes'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'InitialViewComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Componentes\n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    Fichero\n\n\n    src/app/components/login/login.component.ts\n\n\n    \n        Descripción\n    \n    \n        Componente de login\nEste componente es el encargado de mostrar y ejecutar todo lo relacionado al modulo de login\n\n    \n\n\n    \n        Implementa\n    \n    \n                    OnInit\n    \n\n\n\n    Meta datos\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n            \n                styleUrls\n                ./login.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Índice\n    \n        \n                \n                    \n                        Propiedades\n                    \n                \n                \n                    \n                        \n                            \n                                emailFormControl\n                            \n                            \n                                emailMatcher\n                            \n                            \n                                passwordFormControl\n                            \n                            \n                                passwordMatcher\n                            \n                        \n                    \n                \n\n                \n                    \n                        Métodos\n                    \n                \n                \n                    \n                        \n                            \n                                login\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Salidas\n                    \n                \n                \n                    \n                        \n                            \n                                loginChanged\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(loginService: LoginService, _snackBar: MatSnackBar)\n                    \n                \n                        \n                            \n                                Definido en src/app/components/login/login.component.ts:93\n                            \n                        \n\n                \n                    \n                            Constructor    \n\n                            \n                                    Parámetros :\n                                    \n                                        \n                                            \n                                                Nombre\n                                                    Tipo\n                                                Opcional\n                                                    Descripción\n                                            \n                                        \n                                        \n                                                \n                                                        loginService\n                                                  \n                                                        \n                                                                        LoginService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio de servicios\n\n                                                        \n                                                \n                                                \n                                                        _snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Referencia a popUp de alertas\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n    \n    Salidas\n        \n            \n                \n                    \n                        \n                        loginChanged\n                    \n                \n                \n                    \n                        Tipo :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Definido en src/app/components/login/login.component.ts:65\n                            \n                        \n                \n                    \n                        Variable para realizar emision de evento\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Métodos\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            login\n                        \n                        \n                    \n                \n            \n            \n                \nlogin()\n                \n            \n\n\n            \n                \n                    Definido en src/app/components/login/login.component.ts:117\n                \n            \n\n\n            \n                \n                    Este metodo se utiliza para realizar login en el sistema\n\n\n                    \n                        Ejemplo :\n                        \n                            login()\n                        \n                    \n                    \n                        Devuelve :         void\n\n                    \n                    \n                        Vacio\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Definido en src/app/components/login/login.component.ts:109\n                \n            \n\n\n            \n                \n                    Metodo inicial\n\n\n                    \n                        Ejemplo :\n                        \n                            ngOnInit()\n                        \n                    \n                    \n                        Devuelve :         void\n\n                    \n                    \n                        Sin retorno\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Propiedades\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            emailFormControl\n                            \n                        \n                    \n                \n                    \n                        \n                            Valor por defecto : new FormControl('', [\n    Validators.required,\n    Validators.email,\n  ])\n                        \n                    \n                        \n                            \n                                    Definido en src/app/components/login/login.component.ts:70\n                            \n                        \n\n                \n                    \n                        Variable relacionada a formulario de email para control\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            emailMatcher\n                            \n                        \n                    \n                \n                    \n                        \n                            Valor por defecto : new EmailErrorStateMatcher()\n                        \n                    \n                        \n                            \n                                    Definido en src/app/components/login/login.component.ts:88\n                            \n                        \n\n                \n                    \n                        Variable que implementa clase capturadora de errores\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            passwordFormControl\n                            \n                        \n                    \n                \n                    \n                        \n                            Valor por defecto : new FormControl('', [\n    Validators.required\n  ])\n                        \n                    \n                        \n                            \n                                    Definido en src/app/components/login/login.component.ts:79\n                            \n                        \n\n                \n                    \n                        Variable relacionada a formulario de password para control\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            passwordMatcher\n                            \n                        \n                    \n                \n                    \n                        \n                            Valor por defecto : new PasswordErrorStateMatcher()\n                        \n                    \n                        \n                            \n                                    Definido en src/app/components/login/login.component.ts:93\n                            \n                        \n\n                \n                    \n                        Variable que implementa clase capturadora de errores\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport {FormControl, FormGroupDirective, NgForm, Validators} from '@angular/forms';\nimport {ErrorStateMatcher} from '@angular/material/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { LoginService } from 'src/app/services/login.service';\n\n\n/**\n * Clase errores campo email\n * Esta clase permite la captura de errores al ingresar los campos de email\n */\n\nexport class EmailErrorStateMatcher implements ErrorStateMatcher {\n  /**\n  * Este metodo captura errores en el formulario\n  * @example\n  * isErrorState(control, form )\n  * @param {FormControl | null} control\n  * Objeto relacionado al control del formulario\n  * @param {FormGroupDirective | NgForm | null} form\n  * Objeto relacionado al formulario\n  * @returns {Bool} Valor indicando si es valido o no\n  */\n  isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n    const isSubmitted = form && form.submitted;\n    return !!(control && control.invalid && (control.dirty || control.touched || isSubmitted));\n  }\n}\n\n/**\n * Clase errores campo Password\n * Esta clase permite la captura de errores al ingresar los campos de Password\n */\nexport class PasswordErrorStateMatcher implements ErrorStateMatcher {\n  /**\n  * Este metodo captura errores en el formulario\n  * @example\n  * isErrorState(control, form )\n  * @param {FormControl | null} control\n  * Objeto relacionado al control del formulario\n  * @param {FormGroupDirective | NgForm | null} form\n  * Objeto relacionado al formulario\n  * @returns {Bool} Valor indicando si es valido o no\n  */\n  isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n    const isSubmitted = form && form.submitted;\n    return !!(control && control.invalid && (control.dirty || control.touched || isSubmitted));\n  }\n}\n\n/**\n * Componente de login\n * Este componente es el encargado de mostrar y ejecutar todo lo relacionado al modulo de login\n */\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n  /**\n     * Variable para realizar emision de evento\n     * @type EventEmitter\n     */\n  @Output() loginChanged: EventEmitter = new EventEmitter()\n  /**\n     * Variable relacionada a formulario de email para control\n     * @type FormControl\n     */\n  emailFormControl = new FormControl('', [\n    Validators.required,\n    Validators.email,\n  ]);\n\n  /**\n     * Variable relacionada a formulario de password para control\n     * @type FormControl\n     */\n  passwordFormControl = new FormControl('', [\n    Validators.required\n  ]);\n\n\n  /**\n     * Variable que implementa clase capturadora de errores\n     * @type EmailErrorStateMatcher\n     */\n  emailMatcher = new EmailErrorStateMatcher();\n  /**\n     * Variable que implementa clase capturadora de errores\n     * @type PasswordErrorStateMatcher\n     */\n  passwordMatcher = new PasswordErrorStateMatcher();\n  /**\n  * Constructor\t\n  * @param {LoginService}\tloginService Servicio de servicios\n  * @param {MatSnackBar} _snackBar Referencia a popUp de alertas\n  */\n  constructor(\n    private loginService: LoginService,\n    private _snackBar: MatSnackBar\n  ) { }\n     /**\n  * Metodo inicial\n  * @example\n  * ngOnInit()\n  * @returns  {void} Sin retorno\n  */\n  ngOnInit(): void {\n  }\n  /**\n  * Este metodo se utiliza para realizar login en el sistema\n  * @example\n  * login()\n  * @returns {Void} Vacio\n  */\n  login(){\n    \n    if(this.emailFormControl.status == \"VALID\" && this.passwordFormControl.status == \"VALID\"){\n      this.loginService.loginUser(this.emailFormControl.value,this.passwordFormControl.value).subscribe( data =>{\n        \n        if(data[\"status\"]){\n          localStorage.setItem('user',JSON.stringify(data['data']));\n          this.loginChanged.emit({status:true});\n        }else{\n          this._snackBar.open(\"Creedenciales Incorrectas, Por favor corregir\", \"Ok\");\n        }\n      })\n    }\n    //\n  }\n\n}\n\n    \n\n    \n        \n\n    \n    \n        \n            \n                \n                    \n                \n            \n         \n        \n            \n                \n                    \n                        \n                            Inicio de sesion\n                            \n                        \n                        \n                            \n                                \n                                    Email\n                                    \n                                    \n                                    \n                                        Email es requerido\n                                    \n                                \n                                \n                                \n                                \n                                    Contraseña\n                                    \n                                    \n                                    \n                                        La contraseña es requireda\n                                    \n                                \n                                \n                                    \n                                    Iniciar Sesion\n                                   \n                            \n                        \n                        \n                    \n                \n            \n        \n        \n\n\n\n    \n\n    \n                \n                    ./login.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Leyenda\n            \n            \n                Elemento Html\n            \n            \n                Componente\n            \n            \n                Elemento Html con directiva\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                                                                                                                 Inicio de sesion                                                                                                                                                                            Email                                                                                                                                                    Email es requerido                                                                                                                                                                                                        Contraseña                                                                                                                                                    La contraseña es requireda                                                                                                                                                                            Iniciar Sesion                                                                                                                                                                               '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BathroomsComponent', 'selector': 'app-bathrooms'},{'name': 'CommercialComponent', 'selector': 'app-commercial'},{'name': 'InitialViewComponent', 'selector': 'app-initial-view'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MatApprovedPickerRenderComponent', 'selector': 'input-cell'},{'name': 'MatContractPickerRenderComponent', 'selector': 'input-cell'},{'name': 'MatModulesPickerRenderComponent', 'selector': 'input-cell'},{'name': 'MatPermissionsPickerRenderComponent', 'selector': 'input-cell'},{'name': 'MatProfilesPickerRenderComponent', 'selector': 'input-cell'},{'name': 'MatServicesPickerRenderComponent', 'selector': 'input-cell'},{'name': 'MatStatusPickerRenderComponent', 'selector': 'input-cell'},{'name': 'ServicesComponent', 'selector': 'app-services'},{'name': 'UsersComponent', 'selector': 'app-users'},{'name': 'WastesComponent', 'selector': 'app-wastes'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"injectables/LoginService.html":{"url":"injectables/LoginService.html","title":"injectable - LoginService","body":"\n                   \n\n\n\n\n\n\n\n\n  Inyectables\n  LoginService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            Fichero\n        \n        \n            src/app/services/login.service.ts\n        \n\n            \n                Descripción\n            \n            \n                Servicio de login\nEste servicio se encarga de realizar las peticiones necesarias al backend para obtener todo lo relacionado al login\n\n            \n\n\n\n            \n    Índice\n    \n        \n                \n                    \n                        Propiedades\n                    \n                \n                \n                    \n                        \n                            \n                                baseUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Métodos\n                    \n                \n                \n                    \n                        \n                            \n                                loginUser\n                            \n                            \n                                logOut\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Definido en src/app/services/login.service.ts:22\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parámetros :\n                                    \n                                        \n                                            \n                                                Nombre\n                                                    Tipo\n                                                Opcional\n                                                    Descripción\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                cliente http para realizar llamadas\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Métodos\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loginUser\n                        \n                        \n                    \n                \n            \n            \n                \nloginUser(user, password)\n                \n            \n\n\n            \n                \n                    Definido en src/app/services/login.service.ts:44\n                \n            \n\n\n            \n                \n                    Este metodo se utiliza para realizar login en la plataforma\n\n\n                    \n                        Parámetros :\n                        \n                            \n                                \n                                    Nombre\n                                    Opcional\n                                    Descripción\n                                \n                            \n                            \n                                \n                                    user\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Usuario a authenticar\n\n                                    \n                                \n                                \n                                    password\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Contraseña de usuarios\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                        Ejemplo :\n                        \n                            loginUser(user,password)\n                        \n                    \n                    \n                        Devuelve :     Observable\n\n                    \n                    \n                        Objeto Json con estado\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            logOut\n                        \n                        \n                    \n                \n            \n            \n                \nlogOut()\n                \n            \n\n\n            \n                \n                    Definido en src/app/services/login.service.ts:55\n                \n            \n\n\n            \n                \n                    Este metodo se utiliza para realizar logout en la plataforma\n\n\n                    \n                        Ejemplo :\n                        \n                            logOut()\n                        \n                    \n                    \n                        Devuelve :     Observable\n\n                    \n                    \n                        Objeto Json con estado\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Propiedades\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            baseUrl\n                            \n                        \n                    \n                \n                        \n                            \n                                    Definido en src/app/services/login.service.ts:22\n                            \n                        \n\n                \n                    \n                        Variable usada para la obtencion de punto de acceso desde variables de entorno\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { from, Observable } from \"rxjs\";\n\n\n\n/**\n * Servicio de login\n * Este servicio se encarga de realizar las peticiones necesarias al backend para obtener todo lo relacionado al login\n */\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginService {\n  /**\n     * Variable usada para la obtencion de punto de acceso desde variables de entorno\n     * @type string\n     */\n  baseUrl;\n  /**\n  * Constructor\n  *\n  * @param {HttpClient} http cliente http para realizar llamadas\n  */\n  constructor(private http:HttpClient) {\n\n    this.baseUrl = environment.baseUrl\n  }\n\n  /**\n  * Este metodo se utiliza para realizar login en la plataforma\n  * @example\n  * loginUser(user,password)\n  * @param {String} user\n  * Usuario a authenticar\n  * @param {String} password\n  * Contraseña de usuarios\n  * @returns  {Promise} Objeto Json con estado\n  */\n\n  loginUser(user,password): Observable \n\t{\n\t\treturn this.http.post(this.baseUrl+'login',{user:user,password:password}, { withCredentials: true });\n\t}\n\n  /**\n  * Este metodo se utiliza para realizar logout en la plataforma\n  * @example\n  * logOut()\n  * @returns  {Promise} Objeto Json con estado\n  */\n  logOut(): Observable \n\t{\n\t\treturn this.http.get(this.baseUrl+'logout',{ withCredentials: true });\n\t}\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"components/MatApprovedPickerRenderComponent.html":{"url":"components/MatApprovedPickerRenderComponent.html","title":"component - MatApprovedPickerRenderComponent","body":"\n                   \n\n\n\n\n\n  Componentes\n  MatApprovedPickerRenderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    Fichero\n\n\n    src/app/components/utils/mat-approved-picker-render/mat-approved-picker-render.component.ts\n\n\n    \n        Descripción\n    \n    \n        Util de estado\nEste componente es un picker renderizado para asignar estado\n\n    \n\n\n    \n        Implementa\n    \n    \n                ICellEditorAngularComp\n    \n\n\n\n    Meta datos\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                input-cell\n            \n\n\n            \n                styles\n                \n      .container {\n        width: 350px;\n        height: 250px;\n      }\n    \n            \n\n            \n                template\n                \n  \n  Perfiles\n  \n    {{status}}\n  \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Índice\n    \n        \n                \n                    \n                        Propiedades\n                    \n                \n                \n                    \n                        \n                            \n                                dias\n                            \n                            \n                                    Private\n                                focusedInput\n                            \n                            \n                                    Public\n                                input\n                            \n                            \n                                    Public\n                                inputs\n                            \n                            \n                                permissions\n                            \n                            \n                                services\n                            \n                            \n                                statuses\n                            \n                        \n                    \n                \n\n                \n                    \n                        Métodos\n                    \n                \n                \n                    \n                        \n                            \n                                agInit\n                            \n                            \n                                    Private\n                                focusOnInputNextTick\n                            \n                            \n                                getValue\n                            \n                            \n                                isPopup\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                onKeyDown\n                            \n                            \n                                    Private\n                                preventDefaultAndPropagation\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Métodos\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            agInit\n                        \n                        \n                    \n                \n            \n            \n                \nagInit(params: any)\n                \n            \n\n\n            \n                \n                    Definido en src/app/components/utils/mat-approved-picker-render/mat-approved-picker-render.component.ts:87\n                \n            \n\n\n            \n                \n                    Este metodo se usa cuando se inicia el componente\n\n\n                    \n                        Parámetros :\n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                    Descripción\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Objeto de tipo params obtenido desde componente padre\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                        Ejemplo :\n                        \n                            agInit(params: any)\n                        \n                    \n                    \n                        Devuelve :         void\n\n                    \n                    \n                        Vacio\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            focusOnInputNextTick\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    focusOnInputNextTick(input: ViewContainerRef)\n                \n            \n\n\n            \n                \n                    Definido en src/app/components/utils/mat-approved-picker-render/mat-approved-picker-render.component.ts:113\n                \n            \n\n\n            \n                \n                    Este metodo se usa para obtener los focus sobre el modal\n\n\n                    \n                        Parámetros :\n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                    Descripción\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                                ViewContainerRef\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Objeto de tipo ViewContainerRef\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                        Ejemplo :\n                        \n                            focusOnInputNextTick(input)\n                        \n                    \n                    \n                        Devuelve :         void\n\n                    \n                    \n                        Vacio\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getValue\n                        \n                        \n                    \n                \n            \n            \n                \ngetValue()\n                \n            \n\n\n            \n                \n                    Definido en src/app/components/utils/mat-approved-picker-render/mat-approved-picker-render.component.ts:124\n                \n            \n\n\n            \n                \n                    Este metodo se usa para obtener el valor final\n\n\n                    \n                        Ejemplo :\n                        \n                            getValue()\n                        \n                    \n                    \n                        Devuelve :         any\n\n                    \n                    \n                        Valor seleccionado\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isPopup\n                        \n                        \n                    \n                \n            \n            \n                \nisPopup()\n                \n            \n\n\n            \n                \n                    Definido en src/app/components/utils/mat-approved-picker-render/mat-approved-picker-render.component.ts:137\n                \n            \n\n\n            \n                \n                    Este metodo se usa para verificar popUp\n\n\n                    \n                        Ejemplo :\n                        \n                            isPopup()\n                        \n                    \n                    \n                        Devuelve :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Definido en src/app/components/utils/mat-approved-picker-render/mat-approved-picker-render.component.ts:102\n                \n            \n\n\n            \n                \n                    Este metodo se usa cuando se inicia el componente\n\n\n                    \n                        Ejemplo :\n                        \n                            ngAfterViewInit(params: any)\n                        \n                    \n                    \n                        Devuelve :         void\n\n                    \n                    \n                        Vacio\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onKeyDown\n                        \n                        \n                    \n                \n            \n            \n                \nonKeyDown(event)\n                \n            \n\n\n            \n                \n                    Definido en src/app/components/utils/mat-approved-picker-render/mat-approved-picker-render.component.ts:149\n                \n            \n\n\n            \n                \n                    Este metodo se usa para verificar si se ha presionado una tecla\n\n\n                    \n                        Parámetros :\n                        \n                            \n                                \n                                    Nombre\n                                    Opcional\n                                    Descripción\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Objeto de tipo evento\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                        Ejemplo :\n                        \n                            onKeyDown(event)\n                        \n                    \n                    \n                        Devuelve :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            preventDefaultAndPropagation\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    preventDefaultAndPropagation(event)\n                \n            \n\n\n            \n                \n                    Definido en src/app/components/utils/mat-approved-picker-render/mat-approved-picker-render.component.ts:187\n                \n            \n\n\n            \n                \n                    Este metodo se usa para evitar propagacion completa y cerradco de modal involuntario\n\n\n                    \n                        Parámetros :\n                        \n                            \n                                \n                                    Nombre\n                                    Opcional\n                                    Descripción\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Objeto de tipo evento\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                        Ejemplo :\n                        \n                            preventDefaultAndPropagation(event)\n                        \n                    \n                    \n                        Devuelve :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Propiedades\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dias\n                            \n                        \n                    \n                \n                        \n                            \n                                    Definido en src/app/components/utils/mat-approved-picker-render/mat-approved-picker-render.component.ts:53\n                            \n                        \n\n                \n                    \n                        Variable para guardar seleccion\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            focusedInput\n                            \n                        \n                    \n                \n                    \n                        \n                            Tipo :         number\n\n                        \n                    \n                    \n                        \n                            Valor por defecto : 0\n                        \n                    \n                        \n                            \n                                    Definido en src/app/components/utils/mat-approved-picker-render/mat-approved-picker-render.component.ts:68\n                            \n                        \n\n                \n                    \n                        Variable para detectar si existe focus sobre el componente\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            input\n                            \n                        \n                    \n                \n                    \n                        \n                            Tipo :         ViewContainerRef\n\n                        \n                    \n                    \n                        \n                            Decoradores : \n                            \n                            \n                                @ViewChildren('input', {read: ViewContainerRef})\n                            \n                        \n                    \n                        \n                            \n                                    Definido en src/app/components/utils/mat-approved-picker-render/mat-approved-picker-render.component.ts:58\n                            \n                        \n\n                \n                    \n                        Variable para obtener la referencia de datos suministrados desde componente padre\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            inputs\n                            \n                        \n                    \n                \n                    \n                        \n                            Tipo :     QueryList\n\n                        \n                    \n                        \n                            \n                                    Definido en src/app/components/utils/mat-approved-picker-render/mat-approved-picker-render.component.ts:63\n                            \n                        \n\n                \n                    \n                        Variable para guardar entradas procesadas desde componente padre\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            permissions\n                            \n                        \n                    \n                \n                    \n                        \n                            Tipo :     []\n\n                        \n                    \n                    \n                        \n                            Valor por defecto : []\n                        \n                    \n                        \n                            \n                                    Definido en src/app/components/utils/mat-approved-picker-render/mat-approved-picker-render.component.ts:73\n                            \n                        \n\n                \n                    \n                        Variable para guardar permisos\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            services\n                            \n                        \n                    \n                \n                    \n                        \n                            Tipo :         any\n\n                        \n                    \n                        \n                            \n                                    Definido en src/app/components/utils/mat-approved-picker-render/mat-approved-picker-render.component.ts:78\n                            \n                        \n\n                \n                    \n                        Variable para guardar servicios\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            statuses\n                            \n                        \n                    \n                \n                    \n                        \n                            Tipo :     []\n\n                        \n                    \n                    \n                        \n                            Valor por defecto : [\"APROBADO\",\"SIN APROBAR\"]\n                        \n                    \n                        \n                            \n                                    Definido en src/app/components/utils/mat-approved-picker-render/mat-approved-picker-render.component.ts:47\n                            \n                        \n\n                \n                    \n                        Variable para guardar estados\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import {\n  Component,\n  QueryList,\n  ViewChildren,\n  ViewContainerRef\n} from \"@angular/core\";\nimport { ICellEditorAngularComp } from \"ag-grid-angular\";\nimport * as moment from \"moment\";\n\n/**\n * Util de estado\n * Este componente es un picker renderizado para asignar estado\n */\n\n@Component({\n  selector: \"input-cell\",\n  template: `\n    \n      \n      Perfiles\n      \n        {{status}}\n      \n    \n  `,\n  styles: [\n    `\n      .container {\n        width: 350px;\n        height: 250px;\n      }\n    `\n  ]\n})\n\n\n\n\nexport class MatApprovedPickerRenderComponent implements ICellEditorAngularComp {\n  //private params: any;\n   \n  /**\n     * Variable para guardar estados\n     * @type Array\n     */\n    statuses = [\"APROBADO\",\"SIN APROBAR\"]\n    //private inputDate: any;\n    /**\n     * Variable para guardar seleccion\n     * @type Array\n     */\n    dias;\n    /**\n     * Variable para obtener la referencia de datos suministrados desde componente padre\n     * @type ViewContainerRef\n     */\n    @ViewChildren(\"input\", { read: ViewContainerRef })  public input: ViewContainerRef;\n    /**\n     * Variable para guardar entradas procesadas desde componente padre\n     * @type QueryList\n     */\n    public inputs: QueryList;\n    /**\n     * Variable para detectar si existe focus sobre el componente\n     * @type number\n     */\n    private focusedInput: number = 0;\n    /**\n     * Variable para guardar permisos\n     * @type Array\n     */\n    permissions=[];\n    /**\n     * Variable para guardar servicios\n     * @type Array\n     */\n  services: any;\n    /**\n    * Este metodo se usa cuando se inicia el componente\n    * @example\n    * agInit(params: any)\n    * @param {Object} params\n    * Objeto de tipo params obtenido desde componente padre\n    * @returns  {Void} Vacio\n    */\n    agInit(params: any): void {\n      \n      \n      \n      \n    }\n    /**\n    * Este metodo se usa cuando se inicia el componente\n    * @example\n    * ngAfterViewInit(params: any)\n    * @param {Object} params\n    * Objeto de tipo params obtenido desde componente padre\n    * @returns  {Void} Vacio\n    */\n    // dont use afterGuiAttached for post gui events - hook into ngAfterViewInit instead for this\n    ngAfterViewInit() {\n      //this.focusOnInputNextTick(this.inputs.first);\n    }\n    /**\n    * Este metodo se usa para obtener los focus sobre el modal\n    * @example\n    * focusOnInputNextTick(input)\n    * @param {ViewContainerRef} input\n    * Objeto de tipo ViewContainerRef\n    * @returns  {Void} Vacio\n    */\n    private focusOnInputNextTick(input: ViewContainerRef) {\n      window.setTimeout(() => {\n        input.element.nativeElement.focus();\n      }, 0);\n    }\n    /**\n    * Este metodo se usa para obtener el valor final\n    * @example\n    * getValue()\n    * @returns  {String} Valor seleccionado\n    */\n    getValue() {\n      \n      console.log(this.dias)\n      return this.dias;\n     \n      \n    }\n    /**\n    * Este metodo se usa para verificar popUp\n    * @example\n    * isPopup()\n    * @returns  {Bool} \n    */\n    isPopup(): boolean {\n      return true;\n    }\n    /**\n    * Este metodo se usa para verificar si se ha presionado una tecla\n    * @example\n    * onKeyDown(event)\n    * @param {ViewContainerRef} event\n    * Objeto de tipo evento\n    * @returns  {Bool} \n    */\n\n    onKeyDown(event): void {\n      let key = event.which || event.keyCode;\n      if (key == 9) {\n        // tab\n        this.preventDefaultAndPropagation(event);\n  \n        // either move one input along, or cycle back to 0\n        this.focusedInput =\n          this.focusedInput === this.inputs.length - 1\n            ? 0\n            : this.focusedInput + 1;\n  \n        let focusedInput = this.focusedInput;\n        let inputToFocusOn = this.inputs.find((item: any, index: number) => {\n          return index === focusedInput;\n        });\n  \n        this.focusOnInputNextTick(inputToFocusOn);\n      } else if (key == 13) {\n        // enter\n        // perform some validation on enter - in this example we assume all inputs are mandatory\n        // in a proper application you'd probably want to inform the user that an input is blank\n        this.inputs.forEach(input => {\n          if (!input.element.nativeElement.value) {\n            this.preventDefaultAndPropagation(event);\n            this.focusOnInputNextTick(input);\n          }\n        });\n      }\n    }\n    /**\n    * Este metodo se usa para evitar propagacion completa y cerradco de modal involuntario\n    * @example\n    * preventDefaultAndPropagation(event)\n    * @param {ViewContainerRef} event\n    * Objeto de tipo evento\n    * @returns  {Bool} \n    */\n    private preventDefaultAndPropagation(event) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n}\n\n\n    \n\n\n    \n            \n      .container {\n        width: 350px;\n        height: 250px;\n      }\n    \n\n    \n\n    \n        \n        \n            \n                Leyenda\n            \n            \n                Elemento Html\n            \n            \n                Componente\n            \n            \n                Elemento Html con directiva\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Perfiles      {{status}}  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BathroomsComponent', 'selector': 'app-bathrooms'},{'name': 'CommercialComponent', 'selector': 'app-commercial'},{'name': 'InitialViewComponent', 'selector': 'app-initial-view'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MatApprovedPickerRenderComponent', 'selector': 'input-cell'},{'name': 'MatContractPickerRenderComponent', 'selector': 'input-cell'},{'name': 'MatModulesPickerRenderComponent', 'selector': 'input-cell'},{'name': 'MatPermissionsPickerRenderComponent', 'selector': 'input-cell'},{'name': 'MatProfilesPickerRenderComponent', 'selector': 'input-cell'},{'name': 'MatServicesPickerRenderComponent', 'selector': 'input-cell'},{'name': 'MatStatusPickerRenderComponent', 'selector': 'input-cell'},{'name': 'ServicesComponent', 'selector': 'app-services'},{'name': 'UsersComponent', 'selector': 'app-users'},{'name': 'WastesComponent', 'selector': 'app-wastes'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MatApprovedPickerRenderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"components/MatContractPickerRenderComponent.html":{"url":"components/MatContractPickerRenderComponent.html","title":"component - MatContractPickerRenderComponent","body":"\n                   \n\n\n\n\n\n  Componentes\n  MatContractPickerRenderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    Fichero\n\n\n    src/app/components/utils/mat-contract-picker-render/mat-contract-picker-render.component.ts\n\n\n    \n        Descripción\n    \n    \n        Util de contratos\nEste componente es un picker renderizado para asignar contratos\n\n    \n\n\n    \n        Implementa\n    \n    \n                ICellEditorAngularComp\n    \n\n\n\n    Meta datos\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                input-cell\n            \n\n\n            \n                styles\n                \n      .container {\n        width: 350px;\n        height: 250px;\n      }\n    \n            \n\n            \n                template\n                \n  \n  Perfiles\n  \n    {{contract.contName}}\n  \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Índice\n    \n        \n                \n                    \n                        Propiedades\n                    \n                \n                \n                    \n                        \n                            \n                                contract\n                            \n                            \n                                contracts\n                            \n                            \n                                dias\n                            \n                            \n                                    Private\n                                focusedInput\n                            \n                            \n                                    Public\n                                input\n                            \n                            \n                                    Public\n                                inputs\n                            \n                            \n                                    Private\n                                params\n                            \n                            \n                                permissions\n                            \n                            \n                                statuses\n                            \n                        \n                    \n                \n\n                \n                    \n                        Métodos\n                    \n                \n                \n                    \n                        \n                            \n                                agInit\n                            \n                            \n                                    Private\n                                focusOnInputNextTick\n                            \n                            \n                                getValue\n                            \n                            \n                                isPopup\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                onKeyDown\n                            \n                            \n                                    Private\n                                preventDefaultAndPropagation\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Métodos\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            agInit\n                        \n                        \n                    \n                \n            \n            \n                \nagInit(params: any)\n                \n            \n\n\n            \n                \n                    Definido en src/app/components/utils/mat-contract-picker-render/mat-contract-picker-render.component.ts:94\n                \n            \n\n\n            \n                \n                    Este metodo se usa cuando se inicia el componente\n\n\n                    \n                        Parámetros :\n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                    Descripción\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Objeto de tipo params obtenido desde componente padre\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                        Ejemplo :\n                        \n                            agInit(params: any)\n                        \n                    \n                    \n                        Devuelve :         void\n\n                    \n                    \n                        Vacio\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            focusOnInputNextTick\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    focusOnInputNextTick(input: ViewContainerRef)\n                \n            \n\n\n            \n                \n                    Definido en src/app/components/utils/mat-contract-picker-render/mat-contract-picker-render.component.ts:122\n                \n            \n\n\n            \n                \n                    Este metodo se usa para obtener los focus sobre el modal\n\n\n                    \n                        Parámetros :\n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                    Descripción\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                                ViewContainerRef\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Objeto de tipo ViewContainerRef\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                        Ejemplo :\n                        \n                            focusOnInputNextTick(input)\n                        \n                    \n                    \n                        Devuelve :         void\n\n                    \n                    \n                        Vacio\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getValue\n                        \n                        \n                    \n                \n            \n            \n                \ngetValue()\n                \n            \n\n\n            \n                \n                    Definido en src/app/components/utils/mat-contract-picker-render/mat-contract-picker-render.component.ts:133\n                \n            \n\n\n            \n                \n                    Este metodo se usa para obtener el valor final\n\n\n                    \n                        Ejemplo :\n                        \n                            getValue()\n                        \n                    \n                    \n                        Devuelve :         any\n\n                    \n                    \n                        Valor seleccionado\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isPopup\n                        \n                        \n                    \n                \n            \n            \n                \nisPopup()\n                \n            \n\n\n            \n                \n                    Definido en src/app/components/utils/mat-contract-picker-render/mat-contract-picker-render.component.ts:146\n                \n            \n\n\n            \n                \n                    Este metodo se usa para verificar popUp\n\n\n                    \n                        Ejemplo :\n                        \n                            isPopup()\n                        \n                    \n                    \n                        Devuelve :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Definido en src/app/components/utils/mat-contract-picker-render/mat-contract-picker-render.component.ts:111\n                \n            \n\n\n            \n                \n                    Este metodo se usa cuando se inicia el componente\n\n\n                    \n                        Ejemplo :\n                        \n                            ngAfterViewInit(params: any)\n                        \n                    \n                    \n                        Devuelve :         void\n\n                    \n                    \n                        Vacio\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onKeyDown\n                        \n                        \n                    \n                \n            \n            \n                \nonKeyDown(event)\n                \n            \n\n\n            \n                \n                    Definido en src/app/components/utils/mat-contract-picker-render/mat-contract-picker-render.component.ts:158\n                \n            \n\n\n            \n                \n                    Este metodo se usa para verificar si se ha presionado una tecla\n\n\n                    \n                        Parámetros :\n                        \n                            \n                                \n                                    Nombre\n                                    Opcional\n                                    Descripción\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Objeto de tipo evento\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                        Ejemplo :\n                        \n                            onKeyDown(event)\n                        \n                    \n                    \n                        Devuelve :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            preventDefaultAndPropagation\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    preventDefaultAndPropagation(event)\n                \n            \n\n\n            \n                \n                    Definido en src/app/components/utils/mat-contract-picker-render/mat-contract-picker-render.component.ts:196\n                \n            \n\n\n            \n                \n                    Este metodo se usa para evitar propagacion completa y cerradco de modal involuntario\n\n\n                    \n                        Parámetros :\n                        \n                            \n                                \n                                    Nombre\n                                    Opcional\n                                    Descripción\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Objeto de tipo evento\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                        Ejemplo :\n                        \n                            preventDefaultAndPropagation(event)\n                        \n                    \n                    \n                        Devuelve :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Propiedades\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            contract\n                            \n                        \n                    \n                \n                        \n                            \n                                    Definido en src/app/components/utils/mat-contract-picker-render/mat-contract-picker-render.component.ts:60\n                            \n                        \n\n                \n                    \n                        Variable para guardar contrato seleccionado\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            contracts\n                            \n                        \n                    \n                \n                    \n                        \n                            Tipo :         any\n\n                        \n                    \n                        \n                            \n                                    Definido en src/app/components/utils/mat-contract-picker-render/mat-contract-picker-render.component.ts:85\n                            \n                        \n\n                \n                    \n                        Variable para guardar contratos\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dias\n                            \n                        \n                    \n                \n                        \n                            \n                                    Definido en src/app/components/utils/mat-contract-picker-render/mat-contract-picker-render.component.ts:55\n                            \n                        \n\n                \n                    \n                        Variable para guardar seleccion\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            focusedInput\n                            \n                        \n                    \n                \n                    \n                        \n                            Tipo :         number\n\n                        \n                    \n                    \n                        \n                            Valor por defecto : 0\n                        \n                    \n                        \n                            \n                                    Definido en src/app/components/utils/mat-contract-picker-render/mat-contract-picker-render.component.ts:75\n                            \n                        \n\n                \n                    \n                        Variable para detectar si existe focus sobre el componente\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            input\n                            \n                        \n                    \n                \n                    \n                        \n                            Tipo :         ViewContainerRef\n\n                        \n                    \n                    \n                        \n                            Decoradores : \n                            \n                            \n                                @ViewChildren('input', {read: ViewContainerRef})\n                            \n                        \n                    \n                        \n                            \n                                    Definido en src/app/components/utils/mat-contract-picker-render/mat-contract-picker-render.component.ts:65\n                            \n                        \n\n                \n                    \n                        Variable para obtener la referencia de datos suministrados desde componente padre\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            inputs\n                            \n                        \n                    \n                \n                    \n                        \n                            Tipo :     QueryList\n\n                        \n                    \n                        \n                            \n                                    Definido en src/app/components/utils/mat-contract-picker-render/mat-contract-picker-render.component.ts:70\n                            \n                        \n\n                \n                    \n                        Variable para guardar entradas procesadas desde componente padre\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            params\n                            \n                        \n                    \n                \n                    \n                        \n                            Tipo :         any\n\n                        \n                    \n                        \n                            \n                                    Definido en src/app/components/utils/mat-contract-picker-render/mat-contract-picker-render.component.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            permissions\n                            \n                        \n                    \n                \n                    \n                        \n                            Tipo :     []\n\n                        \n                    \n                    \n                        \n                            Valor por defecto : []\n                        \n                    \n                        \n                            \n                                    Definido en src/app/components/utils/mat-contract-picker-render/mat-contract-picker-render.component.ts:80\n                            \n                        \n\n                \n                    \n                        Variable para guardar permisos\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            statuses\n                            \n                        \n                    \n                \n                    \n                        \n                            Tipo :     []\n\n                        \n                    \n                    \n                        \n                            Valor por defecto : [\"ACTIVO\",\"INACTIVO\"]\n                        \n                    \n                        \n                            \n                                    Definido en src/app/components/utils/mat-contract-picker-render/mat-contract-picker-render.component.ts:49\n                            \n                        \n\n                \n                    \n                        Variable para guardar estados\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import {\n  Component,\n  QueryList,\n  ViewChildren,\n  ViewContainerRef\n} from \"@angular/core\";\nimport { ICellEditorAngularComp } from \"ag-grid-angular\";\nimport * as moment from \"moment\";\n\n\n\n/**\n * Util de contratos\n * Este componente es un picker renderizado para asignar contratos\n */\n\n@Component({\n  selector: \"input-cell\",\n  template: `\n    \n      \n      Perfiles\n      \n        {{contract.contName}}\n      \n    \n  `,\n  styles: [\n    `\n      .container {\n        width: 350px;\n        height: 250px;\n      }\n    `\n  ]\n})\n\n\n\n\nexport class MatContractPickerRenderComponent implements ICellEditorAngularComp {\n  private params: any;\n   \n  /**\n     * Variable para guardar estados\n     * @type Array\n     */\n    statuses = [\"ACTIVO\",\"INACTIVO\"]\n    //private inputDate: any;\n    /**\n     * Variable para guardar seleccion\n     * @type Array\n     */\n    dias;\n    /**\n     * Variable para guardar contrato seleccionado\n     * @type String\n     */\n    contract;\n    /**\n     * Variable para obtener la referencia de datos suministrados desde componente padre\n     * @type ViewContainerRef\n     */\n    @ViewChildren(\"input\", { read: ViewContainerRef })  public input: ViewContainerRef;\n    /**\n     * Variable para guardar entradas procesadas desde componente padre\n     * @type QueryList\n     */\n    public inputs: QueryList;\n    /**\n     * Variable para detectar si existe focus sobre el componente\n     * @type number\n     */\n    private focusedInput: number = 0;\n    /**\n     * Variable para guardar permisos\n     * @type Array\n     */\n    permissions=[];\n    /**\n     * Variable para guardar contratos\n     * @type Array\n     */\n  contracts: any;\n    /**\n    * Este metodo se usa cuando se inicia el componente\n    * @example\n    * agInit(params: any)\n    * @param {Object} params\n    * Objeto de tipo params obtenido desde componente padre\n    * @returns  {Void} Vacio\n    */\n    agInit(params: any): void {\n      \n      this.contracts = params.contracts()\n      console.log(this.contracts)\n      this.params = params\n      \n      \n    }\n    /**\n    * Este metodo se usa cuando se inicia el componente\n    * @example\n    * ngAfterViewInit(params: any)\n    * @param {Object} params\n    * Objeto de tipo params obtenido desde componente padre\n    * @returns  {Void} Vacio\n    */\n    // dont use afterGuiAttached for post gui events - hook into ngAfterViewInit instead for this\n    ngAfterViewInit() {\n      //this.focusOnInputNextTick(this.inputs.first);\n    }\n    /**\n    * Este metodo se usa para obtener los focus sobre el modal\n    * @example\n    * focusOnInputNextTick(input)\n    * @param {ViewContainerRef} input\n    * Objeto de tipo ViewContainerRef\n    * @returns  {Void} Vacio\n    */\n    private focusOnInputNextTick(input: ViewContainerRef) {\n      window.setTimeout(() => {\n        input.element.nativeElement.focus();\n      }, 0);\n    }\n     /**\n    * Este metodo se usa para obtener el valor final\n    * @example\n    * getValue()\n    * @returns  {String} Valor seleccionado\n    */\n    getValue() {\n      \n\n      return this.contract;\n     \n      \n    }\n    /**\n    * Este metodo se usa para verificar popUp\n    * @example\n    * isPopup()\n    * @returns  {Bool} \n    */\n    isPopup(): boolean {\n      return true;\n    }\n    /**\n    * Este metodo se usa para verificar si se ha presionado una tecla\n    * @example\n    * onKeyDown(event)\n    * @param {ViewContainerRef} event\n    * Objeto de tipo evento\n    * @returns  {Bool} \n    */\n  \n    onKeyDown(event): void {\n      let key = event.which || event.keyCode;\n      if (key == 9) {\n        // tab\n        this.preventDefaultAndPropagation(event);\n  \n        // either move one input along, or cycle back to 0\n        this.focusedInput =\n          this.focusedInput === this.inputs.length - 1\n            ? 0\n            : this.focusedInput + 1;\n  \n        let focusedInput = this.focusedInput;\n        let inputToFocusOn = this.inputs.find((item: any, index: number) => {\n          return index === focusedInput;\n        });\n  \n        this.focusOnInputNextTick(inputToFocusOn);\n      } else if (key == 13) {\n        // enter\n        // perform some validation on enter - in this example we assume all inputs are mandatory\n        // in a proper application you'd probably want to inform the user that an input is blank\n        this.inputs.forEach(input => {\n          if (!input.element.nativeElement.value) {\n            this.preventDefaultAndPropagation(event);\n            this.focusOnInputNextTick(input);\n          }\n        });\n      }\n    }\n    /**\n    * Este metodo se usa para evitar propagacion completa y cerradco de modal involuntario\n    * @example\n    * preventDefaultAndPropagation(event)\n    * @param {ViewContainerRef} event\n    * Objeto de tipo evento\n    * @returns  {Bool} \n    */\n    private preventDefaultAndPropagation(event) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n}\n\n\n    \n\n\n    \n            \n      .container {\n        width: 350px;\n        height: 250px;\n      }\n    \n\n    \n\n    \n        \n        \n            \n                Leyenda\n            \n            \n                Elemento Html\n            \n            \n                Componente\n            \n            \n                Elemento Html con directiva\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Perfiles      {{contract.contName}}  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BathroomsComponent', 'selector': 'app-bathrooms'},{'name': 'CommercialComponent', 'selector': 'app-commercial'},{'name': 'InitialViewComponent', 'selector': 'app-initial-view'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MatApprovedPickerRenderComponent', 'selector': 'input-cell'},{'name': 'MatContractPickerRenderComponent', 'selector': 'input-cell'},{'name': 'MatModulesPickerRenderComponent', 'selector': 'input-cell'},{'name': 'MatPermissionsPickerRenderComponent', 'selector': 'input-cell'},{'name': 'MatProfilesPickerRenderComponent', 'selector': 'input-cell'},{'name': 'MatServicesPickerRenderComponent', 'selector': 'input-cell'},{'name': 'MatStatusPickerRenderComponent', 'selector': 'input-cell'},{'name': 'ServicesComponent', 'selector': 'app-services'},{'name': 'UsersComponent', 'selector': 'app-users'},{'name': 'WastesComponent', 'selector': 'app-wastes'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MatContractPickerRenderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"components/MatModulesPickerRenderComponent.html":{"url":"components/MatModulesPickerRenderComponent.html","title":"component - MatModulesPickerRenderComponent","body":"\n                   \n\n\n\n\n\n  Componentes\n  MatModulesPickerRenderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    Fichero\n\n\n    src/app/components/utils/mat-modules-picker-render/mat-service-modules-render.component.ts\n\n\n    \n        Descripción\n    \n    \n        Util de permisos\nEste componente es un picker renderizado para asignar modulos a un tipo de servicio\n\n    \n\n\n    \n        Implementa\n    \n    \n                ICellEditorAngularComp\n    \n\n\n\n    Meta datos\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                input-cell\n            \n\n\n            \n                styles\n                \n      .container {\n        width: 350px;\n        height: 250px;\n      }\n    \n            \n\n            \n                template\n                \n  \n  Perfiles\n  \n    {{module.moduName}}\n  \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Índice\n    \n        \n                \n                    \n                        Propiedades\n                    \n                \n                \n                    \n                        \n                            \n                                dias\n                            \n                            \n                                    Private\n                                focusedInput\n                            \n                            \n                                    Public\n                                input\n                            \n                            \n                                    Public\n                                inputs\n                            \n                            \n                                modules\n                            \n                            \n                                permissions\n                            \n                            \n                                services\n                            \n                            \n                                statuses\n                            \n                        \n                    \n                \n\n                \n                    \n                        Métodos\n                    \n                \n                \n                    \n                        \n                            \n                                agInit\n                            \n                            \n                                    Private\n                                focusOnInputNextTick\n                            \n                            \n                                getValue\n                            \n                            \n                                isPopup\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                onKeyDown\n                            \n                            \n                                    Private\n                                preventDefaultAndPropagation\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Métodos\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            agInit\n                        \n                        \n                    \n                \n            \n            \n                \nagInit(params: any)\n                \n            \n\n\n            \n                \n                    Definido en src/app/components/utils/mat-modules-picker-render/mat-service-modules-render.component.ts:94\n                \n            \n\n\n            \n                \n                    Este metodo se usa cuando se inicia el componente\n\n\n                    \n                        Parámetros :\n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                    Descripción\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Objeto de tipo params obtenido desde componente padre\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                        Ejemplo :\n                        \n                            agInit(params: any)\n                        \n                    \n                    \n                        Devuelve :         void\n\n                    \n                    \n                        Vacio\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            focusOnInputNextTick\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    focusOnInputNextTick(input: ViewContainerRef)\n                \n            \n\n\n            \n                \n                    Definido en src/app/components/utils/mat-modules-picker-render/mat-service-modules-render.component.ts:121\n                \n            \n\n\n            \n                \n                    Este metodo se usa para obtener los focus sobre el modal\n\n\n                    \n                        Parámetros :\n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                    Descripción\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                                ViewContainerRef\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Objeto de tipo ViewContainerRef\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                        Ejemplo :\n                        \n                            focusOnInputNextTick(input)\n                        \n                    \n                    \n                        Devuelve :         void\n\n                    \n                    \n                        Vacio\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getValue\n                        \n                        \n                    \n                \n            \n            \n                \ngetValue()\n                \n            \n\n\n            \n                \n                    Definido en src/app/components/utils/mat-modules-picker-render/mat-service-modules-render.component.ts:132\n                \n            \n\n\n            \n                \n                    Este metodo se usa para obtener el valor final\n\n\n                    \n                        Ejemplo :\n                        \n                            getValue()\n                        \n                    \n                    \n                        Devuelve :         any\n\n                    \n                    \n                        Valor seleccionado\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isPopup\n                        \n                        \n                    \n                \n            \n            \n                \nisPopup()\n                \n            \n\n\n            \n                \n                    Definido en src/app/components/utils/mat-modules-picker-render/mat-service-modules-render.component.ts:145\n                \n            \n\n\n            \n                \n                    Este metodo se usa para verificar popUp\n\n\n                    \n                        Ejemplo :\n                        \n                            isPopup()\n                        \n                    \n                    \n                        Devuelve :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Definido en src/app/components/utils/mat-modules-picker-render/mat-service-modules-render.component.ts:110\n                \n            \n\n\n            \n                \n                    Este metodo se usa cuando se inicia el componente\n\n\n                    \n                        Ejemplo :\n                        \n                            ngAfterViewInit(params: any)\n                        \n                    \n                    \n                        Devuelve :         void\n\n                    \n                    \n                        Vacio\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onKeyDown\n                        \n                        \n                    \n                \n            \n            \n                \nonKeyDown(event)\n                \n            \n\n\n            \n                \n                    Definido en src/app/components/utils/mat-modules-picker-render/mat-service-modules-render.component.ts:157\n                \n            \n\n\n            \n                \n                    Este metodo se usa para verificar si se ha presionado una tecla\n\n\n                    \n                        Parámetros :\n                        \n                            \n                                \n                                    Nombre\n                                    Opcional\n                                    Descripción\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Objeto de tipo evento\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                        Ejemplo :\n                        \n                            onKeyDown(event)\n                        \n                    \n                    \n                        Devuelve :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            preventDefaultAndPropagation\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    preventDefaultAndPropagation(event)\n                \n            \n\n\n            \n                \n                    Definido en src/app/components/utils/mat-modules-picker-render/mat-service-modules-render.component.ts:195\n                \n            \n\n\n            \n                \n                    Este metodo se usa para evitar propagacion completa y cerradco de modal involuntario\n\n\n                    \n                        Parámetros :\n                        \n                            \n                                \n                                    Nombre\n                                    Opcional\n                                    Descripción\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Objeto de tipo evento\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                        Ejemplo :\n                        \n                            preventDefaultAndPropagation(event)\n                        \n                    \n                    \n                        Devuelve :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Propiedades\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dias\n                            \n                        \n                    \n                \n                        \n                            \n                                    Definido en src/app/components/utils/mat-modules-picker-render/mat-service-modules-render.component.ts:54\n                            \n                        \n\n                \n                    \n                        Variable para guardar seleccion\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            focusedInput\n                            \n                        \n                    \n                \n                    \n                        \n                            Tipo :         number\n\n                        \n                    \n                    \n                        \n                            Valor por defecto : 0\n                        \n                    \n                        \n                            \n                                    Definido en src/app/components/utils/mat-modules-picker-render/mat-service-modules-render.component.ts:69\n                            \n                        \n\n                \n                    \n                        Variable para detectar si existe focus sobre el componente\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            input\n                            \n                        \n                    \n                \n                    \n                        \n                            Tipo :         ViewContainerRef\n\n                        \n                    \n                    \n                        \n                            Decoradores : \n                            \n                            \n                                @ViewChildren('input', {read: ViewContainerRef})\n                            \n                        \n                    \n                        \n                            \n                                    Definido en src/app/components/utils/mat-modules-picker-render/mat-service-modules-render.component.ts:59\n                            \n                        \n\n                \n                    \n                        Variable para obtener la referencia de datos suministrados desde componente padre\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            inputs\n                            \n                        \n                    \n                \n                    \n                        \n                            Tipo :     QueryList\n\n                        \n                    \n                        \n                            \n                                    Definido en src/app/components/utils/mat-modules-picker-render/mat-service-modules-render.component.ts:64\n                            \n                        \n\n                \n                    \n                        Variable para guardar entradas procesadas desde componente padre\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            modules\n                            \n                        \n                    \n                \n                    \n                        \n                            Tipo :         any\n\n                        \n                    \n                        \n                            \n                                    Definido en src/app/components/utils/mat-modules-picker-render/mat-service-modules-render.component.ts:84\n                            \n                        \n\n                \n                    \n                        Variable para guardar modulos\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            permissions\n                            \n                        \n                    \n                \n                    \n                        \n                            Tipo :     []\n\n                        \n                    \n                    \n                        \n                            Valor por defecto : []\n                        \n                    \n                        \n                            \n                                    Definido en src/app/components/utils/mat-modules-picker-render/mat-service-modules-render.component.ts:74\n                            \n                        \n\n                \n                    \n                        Variable para guardar permisos\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            services\n                            \n                        \n                    \n                \n                    \n                        \n                            Tipo :         any\n\n                        \n                    \n                        \n                            \n                                    Definido en src/app/components/utils/mat-modules-picker-render/mat-service-modules-render.component.ts:79\n                            \n                        \n\n                \n                    \n                        Variable para guardar tipos de servicios\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            statuses\n                            \n                        \n                    \n                \n                    \n                        \n                            Tipo :     []\n\n                        \n                    \n                    \n                        \n                            Valor por defecto : [\"ACTIVO\",\"INACTIVO\"]\n                        \n                    \n                        \n                            \n                                    Definido en src/app/components/utils/mat-modules-picker-render/mat-service-modules-render.component.ts:48\n                            \n                        \n\n                \n                    \n                        Variable para guardar estados\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import {\n  Component,\n  QueryList,\n  ViewChildren,\n  ViewContainerRef\n} from \"@angular/core\";\nimport { ICellEditorAngularComp } from \"ag-grid-angular\";\nimport * as moment from \"moment\";\n\n\n/**\n * Util de permisos\n * Este componente es un picker renderizado para asignar modulos a un tipo de servicio\n */\n\n@Component({\n  selector: \"input-cell\",\n  template: `\n    \n      \n      Perfiles\n      \n        {{module.moduName}}\n      \n    \n  `,\n  styles: [\n    `\n      .container {\n        width: 350px;\n        height: 250px;\n      }\n    `\n  ]\n})\n\n\n\n\nexport class MatModulesPickerRenderComponent implements ICellEditorAngularComp {\n  //private params: any;\n   \n    /**\n     * Variable para guardar estados\n     * @type Array\n     */\n    statuses = [\"ACTIVO\",\"INACTIVO\"]\n    //private inputDate: any;\n    /**\n     * Variable para guardar seleccion\n     * @type Array\n     */\n    dias;\n    /**\n     * Variable para obtener la referencia de datos suministrados desde componente padre\n     * @type ViewContainerRef\n     */\n    @ViewChildren(\"input\", { read: ViewContainerRef }) public input: ViewContainerRef;\n    /**\n     * Variable para guardar entradas procesadas desde componente padre\n     * @type QueryList\n     */\n    public inputs: QueryList;\n    /**\n     * Variable para detectar si existe focus sobre el componente\n     * @type number\n     */\n    private focusedInput: number = 0;\n    /**\n     * Variable para guardar permisos\n     * @type Array\n     */\n    permissions=[];\n    /**\n     * Variable para guardar tipos de servicios\n     * @type Array\n     */\n  services: any;\n  /**\n     * Variable para guardar modulos\n     * @type Array\n     */\n  modules: any;\n  \n    /**\n    * Este metodo se usa cuando se inicia el componente\n    * @example\n    * agInit(params: any)\n    * @param {Object} params\n    * Objeto de tipo params obtenido desde componente padre\n    * @returns  {Void} Vacio\n    */\n    agInit(params: any): void {\n      \n      this.modules = params.modules()\n      console.log(this.modules)\n      \n      \n    }\n    /**\n    * Este metodo se usa cuando se inicia el componente\n    * @example\n    * ngAfterViewInit(params: any)\n    * @param {Object} params\n    * Objeto de tipo params obtenido desde componente padre\n    * @returns  {Void} Vacio\n    */\n    // dont use afterGuiAttached for post gui events - hook into ngAfterViewInit instead for this\n    ngAfterViewInit() {\n      //this.focusOnInputNextTick(this.inputs.first);\n    }\n    /**\n    * Este metodo se usa para obtener los focus sobre el modal\n    * @example\n    * focusOnInputNextTick(input)\n    * @param {ViewContainerRef} input\n    * Objeto de tipo ViewContainerRef\n    * @returns  {Void} Vacio\n    */\n    private focusOnInputNextTick(input: ViewContainerRef) {\n      window.setTimeout(() => {\n        input.element.nativeElement.focus();\n      }, 0);\n    }\n    /**\n    * Este metodo se usa para obtener el valor final\n    * @example\n    * getValue()\n    * @returns  {String} Valor seleccionado\n    */\n    getValue() {\n      \n      console.log(this.dias)\n      return this.dias;\n     \n      \n    }\n    /**\n    * Este metodo se usa para verificar popUp\n    * @example\n    * isPopup()\n    * @returns  {Bool} \n    */\n    isPopup(): boolean {\n      return true;\n    }\n  \n    /**\n    * Este metodo se usa para verificar si se ha presionado una tecla\n    * @example\n    * onKeyDown(event)\n    * @param {ViewContainerRef} event\n    * Objeto de tipo evento\n    * @returns  {Bool} \n    */\n    onKeyDown(event): void {\n      let key = event.which || event.keyCode;\n      if (key == 9) {\n        // tab\n        this.preventDefaultAndPropagation(event);\n  \n        // either move one input along, or cycle back to 0\n        this.focusedInput =\n          this.focusedInput === this.inputs.length - 1\n            ? 0\n            : this.focusedInput + 1;\n  \n        let focusedInput = this.focusedInput;\n        let inputToFocusOn = this.inputs.find((item: any, index: number) => {\n          return index === focusedInput;\n        });\n  \n        this.focusOnInputNextTick(inputToFocusOn);\n      } else if (key == 13) {\n        // enter\n        // perform some validation on enter - in this example we assume all inputs are mandatory\n        // in a proper application you'd probably want to inform the user that an input is blank\n        this.inputs.forEach(input => {\n          if (!input.element.nativeElement.value) {\n            this.preventDefaultAndPropagation(event);\n            this.focusOnInputNextTick(input);\n          }\n        });\n      }\n    }\n    /**\n    * Este metodo se usa para evitar propagacion completa y cerradco de modal involuntario\n    * @example\n    * preventDefaultAndPropagation(event)\n    * @param {ViewContainerRef} event\n    * Objeto de tipo evento\n    * @returns  {Bool} \n    */\n    private preventDefaultAndPropagation(event) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n}\n\n\n    \n\n\n    \n            \n      .container {\n        width: 350px;\n        height: 250px;\n      }\n    \n\n    \n\n    \n        \n        \n            \n                Leyenda\n            \n            \n                Elemento Html\n            \n            \n                Componente\n            \n            \n                Elemento Html con directiva\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Perfiles      {{module.moduName}}  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BathroomsComponent', 'selector': 'app-bathrooms'},{'name': 'CommercialComponent', 'selector': 'app-commercial'},{'name': 'InitialViewComponent', 'selector': 'app-initial-view'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MatApprovedPickerRenderComponent', 'selector': 'input-cell'},{'name': 'MatContractPickerRenderComponent', 'selector': 'input-cell'},{'name': 'MatModulesPickerRenderComponent', 'selector': 'input-cell'},{'name': 'MatPermissionsPickerRenderComponent', 'selector': 'input-cell'},{'name': 'MatProfilesPickerRenderComponent', 'selector': 'input-cell'},{'name': 'MatServicesPickerRenderComponent', 'selector': 'input-cell'},{'name': 'MatStatusPickerRenderComponent', 'selector': 'input-cell'},{'name': 'ServicesComponent', 'selector': 'app-services'},{'name': 'UsersComponent', 'selector': 'app-users'},{'name': 'WastesComponent', 'selector': 'app-wastes'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MatModulesPickerRenderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"components/MatPermissionsPickerRenderComponent.html":{"url":"components/MatPermissionsPickerRenderComponent.html","title":"component - MatPermissionsPickerRenderComponent","body":"\n                   \n\n\n\n\n\n  Componentes\n  MatPermissionsPickerRenderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    Fichero\n\n\n    src/app/components/utils/mat-permissions-picker-render/mat-permissions-picker-render.component.ts\n\n\n    \n        Descripción\n    \n    \n        Util de permisos\nEste componente es un picker renderizado para asignar permisos a un perfil\n\n    \n\n\n    \n        Implementa\n    \n    \n                ICellEditorAngularComp\n    \n\n\n\n    Meta datos\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                input-cell\n            \n\n\n            \n                styles\n                \n      .container {\n        width: 350px;\n        height: 250px;\n      }\n    \n            \n\n            \n                template\n                \n  \n  Perfiles\n  \n    {{permission.p_perm_name}}\n  \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Índice\n    \n        \n                \n                    \n                        Propiedades\n                    \n                \n                \n                    \n                        \n                            \n                                dias\n                            \n                            \n                                    Private\n                                focusedInput\n                            \n                            \n                                    Public\n                                input\n                            \n                            \n                                    Public\n                                inputs\n                            \n                            \n                                    Private\n                                params\n                            \n                            \n                                permissions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Métodos\n                    \n                \n                \n                    \n                        \n                            \n                                agInit\n                            \n                            \n                                    Private\n                                focusOnInputNextTick\n                            \n                            \n                                getValue\n                            \n                            \n                                isPopup\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                onKeyDown\n                            \n                            \n                                    Private\n                                preventDefaultAndPropagation\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Métodos\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            agInit\n                        \n                        \n                    \n                \n            \n            \n                \nagInit(params: any)\n                \n            \n\n\n            \n                \n                    Definido en src/app/components/utils/mat-permissions-picker-render/mat-permissions-picker-render.component.ts:80\n                \n            \n\n\n            \n                \n                    Este metodo se usa cuando se inicia el componente\n\n\n                    \n                        Parámetros :\n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                    Descripción\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Objeto de tipo params obtenido desde componente padre\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                        Ejemplo :\n                        \n                            agInit(params: any)\n                        \n                    \n                    \n                        Devuelve :         void\n\n                    \n                    \n                        Vacio\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            focusOnInputNextTick\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    focusOnInputNextTick(input: ViewContainerRef)\n                \n            \n\n\n            \n                \n                    Definido en src/app/components/utils/mat-permissions-picker-render/mat-permissions-picker-render.component.ts:108\n                \n            \n\n\n            \n                \n                    Este metodo se usa para obtener los focus sobre el modal\n\n\n                    \n                        Parámetros :\n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                    Descripción\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                                ViewContainerRef\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Objeto de tipo ViewContainerRef\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                        Ejemplo :\n                        \n                            focusOnInputNextTick(input)\n                        \n                    \n                    \n                        Devuelve :         void\n\n                    \n                    \n                        Vacio\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getValue\n                        \n                        \n                    \n                \n            \n            \n                \ngetValue()\n                \n            \n\n\n            \n                \n                    Definido en src/app/components/utils/mat-permissions-picker-render/mat-permissions-picker-render.component.ts:119\n                \n            \n\n\n            \n                \n                    Este metodo se usa para obtener el valor final\n\n\n                    \n                        Ejemplo :\n                        \n                            getValue()\n                        \n                    \n                    \n                        Devuelve :         any\n\n                    \n                    \n                        Valor seleccionado\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isPopup\n                        \n                        \n                    \n                \n            \n            \n                \nisPopup()\n                \n            \n\n\n            \n                \n                    Definido en src/app/components/utils/mat-permissions-picker-render/mat-permissions-picker-render.component.ts:132\n                \n            \n\n\n            \n                \n                    Este metodo se usa para verificar popUp\n\n\n                    \n                        Ejemplo :\n                        \n                            isPopup()\n                        \n                    \n                    \n                        Devuelve :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Definido en src/app/components/utils/mat-permissions-picker-render/mat-permissions-picker-render.component.ts:97\n                \n            \n\n\n            \n                \n                    Este metodo se usa cuando se inicia el componente\n\n\n                    \n                        Ejemplo :\n                        \n                            agInit(params: any)\n                        \n                    \n                    \n                        Devuelve :         void\n\n                    \n                    \n                        Vacio\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onKeyDown\n                        \n                        \n                    \n                \n            \n            \n                \nonKeyDown(event)\n                \n            \n\n\n            \n                \n                    Definido en src/app/components/utils/mat-permissions-picker-render/mat-permissions-picker-render.component.ts:144\n                \n            \n\n\n            \n                \n                    Este metodo se usa para verificar si se ha presionado una tecla\n\n\n                    \n                        Parámetros :\n                        \n                            \n                                \n                                    Nombre\n                                    Opcional\n                                    Descripción\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Objeto de tipo evento\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                        Ejemplo :\n                        \n                            onKeyDown(event)\n                        \n                    \n                    \n                        Devuelve :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            preventDefaultAndPropagation\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    preventDefaultAndPropagation(event)\n                \n            \n\n\n            \n                \n                    Definido en src/app/components/utils/mat-permissions-picker-render/mat-permissions-picker-render.component.ts:182\n                \n            \n\n\n            \n                \n                    Este metodo se usa para evitar propagacion completa y cerradco de modal involuntario\n\n\n                    \n                        Parámetros :\n                        \n                            \n                                \n                                    Nombre\n                                    Opcional\n                                    Descripción\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Objeto de tipo evento\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                        Ejemplo :\n                        \n                            preventDefaultAndPropagation(event)\n                        \n                    \n                    \n                        Devuelve :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Propiedades\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dias\n                            \n                        \n                    \n                \n                        \n                            \n                                    Definido en src/app/components/utils/mat-permissions-picker-render/mat-permissions-picker-render.component.ts:50\n                            \n                        \n\n                \n                    \n                        Variable para guardar seleccion\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            focusedInput\n                            \n                        \n                    \n                \n                    \n                        \n                            Tipo :         number\n\n                        \n                    \n                    \n                        \n                            Valor por defecto : 0\n                        \n                    \n                        \n                            \n                                    Definido en src/app/components/utils/mat-permissions-picker-render/mat-permissions-picker-render.component.ts:65\n                            \n                        \n\n                \n                    \n                        Variable para detectar si existe focus sobre el componente\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            input\n                            \n                        \n                    \n                \n                    \n                        \n                            Tipo :         ViewContainerRef\n\n                        \n                    \n                    \n                        \n                            Decoradores : \n                            \n                            \n                                @ViewChildren('input', {read: ViewContainerRef})\n                            \n                        \n                    \n                        \n                            \n                                    Definido en src/app/components/utils/mat-permissions-picker-render/mat-permissions-picker-render.component.ts:55\n                            \n                        \n\n                \n                    \n                        Variable para obtener la referencia de datos suministrados desde componente padre\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            inputs\n                            \n                        \n                    \n                \n                    \n                        \n                            Tipo :     QueryList\n\n                        \n                    \n                        \n                            \n                                    Definido en src/app/components/utils/mat-permissions-picker-render/mat-permissions-picker-render.component.ts:60\n                            \n                        \n\n                \n                    \n                        Variable para guardar entradas procesadas desde componente padre\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            params\n                            \n                        \n                    \n                \n                    \n                        \n                            Tipo :         any\n\n                        \n                    \n                        \n                            \n                                    Definido en src/app/components/utils/mat-permissions-picker-render/mat-permissions-picker-render.component.ts:45\n                            \n                        \n\n                \n                    \n                        Variable para guardar parametros\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            permissions\n                            \n                        \n                    \n                \n                    \n                        \n                            Tipo :     []\n\n                        \n                    \n                    \n                        \n                            Valor por defecto : []\n                        \n                    \n                        \n                            \n                                    Definido en src/app/components/utils/mat-permissions-picker-render/mat-permissions-picker-render.component.ts:70\n                            \n                        \n\n                \n                    \n                        Variable para guardar tipos de permisos\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import {\n  Component,\n  QueryList,\n  ViewChildren,\n  ViewContainerRef\n} from \"@angular/core\";\nimport { ICellEditorAngularComp } from \"ag-grid-angular\";\nimport * as moment from \"moment\";\n\n/**\n * Util de permisos\n * Este componente es un picker renderizado para asignar permisos a un perfil\n */\n\n@Component({\n  selector: \"input-cell\",\n  template: `\n    \n      \n      Perfiles\n      \n        {{permission.p_perm_name}}\n      \n    \n  `,\n  styles: [\n    `\n      .container {\n        width: 350px;\n        height: 250px;\n      }\n    `\n  ]\n})\n\n\n\n\nexport class MatPermissionsPickerRenderComponent implements ICellEditorAngularComp {\n  /**\n     * Variable para guardar parametros\n     * @type Array\n     */\n  private params: any;\n    /**\n     * Variable para guardar seleccion\n     * @type Array\n     */\n    dias;\n    /**\n     * Variable para obtener la referencia de datos suministrados desde componente padre\n     * @type ViewContainerRef\n     */\n    @ViewChildren(\"input\", { read: ViewContainerRef })  public input: ViewContainerRef;\n    /**\n     * Variable para guardar entradas procesadas desde componente padre\n     * @type QueryList\n     */\n    public inputs: QueryList;\n    /**\n     * Variable para detectar si existe focus sobre el componente\n     * @type number\n     */\n    private focusedInput: number = 0;\n    /**\n     * Variable para guardar tipos de permisos\n     * @type Array\n     */\n    permissions=[];\n  \n    /**\n    * Este metodo se usa cuando se inicia el componente\n    * @example\n    * agInit(params: any)\n    * @param {Object} params\n    * Objeto de tipo params obtenido desde componente padre\n    * @returns  {Void} Vacio\n    */\n    agInit(params: any): void {\n      \n      this.dias = params.data.permissions\n      this.params = params\n      this.permissions = this.params.permissions().data\n      \n    }\n  \n    /**\n    * Este metodo se usa cuando se inicia el componente\n    * @example\n    * agInit(params: any)\n    * @param {Object} params\n    * Objeto de tipo params obtenido desde componente padre\n    * @returns  {Void} Vacio\n    */\n    // dont use afterGuiAttached for post gui events - hook into ngAfterViewInit instead for this\n    ngAfterViewInit() {\n      //this.focusOnInputNextTick(this.inputs.first);\n    }\n    /**\n    * Este metodo se usa para obtener los focus sobre el modal\n    * @example\n    * focusOnInputNextTick(input)\n    * @param {ViewContainerRef} input\n    * Objeto de tipo ViewContainerRef\n    * @returns  {Void} Vacio\n    */\n    private focusOnInputNextTick(input: ViewContainerRef) {\n      window.setTimeout(() => {\n        input.element.nativeElement.focus();\n      }, 0);\n    }\n     /**\n    * Este metodo se usa para obtener el valor final\n    * @example\n    * getValue()\n    * @returns  {String} Valor seleccionado\n    */\n    getValue() {\n      \n\n      return this.dias;\n     \n      \n    }\n    /**\n    * Este metodo se usa para verificar popUp\n    * @example\n    * isPopup()\n    * @returns  {Bool} \n    */\n    isPopup(): boolean {\n      return true;\n    }\n  \n    /**\n    * Este metodo se usa para verificar si se ha presionado una tecla\n    * @example\n    * onKeyDown(event)\n    * @param {ViewContainerRef} event\n    * Objeto de tipo evento\n    * @returns  {Bool} \n    */\n    onKeyDown(event): void {\n      let key = event.which || event.keyCode;\n      if (key == 9) {\n        // tab\n        this.preventDefaultAndPropagation(event);\n  \n        // either move one input along, or cycle back to 0\n        this.focusedInput =\n          this.focusedInput === this.inputs.length - 1\n            ? 0\n            : this.focusedInput + 1;\n  \n        let focusedInput = this.focusedInput;\n        let inputToFocusOn = this.inputs.find((item: any, index: number) => {\n          return index === focusedInput;\n        });\n  \n        this.focusOnInputNextTick(inputToFocusOn);\n      } else if (key == 13) {\n        // enter\n        // perform some validation on enter - in this example we assume all inputs are mandatory\n        // in a proper application you'd probably want to inform the user that an input is blank\n        this.inputs.forEach(input => {\n          if (!input.element.nativeElement.value) {\n            this.preventDefaultAndPropagation(event);\n            this.focusOnInputNextTick(input);\n          }\n        });\n      }\n    }\n     /**\n    * Este metodo se usa para evitar propagacion completa y cerradco de modal involuntario\n    * @example\n    * preventDefaultAndPropagation(event)\n    * @param {ViewContainerRef} event\n    * Objeto de tipo evento\n    * @returns  {Bool} \n    */\n    private preventDefaultAndPropagation(event) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n}\n\n\n    \n\n\n    \n            \n      .container {\n        width: 350px;\n        height: 250px;\n      }\n    \n\n    \n\n    \n        \n        \n            \n                Leyenda\n            \n            \n                Elemento Html\n            \n            \n                Componente\n            \n            \n                Elemento Html con directiva\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Perfiles      {{permission.p_perm_name}}  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BathroomsComponent', 'selector': 'app-bathrooms'},{'name': 'CommercialComponent', 'selector': 'app-commercial'},{'name': 'InitialViewComponent', 'selector': 'app-initial-view'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MatApprovedPickerRenderComponent', 'selector': 'input-cell'},{'name': 'MatContractPickerRenderComponent', 'selector': 'input-cell'},{'name': 'MatModulesPickerRenderComponent', 'selector': 'input-cell'},{'name': 'MatPermissionsPickerRenderComponent', 'selector': 'input-cell'},{'name': 'MatProfilesPickerRenderComponent', 'selector': 'input-cell'},{'name': 'MatServicesPickerRenderComponent', 'selector': 'input-cell'},{'name': 'MatStatusPickerRenderComponent', 'selector': 'input-cell'},{'name': 'ServicesComponent', 'selector': 'app-services'},{'name': 'UsersComponent', 'selector': 'app-users'},{'name': 'WastesComponent', 'selector': 'app-wastes'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MatPermissionsPickerRenderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"components/MatProfilesPickerRenderComponent.html":{"url":"components/MatProfilesPickerRenderComponent.html","title":"component - MatProfilesPickerRenderComponent","body":"\n                   \n\n\n\n\n\n  Componentes\n  MatProfilesPickerRenderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    Fichero\n\n\n    src/app/components/utils/mat-profiles-picker-render/mat-profiles-picker-render.component.ts\n\n\n    \n        Descripción\n    \n    \n        Util de perfiles\nEste componente es un picker renderizado para asignar el perfil de un usuario\n\n    \n\n\n    \n        Implementa\n    \n    \n                ICellEditorAngularComp\n    \n\n\n\n    Meta datos\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                input-cell\n            \n\n\n            \n                styles\n                \n      .container {\n        width: 350px;\n        height: 250px;\n      }\n    \n            \n\n            \n                template\n                \n  \n  Perfiles\n  \n    {{profile.p_prof_name}}\n  \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Índice\n    \n        \n                \n                    \n                        Propiedades\n                    \n                \n                \n                    \n                        \n                            \n                                dias\n                            \n                            \n                                    Private\n                                focusedInput\n                            \n                            \n                                    Public\n                                input\n                            \n                            \n                                    Public\n                                inputs\n                            \n                            \n                                    Private\n                                params\n                            \n                            \n                                profiles\n                            \n                        \n                    \n                \n\n                \n                    \n                        Métodos\n                    \n                \n                \n                    \n                        \n                            \n                                agInit\n                            \n                            \n                                    Private\n                                focusOnInputNextTick\n                            \n                            \n                                getValue\n                            \n                            \n                                isPopup\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                onKeyDown\n                            \n                            \n                                    Private\n                                preventDefaultAndPropagation\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Métodos\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            agInit\n                        \n                        \n                    \n                \n            \n            \n                \nagInit(params: any)\n                \n            \n\n\n            \n                \n                    Definido en src/app/components/utils/mat-profiles-picker-render/mat-profiles-picker-render.component.ts:81\n                \n            \n\n\n            \n                \n                    Este metodo se usa cuando se inicia el componente\n\n\n                    \n                        Parámetros :\n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                    Descripción\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Objeto de tipo params obtenido desde componente padre\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                        Ejemplo :\n                        \n                            agInit(params: any)\n                        \n                    \n                    \n                        Devuelve :         void\n\n                    \n                    \n                        Vacio\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            focusOnInputNextTick\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    focusOnInputNextTick(input: ViewContainerRef)\n                \n            \n\n\n            \n                \n                    Definido en src/app/components/utils/mat-profiles-picker-render/mat-profiles-picker-render.component.ts:112\n                \n            \n\n\n            \n                \n                    Este metodo se usa para obtener los focus sobre el modal\n\n\n                    \n                        Parámetros :\n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                    Descripción\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                                ViewContainerRef\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Objeto de tipo ViewContainerRef\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                        Ejemplo :\n                        \n                            focusOnInputNextTick(input)\n                        \n                    \n                    \n                        Devuelve :         void\n\n                    \n                    \n                        Vacio\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getValue\n                        \n                        \n                    \n                \n            \n            \n                \ngetValue()\n                \n            \n\n\n            \n                \n                    Definido en src/app/components/utils/mat-profiles-picker-render/mat-profiles-picker-render.component.ts:123\n                \n            \n\n\n            \n                \n                    Este metodo se usa para obtener el valor final\n\n\n                    \n                        Ejemplo :\n                        \n                            getValue()\n                        \n                    \n                    \n                        Devuelve :         any\n\n                    \n                    \n                        Valor seleccionado\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isPopup\n                        \n                        \n                    \n                \n            \n            \n                \nisPopup()\n                \n            \n\n\n            \n                \n                    Definido en src/app/components/utils/mat-profiles-picker-render/mat-profiles-picker-render.component.ts:137\n                \n            \n\n\n            \n                \n                    Este metodo se usa para verificar popUp\n\n\n                    \n                        Ejemplo :\n                        \n                            isPopup()\n                        \n                    \n                    \n                        Devuelve :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Definido en src/app/components/utils/mat-profiles-picker-render/mat-profiles-picker-render.component.ts:100\n                \n            \n\n\n            \n                \n                    Este metodo se usa cuando se inicia el componente\n\n\n                    \n                        Ejemplo :\n                        \n                            agInit(params: any)\n                        \n                    \n                    \n                        Devuelve :         void\n\n                    \n                    \n                        Vacio\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onKeyDown\n                        \n                        \n                    \n                \n            \n            \n                \nonKeyDown(event)\n                \n            \n\n\n            \n                \n                    Definido en src/app/components/utils/mat-profiles-picker-render/mat-profiles-picker-render.component.ts:149\n                \n            \n\n\n            \n                \n                    Este metodo se usa para verificar si se ha presionado una tecla\n\n\n                    \n                        Parámetros :\n                        \n                            \n                                \n                                    Nombre\n                                    Opcional\n                                    Descripción\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Objeto de tipo evento\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                        Ejemplo :\n                        \n                            onKeyDown(event)\n                        \n                    \n                    \n                        Devuelve :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            preventDefaultAndPropagation\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    preventDefaultAndPropagation(event)\n                \n            \n\n\n            \n                \n                    Definido en src/app/components/utils/mat-profiles-picker-render/mat-profiles-picker-render.component.ts:187\n                \n            \n\n\n            \n                \n                    Este metodo se usa para evitar propagacion completa y cerradco de modal involuntario\n\n\n                    \n                        Parámetros :\n                        \n                            \n                                \n                                    Nombre\n                                    Opcional\n                                    Descripción\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Objeto de tipo evento\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                        Ejemplo :\n                        \n                            preventDefaultAndPropagation(event)\n                        \n                    \n                    \n                        Devuelve :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Propiedades\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dias\n                            \n                        \n                    \n                \n                        \n                            \n                                    Definido en src/app/components/utils/mat-profiles-picker-render/mat-profiles-picker-render.component.ts:50\n                            \n                        \n\n                \n                    \n                        Variable para guardar seleccion\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            focusedInput\n                            \n                        \n                    \n                \n                    \n                        \n                            Tipo :         number\n\n                        \n                    \n                    \n                        \n                            Valor por defecto : 0\n                        \n                    \n                        \n                            \n                                    Definido en src/app/components/utils/mat-profiles-picker-render/mat-profiles-picker-render.component.ts:65\n                            \n                        \n\n                \n                    \n                        Variable para detectar si existe focus sobre el componente\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            input\n                            \n                        \n                    \n                \n                    \n                        \n                            Tipo :         ViewContainerRef\n\n                        \n                    \n                    \n                        \n                            Decoradores : \n                            \n                            \n                                @ViewChildren('input', {read: ViewContainerRef})\n                            \n                        \n                    \n                        \n                            \n                                    Definido en src/app/components/utils/mat-profiles-picker-render/mat-profiles-picker-render.component.ts:55\n                            \n                        \n\n                \n                    \n                        Variable para obtener la referencia de datos suministrados desde componente padre\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            inputs\n                            \n                        \n                    \n                \n                    \n                        \n                            Tipo :     QueryList\n\n                        \n                    \n                        \n                            \n                                    Definido en src/app/components/utils/mat-profiles-picker-render/mat-profiles-picker-render.component.ts:60\n                            \n                        \n\n                \n                    \n                        Variable para guardar entradas procesadas desde componente padre\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            params\n                            \n                        \n                    \n                \n                    \n                        \n                            Tipo :         any\n\n                        \n                    \n                        \n                            \n                                    Definido en src/app/components/utils/mat-profiles-picker-render/mat-profiles-picker-render.component.ts:45\n                            \n                        \n\n                \n                    \n                        Variable para guardar parametros\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            profiles\n                            \n                        \n                    \n                \n                    \n                        \n                            Tipo :     []\n\n                        \n                    \n                    \n                        \n                            Valor por defecto : []\n                        \n                    \n                        \n                            \n                                    Definido en src/app/components/utils/mat-profiles-picker-render/mat-profiles-picker-render.component.ts:70\n                            \n                        \n\n                \n                    \n                        Variable para guardar perfiles\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import {\n  Component,\n  QueryList,\n  ViewChildren,\n  ViewContainerRef\n} from \"@angular/core\";\nimport { ICellEditorAngularComp } from \"ag-grid-angular\";\nimport * as moment from \"moment\";\n\n\n/**\n * Util de perfiles\n * Este componente es un picker renderizado para asignar el perfil de un usuario\n */\n@Component({\n  selector: \"input-cell\",\n  template: `\n    \n      \n      Perfiles\n      \n        {{profile.p_prof_name}}\n      \n    \n  `,\n  styles: [\n    `\n      .container {\n        width: 350px;\n        height: 250px;\n      }\n    `\n  ]\n})\n\n\n\n\nexport class MatProfilesPickerRenderComponent implements ICellEditorAngularComp {\n  /**\n     * Variable para guardar parametros\n     * @type Array\n     */\n    private params: any;\n    /**\n     * Variable para guardar seleccion\n     * @type Array\n     */\n    dias;\n    /**\n     * Variable para obtener la referencia de datos suministrados desde componente padre\n     * @type ViewContainerRef\n     */\n    @ViewChildren(\"input\", { read: ViewContainerRef })  public input: ViewContainerRef;\n    /**\n     * Variable para guardar entradas procesadas desde componente padre\n     * @type QueryList\n     */\n    public inputs: QueryList;\n    /**\n     * Variable para detectar si existe focus sobre el componente\n     * @type number\n     */\n    private focusedInput: number = 0;\n    /**\n     * Variable para guardar perfiles\n     * @type Array\n     */\n    profiles=[];\n  \n\n    /**\n    * Este metodo se usa cuando se inicia el componente\n    * @example\n    * agInit(params: any)\n    * @param {Object} params\n    * Objeto de tipo params obtenido desde componente padre\n    * @returns  {Void} Vacio\n    */\n    agInit(params: any): void {\n      console.log(\"INICIO\")\n      this.dias = params.data.prof_name\n      this.params = params\n      this.profiles = this.params.profiles().data\n      console.log(this.profiles)\n      console.log(params)\n      console.log(this.input)\n    }\n  \n    /**\n    * Este metodo se usa cuando se inicia el componente\n    * @example\n    * agInit(params: any)\n    * @param {Object} params\n    * Objeto de tipo params obtenido desde componente padre\n    * @returns  {Void} Vacio\n    */\n    // dont use afterGuiAttached for post gui events - hook into ngAfterViewInit instead for this\n    ngAfterViewInit() {\n      //this.focusOnInputNextTick(this.inputs.first);\n    }\n    /**\n    * Este metodo se usa para obtener los focus sobre el modal\n    * @example\n    * focusOnInputNextTick(input)\n    * @param {ViewContainerRef} input\n    * Objeto de tipo ViewContainerRef\n    * @returns  {Void} Vacio\n    */\n  \n    private focusOnInputNextTick(input: ViewContainerRef) {\n      window.setTimeout(() => {\n        input.element.nativeElement.focus();\n      }, 0);\n    }\n    /**\n    * Este metodo se usa para obtener el valor final\n    * @example\n    * getValue()\n    * @returns  {String} Valor seleccionado\n    */\n    getValue() {\n      console.log(\"AQUI\")\n      console.log(this.dias)\n\n      return this.dias;\n     \n      \n    }\n    /**\n    * Este metodo se usa para verificar popUp\n    * @example\n    * isPopup()\n    * @returns  {Bool} \n    */\n    isPopup(): boolean {\n      return true;\n    }\n  \n    /**\n    * Este metodo se usa para verificar si se ha presionado una tecla\n    * @example\n    * onKeyDown(event)\n    * @param {ViewContainerRef} event\n    * Objeto de tipo evento\n    * @returns  {Bool} \n    */\n    onKeyDown(event): void {\n      let key = event.which || event.keyCode;\n      if (key == 9) {\n        // tab\n        this.preventDefaultAndPropagation(event);\n  \n        // either move one input along, or cycle back to 0\n        this.focusedInput =\n          this.focusedInput === this.inputs.length - 1\n            ? 0\n            : this.focusedInput + 1;\n  \n        let focusedInput = this.focusedInput;\n        let inputToFocusOn = this.inputs.find((item: any, index: number) => {\n          return index === focusedInput;\n        });\n  \n        this.focusOnInputNextTick(inputToFocusOn);\n      } else if (key == 13) {\n        // enter\n        // perform some validation on enter - in this example we assume all inputs are mandatory\n        // in a proper application you'd probably want to inform the user that an input is blank\n        this.inputs.forEach(input => {\n          if (!input.element.nativeElement.value) {\n            this.preventDefaultAndPropagation(event);\n            this.focusOnInputNextTick(input);\n          }\n        });\n      }\n    }\n     /**\n    * Este metodo se usa para evitar propagacion completa y cerradco de modal involuntario\n    * @example\n    * preventDefaultAndPropagation(event)\n    * @param {ViewContainerRef} event\n    * Objeto de tipo evento\n    * @returns  {Bool} \n    */\n    private preventDefaultAndPropagation(event) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n}\n\n\n    \n\n\n    \n            \n      .container {\n        width: 350px;\n        height: 250px;\n      }\n    \n\n    \n\n    \n        \n        \n            \n                Leyenda\n            \n            \n                Elemento Html\n            \n            \n                Componente\n            \n            \n                Elemento Html con directiva\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Perfiles      {{profile.p_prof_name}}  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BathroomsComponent', 'selector': 'app-bathrooms'},{'name': 'CommercialComponent', 'selector': 'app-commercial'},{'name': 'InitialViewComponent', 'selector': 'app-initial-view'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MatApprovedPickerRenderComponent', 'selector': 'input-cell'},{'name': 'MatContractPickerRenderComponent', 'selector': 'input-cell'},{'name': 'MatModulesPickerRenderComponent', 'selector': 'input-cell'},{'name': 'MatPermissionsPickerRenderComponent', 'selector': 'input-cell'},{'name': 'MatProfilesPickerRenderComponent', 'selector': 'input-cell'},{'name': 'MatServicesPickerRenderComponent', 'selector': 'input-cell'},{'name': 'MatStatusPickerRenderComponent', 'selector': 'input-cell'},{'name': 'ServicesComponent', 'selector': 'app-services'},{'name': 'UsersComponent', 'selector': 'app-users'},{'name': 'WastesComponent', 'selector': 'app-wastes'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MatProfilesPickerRenderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"components/MatServicesPickerRenderComponent.html":{"url":"components/MatServicesPickerRenderComponent.html","title":"component - MatServicesPickerRenderComponent","body":"\n                   \n\n\n\n\n\n  Componentes\n  MatServicesPickerRenderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    Fichero\n\n\n    src/app/components/utils/mat-service-picker-render/mat-service-picker-render.component.ts\n\n\n    \n        Descripción\n    \n    \n        Util de estado\nEste componente es un picker renderizado para asignar el tipo de servicio de un servicio\n\n    \n\n\n    \n        Implementa\n    \n    \n                ICellEditorAngularComp\n    \n\n\n\n    Meta datos\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                input-cell\n            \n\n\n            \n                styles\n                \n      .container {\n        width: 350px;\n        height: 250px;\n      }\n    \n            \n\n            \n                template\n                \n  \n  Perfiles\n  \n    {{service.servName}}\n  \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Índice\n    \n        \n                \n                    \n                        Propiedades\n                    \n                \n                \n                    \n                        \n                            \n                                dias\n                            \n                            \n                                    Private\n                                focusedInput\n                            \n                            \n                                    Public\n                                input\n                            \n                            \n                                    Public\n                                inputs\n                            \n                            \n                                    Private\n                                params\n                            \n                            \n                                permissions\n                            \n                            \n                                services\n                            \n                            \n                                statuses\n                            \n                        \n                    \n                \n\n                \n                    \n                        Métodos\n                    \n                \n                \n                    \n                        \n                            \n                                agInit\n                            \n                            \n                                    Private\n                                focusOnInputNextTick\n                            \n                            \n                                getValue\n                            \n                            \n                                isPopup\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                onKeyDown\n                            \n                            \n                                    Private\n                                preventDefaultAndPropagation\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Métodos\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            agInit\n                        \n                        \n                    \n                \n            \n            \n                \nagInit(params: any)\n                \n            \n\n\n            \n                \n                    Definido en src/app/components/utils/mat-service-picker-render/mat-service-picker-render.component.ts:90\n                \n            \n\n\n            \n                \n                    Este metodo se usa cuando se inicia el componente\n\n\n                    \n                        Parámetros :\n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                    Descripción\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Objeto de tipo params obtenido desde componente padre\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                        Ejemplo :\n                        \n                            agInit(params: any)\n                        \n                    \n                    \n                        Devuelve :         void\n\n                    \n                    \n                        Vacio\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            focusOnInputNextTick\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    focusOnInputNextTick(input: ViewContainerRef)\n                \n            \n\n\n            \n                \n                    Definido en src/app/components/utils/mat-service-picker-render/mat-service-picker-render.component.ts:120\n                \n            \n\n\n            \n                \n                    Este metodo se usa para obtener los focus sobre el modal\n\n\n                    \n                        Parámetros :\n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                    Descripción\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                                ViewContainerRef\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Objeto de tipo ViewContainerRef\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                        Ejemplo :\n                        \n                            focusOnInputNextTick(input)\n                        \n                    \n                    \n                        Devuelve :         void\n\n                    \n                    \n                        Vacio\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getValue\n                        \n                        \n                    \n                \n            \n            \n                \ngetValue()\n                \n            \n\n\n            \n                \n                    Definido en src/app/components/utils/mat-service-picker-render/mat-service-picker-render.component.ts:133\n                \n            \n\n\n            \n                \n                    Este metodo se usa para obtener el valor final\n\n\n                    \n                        Ejemplo :\n                        \n                            getValue()\n                        \n                    \n                    \n                        Devuelve :         any\n\n                    \n                    \n                        Valor seleccionado\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isPopup\n                        \n                        \n                    \n                \n            \n            \n                \nisPopup()\n                \n            \n\n\n            \n                \n                    Definido en src/app/components/utils/mat-service-picker-render/mat-service-picker-render.component.ts:147\n                \n            \n\n\n            \n                \n                    Este metodo se usa para verificar popUp\n\n\n                    \n                        Ejemplo :\n                        \n                            isPopup()\n                        \n                    \n                    \n                        Devuelve :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Definido en src/app/components/utils/mat-service-picker-render/mat-service-picker-render.component.ts:107\n                \n            \n\n\n            \n                \n                    Este metodo se usa cuando se inicia el componente\n\n\n                    \n                        Ejemplo :\n                        \n                            agInit(params: any)\n                        \n                    \n                    \n                        Devuelve :         void\n\n                    \n                    \n                        Vacio\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onKeyDown\n                        \n                        \n                    \n                \n            \n            \n                \nonKeyDown(event)\n                \n            \n\n\n            \n                \n                    Definido en src/app/components/utils/mat-service-picker-render/mat-service-picker-render.component.ts:160\n                \n            \n\n\n            \n                \n                    Este metodo se usa para verificar si se ha presionado una tecla\n\n\n                    \n                        Parámetros :\n                        \n                            \n                                \n                                    Nombre\n                                    Opcional\n                                    Descripción\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Objeto de tipo evento\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                        Ejemplo :\n                        \n                            onKeyDown(event)\n                        \n                    \n                    \n                        Devuelve :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            preventDefaultAndPropagation\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    preventDefaultAndPropagation(event)\n                \n            \n\n\n            \n                \n                    Definido en src/app/components/utils/mat-service-picker-render/mat-service-picker-render.component.ts:199\n                \n            \n\n\n            \n                \n                    Este metodo se usa para evitar propagacion completa y cerradco de modal involuntario\n\n\n                    \n                        Parámetros :\n                        \n                            \n                                \n                                    Nombre\n                                    Opcional\n                                    Descripción\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Objeto de tipo evento\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                        Ejemplo :\n                        \n                            preventDefaultAndPropagation(event)\n                        \n                    \n                    \n                        Devuelve :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Propiedades\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dias\n                            \n                        \n                    \n                \n                        \n                            \n                                    Definido en src/app/components/utils/mat-service-picker-render/mat-service-picker-render.component.ts:54\n                            \n                        \n\n                \n                    \n                        Variable para guardar seleccion\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            focusedInput\n                            \n                        \n                    \n                \n                    \n                        \n                            Tipo :         number\n\n                        \n                    \n                    \n                        \n                            Valor por defecto : 0\n                        \n                    \n                        \n                            \n                                    Definido en src/app/components/utils/mat-service-picker-render/mat-service-picker-render.component.ts:69\n                            \n                        \n\n                \n                    \n                        Variable para detectar si existe focus sobre el componente\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            input\n                            \n                        \n                    \n                \n                    \n                        \n                            Tipo :         ViewContainerRef\n\n                        \n                    \n                    \n                        \n                            Decoradores : \n                            \n                            \n                                @ViewChildren('input', {read: ViewContainerRef})\n                            \n                        \n                    \n                        \n                            \n                                    Definido en src/app/components/utils/mat-service-picker-render/mat-service-picker-render.component.ts:59\n                            \n                        \n\n                \n                    \n                        Variable para obtener la referencia de datos suministrados desde componente padre\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            inputs\n                            \n                        \n                    \n                \n                    \n                        \n                            Tipo :     QueryList\n\n                        \n                    \n                        \n                            \n                                    Definido en src/app/components/utils/mat-service-picker-render/mat-service-picker-render.component.ts:64\n                            \n                        \n\n                \n                    \n                        Variable para guardar entradas procesadas desde componente padre\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            params\n                            \n                        \n                    \n                \n                    \n                        \n                            Tipo :         any\n\n                        \n                    \n                        \n                            \n                                    Definido en src/app/components/utils/mat-service-picker-render/mat-service-picker-render.component.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            permissions\n                            \n                        \n                    \n                \n                    \n                        \n                            Tipo :     []\n\n                        \n                    \n                    \n                        \n                            Valor por defecto : []\n                        \n                    \n                        \n                            \n                                    Definido en src/app/components/utils/mat-service-picker-render/mat-service-picker-render.component.ts:74\n                            \n                        \n\n                \n                    \n                        Variable para guardar permisos\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            services\n                            \n                        \n                    \n                \n                    \n                        \n                            Tipo :         any\n\n                        \n                    \n                        \n                            \n                                    Definido en src/app/components/utils/mat-service-picker-render/mat-service-picker-render.component.ts:79\n                            \n                        \n\n                \n                    \n                        Variable para guardar tipos de servicios\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            statuses\n                            \n                        \n                    \n                \n                    \n                        \n                            Tipo :     []\n\n                        \n                    \n                    \n                        \n                            Valor por defecto : [\"ACTIVO\",\"INACTIVO\"]\n                        \n                    \n                        \n                            \n                                    Definido en src/app/components/utils/mat-service-picker-render/mat-service-picker-render.component.ts:49\n                            \n                        \n\n                \n                    \n                        Variable para guardar estados\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import {\n  Component,\n  QueryList,\n  ViewChildren,\n  ViewContainerRef\n} from \"@angular/core\";\nimport { ICellEditorAngularComp } from \"ag-grid-angular\";\nimport * as moment from \"moment\";\n\n\n\n\n/**\n * Util de estado\n * Este componente es un picker renderizado para asignar el tipo de servicio de un servicio\n */\n@Component({\n  selector: \"input-cell\",\n  template: `\n    \n      \n      Perfiles\n      \n        {{service.servName}}\n      \n    \n  `,\n  styles: [\n    `\n      .container {\n        width: 350px;\n        height: 250px;\n      }\n    `\n  ]\n})\n\n\n\n\nexport class MatServicesPickerRenderComponent implements ICellEditorAngularComp {\n  private params: any;\n   \n    /**\n     * Variable para guardar estados\n     * @type Array\n     */\n    statuses = [\"ACTIVO\",\"INACTIVO\"]\n    /**\n     * Variable para guardar seleccion\n     * @type Array\n     */\n    dias;\n    /**\n     * Variable para obtener la referencia de datos suministrados desde componente padre\n     * @type ViewContainerRef\n     */\n    @ViewChildren(\"input\", { read: ViewContainerRef })  public input: ViewContainerRef;\n    /**\n     * Variable para guardar entradas procesadas desde componente padre\n     * @type QueryList\n     */\n    public inputs: QueryList;\n    /**\n     * Variable para detectar si existe focus sobre el componente\n     * @type number\n     */\n    private focusedInput: number = 0;\n    /**\n     * Variable para guardar permisos\n     * @type Array\n     */\n    permissions=[];\n    /**\n     * Variable para guardar tipos de servicios\n     * @type Array\n     */\n  services: any;\n\n    /**\n    * Este metodo se usa cuando se inicia el componente\n    * @example\n    * agInit(params: any)\n    * @param {Object} params\n    * Objeto de tipo params obtenido desde componente padre\n    * @returns  {Void} Vacio\n    */\n  \n    agInit(params: any): void {\n      \n      this.services = params.services()\n      console.log(this.services)\n      \n      \n    }\n  \n    /**\n    * Este metodo se usa cuando se inicia el componente\n    * @example\n    * agInit(params: any)\n    * @param {Object} params\n    * Objeto de tipo params obtenido desde componente padre\n    * @returns  {Void} Vacio\n    */\n    // dont use afterGuiAttached for post gui events - hook into ngAfterViewInit instead for this\n    ngAfterViewInit() {\n      //this.focusOnInputNextTick(this.inputs.first);\n    }\n\n    /**\n    * Este metodo se usa para obtener los focus sobre el modal\n    * @example\n    * focusOnInputNextTick(input)\n    * @param {ViewContainerRef} input\n    * Objeto de tipo ViewContainerRef\n    * @returns  {Void} Vacio\n    */\n  \n    private focusOnInputNextTick(input: ViewContainerRef) {\n      window.setTimeout(() => {\n        input.element.nativeElement.focus();\n      }, 0);\n    }\n\n    /**\n    * Este metodo se usa para obtener el valor final\n    * @example\n    * getValue()\n    * @returns  {String} Valor seleccionado\n    */\n  \n    getValue() {\n      \n      console.log(this.dias)\n      return this.dias;\n     \n      \n    }\n  \n    /**\n    * Este metodo se usa para verificar popUp\n    * @example\n    * isPopup()\n    * @returns  {Bool} \n    */\n    isPopup(): boolean {\n      return true;\n    }\n\n    /**\n    * Este metodo se usa para verificar si se ha presionado una tecla\n    * @example\n    * onKeyDown(event)\n    * @param {ViewContainerRef} event\n    * Objeto de tipo evento\n    * @returns  {Bool} \n    */\n\n    onKeyDown(event): void {\n      let key = event.which || event.keyCode;\n      if (key == 9) {\n        // tab\n        this.preventDefaultAndPropagation(event);\n  \n        // either move one input along, or cycle back to 0\n        this.focusedInput =\n          this.focusedInput === this.inputs.length - 1\n            ? 0\n            : this.focusedInput + 1;\n  \n        let focusedInput = this.focusedInput;\n        let inputToFocusOn = this.inputs.find((item: any, index: number) => {\n          return index === focusedInput;\n        });\n  \n        this.focusOnInputNextTick(inputToFocusOn);\n      } else if (key == 13) {\n        // enter\n        // perform some validation on enter - in this example we assume all inputs are mandatory\n        // in a proper application you'd probably want to inform the user that an input is blank\n        this.inputs.forEach(input => {\n          if (!input.element.nativeElement.value) {\n            this.preventDefaultAndPropagation(event);\n            this.focusOnInputNextTick(input);\n          }\n        });\n      }\n    }\n  \n     /**\n    * Este metodo se usa para evitar propagacion completa y cerradco de modal involuntario\n    * @example\n    * preventDefaultAndPropagation(event)\n    * @param {ViewContainerRef} event\n    * Objeto de tipo evento\n    * @returns  {Bool} \n    */\n    private preventDefaultAndPropagation(event) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n}\n\n\n    \n\n\n    \n            \n      .container {\n        width: 350px;\n        height: 250px;\n      }\n    \n\n    \n\n    \n        \n        \n            \n                Leyenda\n            \n            \n                Elemento Html\n            \n            \n                Componente\n            \n            \n                Elemento Html con directiva\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Perfiles      {{service.servName}}  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BathroomsComponent', 'selector': 'app-bathrooms'},{'name': 'CommercialComponent', 'selector': 'app-commercial'},{'name': 'InitialViewComponent', 'selector': 'app-initial-view'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MatApprovedPickerRenderComponent', 'selector': 'input-cell'},{'name': 'MatContractPickerRenderComponent', 'selector': 'input-cell'},{'name': 'MatModulesPickerRenderComponent', 'selector': 'input-cell'},{'name': 'MatPermissionsPickerRenderComponent', 'selector': 'input-cell'},{'name': 'MatProfilesPickerRenderComponent', 'selector': 'input-cell'},{'name': 'MatServicesPickerRenderComponent', 'selector': 'input-cell'},{'name': 'MatStatusPickerRenderComponent', 'selector': 'input-cell'},{'name': 'ServicesComponent', 'selector': 'app-services'},{'name': 'UsersComponent', 'selector': 'app-users'},{'name': 'WastesComponent', 'selector': 'app-wastes'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MatServicesPickerRenderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"components/MatStatusPickerRenderComponent.html":{"url":"components/MatStatusPickerRenderComponent.html","title":"component - MatStatusPickerRenderComponent","body":"\n                   \n\n\n\n\n\n  Componentes\n  MatStatusPickerRenderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    Fichero\n\n\n    src/app/components/utils/mat-status-picker-render/mat-status-picker-render.component.ts\n\n\n    \n        Descripción\n    \n    \n        Util de estado\nEste componente es un picker renderizado para asignar el estado a un servicio\n\n    \n\n\n    \n        Implementa\n    \n    \n                ICellEditorAngularComp\n    \n\n\n\n    Meta datos\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                input-cell\n            \n\n\n            \n                styles\n                \n      .container {\n        width: 350px;\n        height: 250px;\n      }\n    \n            \n\n            \n                template\n                \n  \n  Perfiles\n  \n    {{status}}\n  \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Índice\n    \n        \n                \n                    \n                        Propiedades\n                    \n                \n                \n                    \n                        \n                            \n                                dias\n                            \n                            \n                                    Private\n                                focusedInput\n                            \n                            \n                                    Public\n                                input\n                            \n                            \n                                    Public\n                                inputs\n                            \n                            \n                                    Private\n                                params\n                            \n                            \n                                permissions\n                            \n                            \n                                statuses\n                            \n                        \n                    \n                \n\n                \n                    \n                        Métodos\n                    \n                \n                \n                    \n                        \n                            \n                                agInit\n                            \n                            \n                                    Private\n                                focusOnInputNextTick\n                            \n                            \n                                getValue\n                            \n                            \n                                isPopup\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                onKeyDown\n                            \n                            \n                                    Private\n                                preventDefaultAndPropagation\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Métodos\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            agInit\n                        \n                        \n                    \n                \n            \n            \n                \nagInit(params: any)\n                \n            \n\n\n            \n                \n                    Definido en src/app/components/utils/mat-status-picker-render/mat-status-picker-render.component.ts:87\n                \n            \n\n\n            \n                \n                    Este metodo se usa cuando se inicia el componente\n\n\n                    \n                        Parámetros :\n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                    Descripción\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Objeto de tipo params obtenido desde componente padre\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                        Ejemplo :\n                        \n                            agInit(params: any)\n                        \n                    \n                    \n                        Devuelve :         void\n\n                    \n                    \n                        Vacio\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            focusOnInputNextTick\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    focusOnInputNextTick(input: ViewContainerRef)\n                \n            \n\n\n            \n                \n                    Definido en src/app/components/utils/mat-status-picker-render/mat-status-picker-render.component.ts:124\n                \n            \n\n\n            \n                \n                    Este metodo se usa para obtener los focus sobre el modal\n\n\n                    \n                        Parámetros :\n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                    Descripción\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                                ViewContainerRef\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Objeto de tipo ViewContainerRef\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                        Ejemplo :\n                        \n                            focusOnInputNextTick(input)\n                        \n                    \n                    \n                        Devuelve :         void\n\n                    \n                    \n                        Vacio\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getValue\n                        \n                        \n                    \n                \n            \n            \n                \ngetValue()\n                \n            \n\n\n            \n                \n                    Definido en src/app/components/utils/mat-status-picker-render/mat-status-picker-render.component.ts:137\n                \n            \n\n\n            \n                \n                    Este metodo se usa para obtener el valor final\n\n\n                    \n                        Ejemplo :\n                        \n                            getValue()\n                        \n                    \n                    \n                        Devuelve :         any\n\n                    \n                    \n                        Valor seleccionado\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isPopup\n                        \n                        \n                    \n                \n            \n            \n                \nisPopup()\n                \n            \n\n\n            \n                \n                    Definido en src/app/components/utils/mat-status-picker-render/mat-status-picker-render.component.ts:152\n                \n            \n\n\n            \n                \n                    Este metodo se usa para verificar popUp\n\n\n                    \n                        Ejemplo :\n                        \n                            isPopup()\n                        \n                    \n                    \n                        Devuelve :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Definido en src/app/components/utils/mat-status-picker-render/mat-status-picker-render.component.ts:111\n                \n            \n\n\n            \n                \n                    Este metodo se usa cuando se inicia el componente\n\n\n                    \n                        Ejemplo :\n                        \n                            ngAfterViewInit(params: any)\n                        \n                    \n                    \n                        Devuelve :         void\n\n                    \n                    \n                        Vacio\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onKeyDown\n                        \n                        \n                    \n                \n            \n            \n                \nonKeyDown(event)\n                \n            \n\n\n            \n                \n                    Definido en src/app/components/utils/mat-status-picker-render/mat-status-picker-render.component.ts:164\n                \n            \n\n\n            \n                \n                    Este metodo se usa para verificar si se ha presionado una tecla\n\n\n                    \n                        Parámetros :\n                        \n                            \n                                \n                                    Nombre\n                                    Opcional\n                                    Descripción\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Objeto de tipo evento\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                        Ejemplo :\n                        \n                            onKeyDown(event)\n                        \n                    \n                    \n                        Devuelve :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            preventDefaultAndPropagation\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    preventDefaultAndPropagation(event)\n                \n            \n\n\n            \n                \n                    Definido en src/app/components/utils/mat-status-picker-render/mat-status-picker-render.component.ts:203\n                \n            \n\n\n            \n                \n                    Este metodo se usa para evitar propagacion completa y cerradco de modal involuntario\n\n\n                    \n                        Parámetros :\n                        \n                            \n                                \n                                    Nombre\n                                    Opcional\n                                    Descripción\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Objeto de tipo evento\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                        Ejemplo :\n                        \n                            preventDefaultAndPropagation(event)\n                        \n                    \n                    \n                        Devuelve :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Propiedades\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dias\n                            \n                        \n                    \n                \n                        \n                            \n                                    Definido en src/app/components/utils/mat-status-picker-render/mat-status-picker-render.component.ts:54\n                            \n                        \n\n                \n                    \n                        Variable para seleccion hecha por el usuario\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            focusedInput\n                            \n                        \n                    \n                \n                    \n                        \n                            Tipo :         number\n\n                        \n                    \n                    \n                        \n                            Valor por defecto : 0\n                        \n                    \n                        \n                            \n                                    Definido en src/app/components/utils/mat-status-picker-render/mat-status-picker-render.component.ts:71\n                            \n                        \n\n                \n                    \n                        Variable para detectar si existe focus sobre el componente\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            input\n                            \n                        \n                    \n                \n                    \n                        \n                            Tipo :         ViewContainerRef\n\n                        \n                    \n                    \n                        \n                            Decoradores : \n                            \n                            \n                                @ViewChildren('input', {read: ViewContainerRef})\n                            \n                        \n                    \n                        \n                            \n                                    Definido en src/app/components/utils/mat-status-picker-render/mat-status-picker-render.component.ts:61\n                            \n                        \n\n                \n                    \n                        Variable para obtener la referencia de datos suministrados desde componente padre\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            inputs\n                            \n                        \n                    \n                \n                    \n                        \n                            Tipo :     QueryList\n\n                        \n                    \n                        \n                            \n                                    Definido en src/app/components/utils/mat-status-picker-render/mat-status-picker-render.component.ts:66\n                            \n                        \n\n                \n                    \n                        Variable para guardar entradas procesadas desde componente padre\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            params\n                            \n                        \n                    \n                \n                    \n                        \n                            Tipo :         any\n\n                        \n                    \n                        \n                            \n                                    Definido en src/app/components/utils/mat-status-picker-render/mat-status-picker-render.component.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            permissions\n                            \n                        \n                    \n                \n                    \n                        \n                            Tipo :     []\n\n                        \n                    \n                    \n                        \n                            Valor por defecto : []\n                        \n                    \n                        \n                            \n                                    Definido en src/app/components/utils/mat-status-picker-render/mat-status-picker-render.component.ts:76\n                            \n                        \n\n                \n                    \n                        Variable para guardar permisos\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            statuses\n                            \n                        \n                    \n                \n                    \n                        \n                            Tipo :     []\n\n                        \n                    \n                    \n                        \n                            Valor por defecto : [\"ACTIVO\",\"INACTIVO\"]\n                        \n                    \n                        \n                            \n                                    Definido en src/app/components/utils/mat-status-picker-render/mat-status-picker-render.component.ts:49\n                            \n                        \n\n                \n                    \n                        Variable para guardar estados\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import {\n  Component,\n  QueryList,\n  ViewChildren,\n  ViewContainerRef\n} from \"@angular/core\";\nimport { ICellEditorAngularComp } from \"ag-grid-angular\";\nimport * as moment from \"moment\";\n\n\n\n/**\n * Util de estado\n * Este componente es un picker renderizado para asignar el estado a un servicio\n */\n\n@Component({\n  selector: \"input-cell\",\n  template: `\n    \n      \n      Perfiles\n      \n        {{status}}\n      \n    \n  `,\n  styles: [\n    `\n      .container {\n        width: 350px;\n        height: 250px;\n      }\n    `\n  ]\n})\n\n\n\n\nexport class MatStatusPickerRenderComponent implements ICellEditorAngularComp {\n  private params: any;\n   \n    /**\n     * Variable para guardar estados\n     * @type Array\n     */\n    statuses = [\"ACTIVO\",\"INACTIVO\"]\n    /**\n     * Variable para seleccion hecha por el usuario\n     * @type String\n     */\n    dias;\n    \n\n    /**\n     * Variable para obtener la referencia de datos suministrados desde componente padre\n     * @type ViewContainerRef\n     */\n    @ViewChildren(\"input\", { read: ViewContainerRef })  public input: ViewContainerRef;\n    /**\n     * Variable para guardar entradas procesadas desde componente padre\n     * @type QueryList\n     */\n    public inputs: QueryList;\n    /**\n     * Variable para detectar si existe focus sobre el componente\n     * @type number\n     */\n    private focusedInput: number = 0;\n    /**\n     * Variable para guardar permisos\n     * @type Array\n     */\n    permissions=[];\n\n    /**\n    * Este metodo se usa cuando se inicia el componente\n    * @example\n    * agInit(params: any)\n    * @param {Object} params\n    * Objeto de tipo params obtenido desde componente padre\n    * @returns  {Void} Vacio\n    */\n  \n    agInit(params: any): void {\n      console.log(params)\n      if(params.data.p_prof_active){\n        this.dias = params.data.p_prof_active\n      }else if(params.data.userActive){\n        this.dias = params.data.userActive\n      }\n      \n      this.params = params\n      \n      \n    }\n  \n    /**\n    * Este metodo se usa cuando se inicia el componente\n    * @example\n    * ngAfterViewInit(params: any)\n    * @param {Object} params\n    * Objeto de tipo params obtenido desde componente padre\n    * @returns  {Void} Vacio\n    */\n  \n\n    \n    ngAfterViewInit() {\n      //this.focusOnInputNextTick(this.inputs.first);\n    }\n\n    /**\n    * Este metodo se usa para obtener los focus sobre el modal\n    * @example\n    * focusOnInputNextTick(input)\n    * @param {ViewContainerRef} input\n    * Objeto de tipo ViewContainerRef\n    * @returns  {Void} Vacio\n    */\n  \n    private focusOnInputNextTick(input: ViewContainerRef) {\n      window.setTimeout(() => {\n        input.element.nativeElement.focus();\n      }, 0);\n    }\n  \n    /**\n    * Este metodo se usa para obtener el valor final\n    * @example\n    * getValue()\n    * @returns  {String} Valor seleccionado\n    */\n\n    getValue() {\n      \n\n      return this.dias;\n     \n      \n    }\n  \n\n    /**\n    * Este metodo se usa para verificar popUp\n    * @example\n    * isPopup()\n    * @returns  {Bool} \n    */\n    isPopup(): boolean {\n      return true;\n    }\n  \n    /**\n    * Este metodo se usa para verificar si se ha presionado una tecla\n    * @example\n    * onKeyDown(event)\n    * @param {ViewContainerRef} event\n    * Objeto de tipo evento\n    * @returns  {Bool} \n    */\n    onKeyDown(event): void {\n      let key = event.which || event.keyCode;\n      if (key == 9) {\n        // tab\n        this.preventDefaultAndPropagation(event);\n  \n        // either move one input along, or cycle back to 0\n        this.focusedInput =\n          this.focusedInput === this.inputs.length - 1\n            ? 0\n            : this.focusedInput + 1;\n  \n        let focusedInput = this.focusedInput;\n        let inputToFocusOn = this.inputs.find((item: any, index: number) => {\n          return index === focusedInput;\n        });\n  \n        this.focusOnInputNextTick(inputToFocusOn);\n      } else if (key == 13) {\n        // enter\n        // perform some validation on enter - in this example we assume all inputs are mandatory\n        // in a proper application you'd probably want to inform the user that an input is blank\n        this.inputs.forEach(input => {\n          if (!input.element.nativeElement.value) {\n            this.preventDefaultAndPropagation(event);\n            this.focusOnInputNextTick(input);\n          }\n        });\n      }\n    }\n  \n     /**\n    * Este metodo se usa para evitar propagacion completa y cerradco de modal involuntario\n    * @example\n    * preventDefaultAndPropagation(event)\n    * @param {ViewContainerRef} event\n    * Objeto de tipo evento\n    * @returns  {Bool} \n    */\n    private preventDefaultAndPropagation(event) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n}\n\n\n    \n\n\n    \n            \n      .container {\n        width: 350px;\n        height: 250px;\n      }\n    \n\n    \n\n    \n        \n        \n            \n                Leyenda\n            \n            \n                Elemento Html\n            \n            \n                Componente\n            \n            \n                Elemento Html con directiva\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Perfiles      {{status}}  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BathroomsComponent', 'selector': 'app-bathrooms'},{'name': 'CommercialComponent', 'selector': 'app-commercial'},{'name': 'InitialViewComponent', 'selector': 'app-initial-view'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MatApprovedPickerRenderComponent', 'selector': 'input-cell'},{'name': 'MatContractPickerRenderComponent', 'selector': 'input-cell'},{'name': 'MatModulesPickerRenderComponent', 'selector': 'input-cell'},{'name': 'MatPermissionsPickerRenderComponent', 'selector': 'input-cell'},{'name': 'MatProfilesPickerRenderComponent', 'selector': 'input-cell'},{'name': 'MatServicesPickerRenderComponent', 'selector': 'input-cell'},{'name': 'MatStatusPickerRenderComponent', 'selector': 'input-cell'},{'name': 'ServicesComponent', 'selector': 'app-services'},{'name': 'UsersComponent', 'selector': 'app-users'},{'name': 'WastesComponent', 'selector': 'app-wastes'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MatStatusPickerRenderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"classes/PasswordErrorStateMatcher.html":{"url":"classes/PasswordErrorStateMatcher.html","title":"class - PasswordErrorStateMatcher","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Clases\n  PasswordErrorStateMatcher\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            Fichero\n        \n        \n            src/app/components/login/login.component.ts\n        \n\n            \n                Descripción\n            \n            \n                Clase errores campo Password\nEsta clase permite la captura de errores al ingresar los campos de Password\n\n            \n\n\n            \n                Implementa\n            \n            \n                        ErrorStateMatcher\n            \n\n\n            \n    Índice\n    \n        \n\n                \n                    \n                        Métodos\n                    \n                \n                \n                    \n                        \n                            \n                                isErrorState\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Métodos\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isErrorState\n                        \n                        \n                    \n                \n            \n            \n                \nisErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null)\n                \n            \n\n\n            \n                \n                    Definido en src/app/components/login/login.component.ts:45\n                \n            \n\n\n            \n                \n                    Este metodo captura errores en el formulario\n\n\n                    \n                        Parámetros :\n                        \n                            \n                                \n                                    Nombre\n                                    Tipo\n                                    Opcional\n                                    Descripción\n                                \n                            \n                            \n                                \n                                    control\n                                    \n                                            FormControl | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Objeto relacionado al control del formulario\n\n                                    \n                                \n                                \n                                    form\n                                    \n                                            FormGroupDirective | NgForm | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Objeto relacionado al formulario\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                        Ejemplo :\n                        \n                            isErrorState(control, form )\n                        \n                    \n                    \n                        Devuelve :         boolean\n\n                    \n                    \n                        Valor indicando si es valido o no\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport {FormControl, FormGroupDirective, NgForm, Validators} from '@angular/forms';\nimport {ErrorStateMatcher} from '@angular/material/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { LoginService } from 'src/app/services/login.service';\n\n\n/**\n * Clase errores campo email\n * Esta clase permite la captura de errores al ingresar los campos de email\n */\n\nexport class EmailErrorStateMatcher implements ErrorStateMatcher {\n  /**\n  * Este metodo captura errores en el formulario\n  * @example\n  * isErrorState(control, form )\n  * @param {FormControl | null} control\n  * Objeto relacionado al control del formulario\n  * @param {FormGroupDirective | NgForm | null} form\n  * Objeto relacionado al formulario\n  * @returns {Bool} Valor indicando si es valido o no\n  */\n  isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n    const isSubmitted = form && form.submitted;\n    return !!(control && control.invalid && (control.dirty || control.touched || isSubmitted));\n  }\n}\n\n/**\n * Clase errores campo Password\n * Esta clase permite la captura de errores al ingresar los campos de Password\n */\nexport class PasswordErrorStateMatcher implements ErrorStateMatcher {\n  /**\n  * Este metodo captura errores en el formulario\n  * @example\n  * isErrorState(control, form )\n  * @param {FormControl | null} control\n  * Objeto relacionado al control del formulario\n  * @param {FormGroupDirective | NgForm | null} form\n  * Objeto relacionado al formulario\n  * @returns {Bool} Valor indicando si es valido o no\n  */\n  isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n    const isSubmitted = form && form.submitted;\n    return !!(control && control.invalid && (control.dirty || control.touched || isSubmitted));\n  }\n}\n\n/**\n * Componente de login\n * Este componente es el encargado de mostrar y ejecutar todo lo relacionado al modulo de login\n */\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n  /**\n     * Variable para realizar emision de evento\n     * @type EventEmitter\n     */\n  @Output() loginChanged: EventEmitter = new EventEmitter()\n  /**\n     * Variable relacionada a formulario de email para control\n     * @type FormControl\n     */\n  emailFormControl = new FormControl('', [\n    Validators.required,\n    Validators.email,\n  ]);\n\n  /**\n     * Variable relacionada a formulario de password para control\n     * @type FormControl\n     */\n  passwordFormControl = new FormControl('', [\n    Validators.required\n  ]);\n\n\n  /**\n     * Variable que implementa clase capturadora de errores\n     * @type EmailErrorStateMatcher\n     */\n  emailMatcher = new EmailErrorStateMatcher();\n  /**\n     * Variable que implementa clase capturadora de errores\n     * @type PasswordErrorStateMatcher\n     */\n  passwordMatcher = new PasswordErrorStateMatcher();\n  /**\n  * Constructor\t\n  * @param {LoginService}\tloginService Servicio de servicios\n  * @param {MatSnackBar} _snackBar Referencia a popUp de alertas\n  */\n  constructor(\n    private loginService: LoginService,\n    private _snackBar: MatSnackBar\n  ) { }\n     /**\n  * Metodo inicial\n  * @example\n  * ngOnInit()\n  * @returns  {void} Sin retorno\n  */\n  ngOnInit(): void {\n  }\n  /**\n  * Este metodo se utiliza para realizar login en el sistema\n  * @example\n  * login()\n  * @returns {Void} Vacio\n  */\n  login(){\n    \n    if(this.emailFormControl.status == \"VALID\" && this.passwordFormControl.status == \"VALID\"){\n      this.loginService.loginUser(this.emailFormControl.value,this.passwordFormControl.value).subscribe( data =>{\n        \n        if(data[\"status\"]){\n          localStorage.setItem('user',JSON.stringify(data['data']));\n          this.loginChanged.emit({status:true});\n        }else{\n          this._snackBar.open(\"Creedenciales Incorrectas, Por favor corregir\", \"Ok\");\n        }\n      })\n    }\n    //\n  }\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"components/ServicesComponent.html":{"url":"components/ServicesComponent.html","title":"component - ServicesComponent","body":"\n                   \n\n\n\n\n\n  Componentes\n  ServicesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    Fichero\n\n\n    src/app/components/services/services.component.ts\n\n\n    \n        Descripción\n    \n    \n        Componente de servicios\nEste componente es el encargado de mostrar y ejecutar todo lo relacionado al modulo de servicios\n\n    \n\n\n    \n        Implementa\n    \n    \n                    OnInit\n    \n\n\n\n    Meta datos\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-services\n            \n\n            \n                styleUrls\n                ./services.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./services.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Índice\n    \n        \n                \n                    \n                        Propiedades\n                    \n                \n                \n                    \n                        \n                            \n                                contracts\n                            \n                            \n                                frameworkComponents\n                            \n                            \n                                gridApi\n                            \n                            \n                                gridColumnApi\n                            \n                            \n                                modules\n                            \n                            \n                                saveServiceButtonActive\n                            \n                            \n                                serviceRowData\n                            \n                            \n                                servicesColumnsDefs\n                            \n                        \n                    \n                \n\n                \n                    \n                        Métodos\n                    \n                \n                \n                    \n                        \n                            \n                                changeServiceGridEvent\n                            \n                            \n                                contractGetter\n                            \n                            \n                                contractGetterFormat\n                            \n                            \n                                createService\n                            \n                            \n                                getAllContracts\n                            \n                            \n                                getAllModules\n                            \n                            \n                                moduleGetter\n                            \n                            \n                                moduleGetterFormat\n                            \n                            \n                                    Async\n                                ngOnInit\n                            \n                            \n                                onGridReady\n                            \n                            \n                                saveServices\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(servicesService: ServicesService, _bottomSheet: MatBottomSheet)\n                    \n                \n                        \n                            \n                                Definido en src/app/components/services/services.component.ts:81\n                            \n                        \n\n                \n                    \n                            Constructor    \n\n                            \n                                    Parámetros :\n                                    \n                                        \n                                            \n                                                Nombre\n                                                    Tipo\n                                                Opcional\n                                                    Descripción\n                                            \n                                        \n                                        \n                                                \n                                                        servicesService\n                                                  \n                                                        \n                                                                        ServicesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio de servicios\n\n                                                        \n                                                \n                                                \n                                                        _bottomSheet\n                                                  \n                                                        \n                                                                    MatBottomSheet\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Referencia de modal\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Métodos\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            changeServiceGridEvent\n                        \n                        \n                    \n                \n            \n            \n                \nchangeServiceGridEvent(event)\n                \n            \n\n\n            \n                \n                    Definido en src/app/components/services/services.component.ts:117\n                \n            \n\n\n            \n                \n                    Este metodo se utiliza para capturar cambios en la tabla de servicios\n\n\n                    \n                        Parámetros :\n                        \n                            \n                                \n                                    Nombre\n                                    Opcional\n                                    Descripción\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Objeto de tipo evento\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                        Ejemplo :\n                        \n                            changeServiceGridEvent(event)\n                        \n                    \n                    \n                        Devuelve :         void\n\n                    \n                    \n                        Vacio\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            contractGetter\n                        \n                        \n                    \n                \n            \n            \n                \ncontractGetter()\n                \n            \n\n\n            \n                \n                    Definido en src/app/components/services/services.component.ts:202\n                \n            \n\n\n            \n                \n                    Este metodo se utiliza para obtener los Contratos en memoria\n\n\n                    \n                        Ejemplo :\n                        \n                            contractGetter()\n                        \n                    \n                    \n                        Devuelve :         any\n\n                    \n                    \n                        Contratos\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            contractGetterFormat\n                        \n                        \n                    \n                \n            \n            \n                \ncontractGetterFormat(event)\n                \n            \n\n\n            \n                \n                    Definido en src/app/components/services/services.component.ts:220\n                \n            \n\n\n            \n                \n                    Este metodo se utiliza para obtener los contratos para renderizar en tabla\n\n\n                    \n                        Parámetros :\n                        \n                            \n                                \n                                    Nombre\n                                    Opcional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                        Ejemplo :\n                        \n                            contractGetterFormat()\n                        \n                    \n                    \n                        Devuelve :         any\n\n                    \n                    \n                        Contrato\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createService\n                        \n                        \n                    \n                \n            \n            \n                \ncreateService()\n                \n            \n\n\n            \n                \n                    Definido en src/app/components/services/services.component.ts:151\n                \n            \n\n\n            \n                \n                    Este metodo se utiliza para crear servicios\n\n\n                    \n                        Ejemplo :\n                        \n                            createService()\n                        \n                    \n                    \n                        Devuelve :         void\n\n                    \n                    \n                        Void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getAllContracts\n                        \n                        \n                    \n                \n            \n            \n                \ngetAllContracts()\n                \n            \n\n\n            \n                \n                    Definido en src/app/components/services/services.component.ts:180\n                \n            \n\n\n            \n                \n                    Este metodo se utiliza para obtener los Contratos\n\n\n                    \n                        Ejemplo :\n                        \n                            getAllContracts()\n                        \n                    \n                    \n                        Devuelve :         any\n\n                    \n                    \n                        Contratos\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getAllModules\n                        \n                        \n                    \n                \n            \n            \n                \ngetAllModules()\n                \n            \n\n\n            \n                \n                    Definido en src/app/components/services/services.component.ts:191\n                \n            \n\n\n            \n                \n                    Este metodo se utiliza para obtener los Modulos\n\n\n                    \n                        Ejemplo :\n                        \n                            getAllModules()\n                        \n                    \n                    \n                        Devuelve :         any\n\n                    \n                    \n                        Modulos\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            moduleGetter\n                        \n                        \n                    \n                \n            \n            \n                \nmoduleGetter()\n                \n            \n\n\n            \n                \n                    Definido en src/app/components/services/services.component.ts:211\n                \n            \n\n\n            \n                \n                    Este metodo se utiliza para obtener los modulos en memoria\n\n\n                    \n                        Ejemplo :\n                        \n                            moduleGetter()\n                        \n                    \n                    \n                        Devuelve :         any\n\n                    \n                    \n                        Modulos\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            moduleGetterFormat\n                        \n                        \n                    \n                \n            \n            \n                \nmoduleGetterFormat(event)\n                \n            \n\n\n            \n                \n                    Definido en src/app/components/services/services.component.ts:230\n                \n            \n\n\n            \n                \n                    Este metodo se utiliza para obtener los modulos para renderizar en tabla\n\n\n                    \n                        Parámetros :\n                        \n                            \n                                \n                                    Nombre\n                                    Opcional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                        Ejemplo :\n                        \n                            moduleGetterFormat()\n                        \n                    \n                    \n                        Devuelve :         any\n\n                    \n                    \n                        Modulo\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Definido en src/app/components/services/services.component.ts:95\n                \n            \n\n\n            \n                \n                    Metodo inicial\n\n\n                    \n                        Ejemplo :\n                        \n                            ngOnInit()\n                        \n                    \n                    \n                        Devuelve :     Promise\n\n                    \n                    \n                        Sin retorno\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onGridReady\n                        \n                        \n                    \n                \n            \n            \n                \nonGridReady(params)\n                \n            \n\n\n            \n                \n                    Definido en src/app/components/services/services.component.ts:170\n                \n            \n\n\n            \n                \n                    Este metodo se utiliza para registrar referencias de las tablas\n\n\n                    \n                        Parámetros :\n                        \n                            \n                                \n                                    Nombre\n                                    Opcional\n                                    Descripción\n                                \n                            \n                            \n                                \n                                    params\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Objeto de tipo params obtenido desde el evento realizado por la accion sobre una tabla\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                        Ejemplo :\n                        \n                            onGridReady(params)\n                        \n                    \n                    \n                        Devuelve :         void\n\n                    \n                    \n                        Vacio\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            saveServices\n                        \n                        \n                    \n                \n            \n            \n                \nsaveServices()\n                \n            \n\n\n            \n                \n                    Definido en src/app/components/services/services.component.ts:131\n                \n            \n\n\n            \n                \n                    Este metodo se utiliza para Guardar servicios\n\n\n                    \n                        Ejemplo :\n                        \n                            saveServices()\n                        \n                    \n                    \n                        Devuelve :         void\n\n                    \n                    \n                        Servicios\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Propiedades\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            contracts\n                            \n                        \n                    \n                \n                        \n                            \n                                    Definido en src/app/components/services/services.component.ts:71\n                            \n                        \n\n                \n                    \n                        Variable para guardar contratos\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            frameworkComponents\n                            \n                        \n                    \n                \n                        \n                            \n                                    Definido en src/app/components/services/services.component.ts:81\n                            \n                        \n\n                \n                    \n                        Variable para guardar los entry-points que se usaran en tablas\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            gridApi\n                            \n                        \n                    \n                \n                    \n                        \n                            Tipo :         any\n\n                        \n                    \n                        \n                            \n                                    Definido en src/app/components/services/services.component.ts:24\n                            \n                        \n\n                \n                    \n                        Variable para guardar referencia de columna \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            gridColumnApi\n                            \n                        \n                    \n                \n                    \n                        \n                            Tipo :         any\n\n                        \n                    \n                        \n                            \n                                    Definido en src/app/components/services/services.component.ts:29\n                            \n                        \n\n                \n                    \n                        Variable para guardar referencia de columna\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            modules\n                            \n                        \n                    \n                \n                        \n                            \n                                    Definido en src/app/components/services/services.component.ts:76\n                            \n                        \n\n                \n                    \n                        Variable para guardar modulos\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            saveServiceButtonActive\n                            \n                        \n                    \n                \n                    \n                        \n                            Tipo :         boolean\n\n                        \n                    \n                        \n                            \n                                    Definido en src/app/components/services/services.component.ts:66\n                            \n                        \n\n                \n                    \n                        Variable para definir estado de boton para guardar\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            serviceRowData\n                            \n                        \n                    \n                \n                    \n                        \n                            Tipo :     []\n\n                        \n                    \n                    \n                        \n                            Valor por defecto : []\n                        \n                    \n                        \n                            \n                                    Definido en src/app/components/services/services.component.ts:61\n                            \n                        \n\n                \n                    \n                        Variable para definir datos de las tablas\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            servicesColumnsDefs\n                            \n                        \n                    \n                \n                    \n                        \n                            Tipo :     []\n\n                        \n                    \n                    \n                        \n                            Valor por defecto : [\n    {headerName: \"id\",\n    field: \"servTypeId\",\n    width: 100,\n    hide: true,\n    suppressToolPanel: true},\n\t\t{headerName: 'Servicio', field: 'servName',\n        editable: true,\n        width: 300, },\n    {headerName: 'precio',editable: true, field: 'servPrice'},\n\t\t{headerName: 'Contrato',editable: true, field: 'contId',cellEditorParams:{contracts: this.contractGetter.bind(this)},valueGetter:this.contractGetterFormat.bind(this), cellEditor: 'contractPicker'},\n    {headerName: 'modulo',editable: true, field: 'moduId',valueGetter:this.moduleGetterFormat.bind(this),cellEditor: 'modulesPicker',cellEditorParams:{modules: this.moduleGetter.bind(this)}},\n    {\n\t\t\theaderName: \"status\",\n\t\t\tfield: \"change_status\",\n\t\t\twidth: 100,\n\t\t\thide: true,\n\t\t\tsuppressToolPanel: true\n\t\t }\n\t\t\t\n\t]\n                        \n                    \n                        \n                            \n                                    Definido en src/app/components/services/services.component.ts:35\n                            \n                        \n\n                \n                    \n                        Variable para definir las columnas de los servicios\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { AddServiceModalComponent } from 'src/app/botoom-sheet/add-service-modal/add-service-modal.component';\nimport { ServicesService } from 'src/app/services/services.service';\nimport { MatContractPickerRenderComponent } from '../utils/mat-contract-picker-render/mat-contract-picker-render.component';\nimport { MatModulesPickerRenderComponent } from '../utils/mat-modules-picker-render/mat-service-modules-render.component';\n\n/**\n * Componente de servicios\n * Este componente es el encargado de mostrar y ejecutar todo lo relacionado al modulo de servicios\n */\n\n\n@Component({\n  selector: 'app-services',\n  templateUrl: './services.component.html',\n  styleUrls: ['./services.component.scss']\n})\nexport class ServicesComponent implements OnInit {\n  /**\n     * Variable para guardar referencia de columna \n     * @type Object\n     */\n  gridApi: any;\n  /**\n     * Variable para guardar referencia de columna\n     * @type Object\n     */\n  gridColumnApi: any;\n\n  /**\n     * Variable para definir las columnas de los servicios\n     * @type Objeto\n     */\n  servicesColumnsDefs = [\n    {headerName: \"id\",\n    field: \"servTypeId\",\n    width: 100,\n    hide: true,\n    suppressToolPanel: true},\n\t\t{headerName: 'Servicio', field: 'servName',\n        editable: true,\n        width: 300, },\n    {headerName: 'precio',editable: true, field: 'servPrice'},\n\t\t{headerName: 'Contrato',editable: true, field: 'contId',cellEditorParams:{contracts: this.contractGetter.bind(this)},valueGetter:this.contractGetterFormat.bind(this), cellEditor: 'contractPicker'},\n    {headerName: 'modulo',editable: true, field: 'moduId',valueGetter:this.moduleGetterFormat.bind(this),cellEditor: 'modulesPicker',cellEditorParams:{modules: this.moduleGetter.bind(this)}},\n    {\n\t\t\theaderName: \"status\",\n\t\t\tfield: \"change_status\",\n\t\t\twidth: 100,\n\t\t\thide: true,\n\t\t\tsuppressToolPanel: true\n\t\t }\n\t\t\t\n\t];\n\n  /**\n     * Variable para definir datos de las tablas\n     * @type Array\n     */\n  serviceRowData = []\n  /**\n     * Variable para definir estado de boton para guardar\n     * @type Bool\n     */\n  saveServiceButtonActive: boolean;\n  /**\n     * Variable para guardar contratos\n     * @type Array\n     */\n  contracts;\n  /**\n     * Variable para guardar modulos\n     * @type Array\n     */\n  modules;\n  /**\n     * Variable para guardar los entry-points que se usaran en tablas\n     * @type Objeto\n     */\n  frameworkComponents;\n  /**\n  * Constructor\t\n  * @param {ServicesService}\tservicesService Servicio de servicios\n  * @param {MatBottomSheet} _bottomSheet Referencia de modal\n  */\n  constructor(private servicesService: ServicesService,\n    private _bottomSheet: MatBottomSheet) { }\n    /**\n  * Metodo inicial\n  * @example\n  * ngOnInit()\n  * @returns  {void} Sin retorno\n  */\n  async ngOnInit(): Promise {\n    this.frameworkComponents = { contractPicker: MatContractPickerRenderComponent, modulesPicker: MatModulesPickerRenderComponent};\n\n    this.contracts = await this.getAllContracts()\n    this.modules = await this.getAllModules()\n    console.log(this.contracts)\n    console.log(this.modules)\n    this.servicesService.getAllServices().subscribe(data => {\n      this.serviceRowData = data\n      console.log(this.serviceRowData)\n    })\n    \n\n  }\n  /**\n  * Este metodo se utiliza para capturar cambios en la tabla de servicios\n  * @example\n  * changeServiceGridEvent(event)\n  * @param {Object} event\n  * Objeto de tipo evento\n  * @returns {Void} Vacio\n  */\n  changeServiceGridEvent(event){\n\t\n    let rowNode = this.gridApi.getRowNode(event.rowIndex);\n    rowNode.setDataValue('change_status', true);\n    this.saveServiceButtonActive=true; \n    \n    }\n    /**\n  * Este metodo se utiliza para Guardar servicios\n  * @example\n  * saveServices()\n\n  * @returns {Object} Servicios\n  */\n  saveServices(){\n\n    let rowData = [];\n    this.gridApi.forEachNode(node => rowData.push(node.data));\n    let dataToUpload = rowData.filter(rowNode =>{return rowNode.change_status})\n    this.servicesService.saveServices(dataToUpload).subscribe(data2 =>{\n      this.servicesService.getAllServices().subscribe(data => {\n        this.serviceRowData = data\n        \n      })\n    })\n    \n  }\n  /**\n  * Este metodo se utiliza para crear servicios\n  * @example\n  * createService()\n\n  * @returns {Void} Void\n  */\n  createService(){\n    let ref = this._bottomSheet.open(AddServiceModalComponent, {data:{contracts:this.contracts,modules:this.modules}});\n    ref.afterDismissed().subscribe(data1 =>{\n      if(data1.reload){\n        this.servicesService.getAllServices().subscribe(data => {\n          this.serviceRowData = data\n          \n        })\n      }\n    })\n  }\n  /**\n  * Este metodo se utiliza para registrar referencias de las tablas\n  * @example\n  * onGridReady(params)\n  * @param {Object} params\n  * Objeto de tipo params obtenido desde el evento realizado por la accion sobre una tabla\n  * @returns  {void} Vacio\n  */\n  onGridReady(params) {\n    this.gridApi = params.api;\n    this.gridColumnApi = params.columnApi;\n  }\n  /**\n  * Este metodo se utiliza para obtener los Contratos\n  * @example\n  * getAllContracts()\n  * @returns {Promise} Contratos\n  */\n  getAllContracts(){\n\t\treturn new Promise((resolve, reject) =>{\n\t\t\tthis.servicesService.getAllContracts().subscribe(data =>{resolve(data);},err =>{reject(err);})\n\t\t})\n  }\n  /**\n  * Este metodo se utiliza para obtener los Modulos\n  * @example\n  * getAllModules()\n  * @returns {Promise} Modulos\n  */\n  getAllModules(){\n\t\treturn new Promise((resolve, reject) =>{\n\t\t\tthis.servicesService.getAllModules().subscribe(data =>{resolve(data);},err =>{reject(err);})\n\t\t})\n  }\n  /**\n  * Este metodo se utiliza para obtener los Contratos en memoria\n  * @example\n  * contractGetter()\n  * @returns {Object} Contratos\n  */\n  contractGetter(){\n    return this.contracts\n  }\n  /**\n  * Este metodo se utiliza para obtener los modulos en memoria\n  * @example\n  * moduleGetter()\n  * @returns {Object} Modulos\n  */\n  moduleGetter(){\n    return this.modules\n  }\n  /**\n  * Este metodo se utiliza para obtener los contratos para renderizar en tabla\n  * @example\n  * contractGetterFormat()\n  * @returns {String} Contrato\n  */\n  contractGetterFormat(event){\n    let value = this.contracts.filter((v)=>{return v.contId == event.data.contId})\n    return value[0].contName\n  }\n  /**\n  * Este metodo se utiliza para obtener los modulos para renderizar en tabla\n  * @example\n  * moduleGetterFormat()\n  * @returns {String} Modulo\n  */\n  moduleGetterFormat(event){\n    let value = this.modules.filter((v)=>{return v.moduId == event.data.moduId})\n    return value[0].moduName;\n  }\n\n}\n\n    \n\n    \n        \n\n    Guardar\n    Crear Servicio\n    \n            \n\n    \n\n    \n                \n                    ./services.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Leyenda\n            \n            \n                Elemento Html\n            \n            \n                Componente\n            \n            \n                Elemento Html con directiva\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Guardar    Crear Servicio                '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BathroomsComponent', 'selector': 'app-bathrooms'},{'name': 'CommercialComponent', 'selector': 'app-commercial'},{'name': 'InitialViewComponent', 'selector': 'app-initial-view'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MatApprovedPickerRenderComponent', 'selector': 'input-cell'},{'name': 'MatContractPickerRenderComponent', 'selector': 'input-cell'},{'name': 'MatModulesPickerRenderComponent', 'selector': 'input-cell'},{'name': 'MatPermissionsPickerRenderComponent', 'selector': 'input-cell'},{'name': 'MatProfilesPickerRenderComponent', 'selector': 'input-cell'},{'name': 'MatServicesPickerRenderComponent', 'selector': 'input-cell'},{'name': 'MatStatusPickerRenderComponent', 'selector': 'input-cell'},{'name': 'ServicesComponent', 'selector': 'app-services'},{'name': 'UsersComponent', 'selector': 'app-users'},{'name': 'WastesComponent', 'selector': 'app-wastes'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ServicesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"injectables/ServicesService.html":{"url":"injectables/ServicesService.html","title":"injectable - ServicesService","body":"\n                   \n\n\n\n\n\n\n\n\n  Inyectables\n  ServicesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            Fichero\n        \n        \n            src/app/services/services.service.ts\n        \n\n            \n                Descripción\n            \n            \n                Servicio de servicios\nEste servicio se encarga de realizar las peticiones necesarias al backend para obtener todo lo relacionado al modulo de servicios\n\n            \n\n\n\n            \n    Índice\n    \n        \n                \n                    \n                        Propiedades\n                    \n                \n                \n                    \n                        \n                            \n                                baseUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Métodos\n                    \n                \n                \n                    \n                        \n                            \n                                getAllContracts\n                            \n                            \n                                getAllModules\n                            \n                            \n                                getAllServices\n                            \n                            \n                                getServicesData\n                            \n                            \n                                getServicesFiltered\n                            \n                            \n                                saveServices\n                            \n                            \n                                uploadServiceData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Definido en src/app/services/services.service.ts:21\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parámetros :\n                                    \n                                        \n                                            \n                                                Nombre\n                                                    Tipo\n                                                Opcional\n                                                    Descripción\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                cliente http para realizar llamadas\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Métodos\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getAllContracts\n                        \n                        \n                    \n                \n            \n            \n                \ngetAllContracts()\n                \n            \n\n\n            \n                \n                    Definido en src/app/services/services.service.ts:67\n                \n            \n\n\n            \n                \n                    Este metodo se utiliza para obtener los contratos desde backend\n\n\n                    \n                        Ejemplo :\n                        \n                            getAllContracts()\n                        \n                    \n                    \n                        Devuelve :     Observable\n\n                    \n                    \n                        Objeto Json con lista de contratos\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getAllModules\n                        \n                        \n                    \n                \n            \n            \n                \ngetAllModules()\n                \n            \n\n\n            \n                \n                    Definido en src/app/services/services.service.ts:123\n                \n            \n\n\n            \n                \n                    Este metodo se utiliza para obtener los modulos desde el backend\n\n\n                    \n                        Ejemplo :\n                        \n                            getAllModules()\n                        \n                    \n                    \n                        Devuelve :     Observable\n\n                    \n                    \n                        Objeto Json con lista de modulos\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getAllServices\n                        \n                        \n                    \n                \n            \n            \n                \ngetAllServices()\n                \n            \n\n\n            \n                \n                    Definido en src/app/services/services.service.ts:41\n                \n            \n\n\n            \n                \n                    Este metodo se utiliza para obtener los servicios desde backend\n\n\n                    \n                        Ejemplo :\n                        \n                            getAllServices()\n                        \n                    \n                    \n                        Devuelve :     Observable\n\n                    \n                    \n                        Objeto Json con lista de servicios\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getServicesData\n                        \n                        \n                    \n                \n            \n            \n                \ngetServicesData(id)\n                \n            \n\n\n            \n                \n                    Definido en src/app/services/services.service.ts:97\n                \n            \n\n\n            \n                \n                    Este metodo se utiliza para obtener los datos de un servicio especifico\n\n\n                    \n                        Parámetros :\n                        \n                            \n                                \n                                    Nombre\n                                    Opcional\n                                    Descripción\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Id de servicio a consultar\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                        Ejemplo :\n                        \n                            getServicesData(id)\n                        \n                    \n                    \n                        Devuelve :     Observable\n\n                    \n                    \n                        Objeto con estado de peticion\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getServicesFiltered\n                        \n                        \n                    \n                \n            \n            \n                \ngetServicesFiltered(fecha, contId)\n                \n            \n\n\n            \n                \n                    Definido en src/app/services/services.service.ts:112\n                \n            \n\n\n            \n                \n                    Este metodo se utiliza para obtener los servicios segun fecha y contrato\n\n\n                    \n                        Parámetros :\n                        \n                            \n                                \n                                    Nombre\n                                    Opcional\n                                    Descripción\n                                \n                            \n                            \n                                \n                                    fecha\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        fecha a consultar\n\n                                    \n                                \n                                \n                                    contId\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        contrato a consultar\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                        Ejemplo :\n                        \n                            getServicesFiltered(fecha,contId)\n                        \n                    \n                    \n                        Devuelve :     Observable\n\n                    \n                    \n                        Objeto con estado de peticion\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            saveServices\n                        \n                        \n                    \n                \n            \n            \n                \nsaveServices(data)\n                \n            \n\n\n            \n                \n                    Definido en src/app/services/services.service.ts:55\n                \n            \n\n\n            \n                \n                    Este metodo se utiliza para agregar y/o modificar servicios\n\n\n                    \n                        Parámetros :\n                        \n                            \n                                \n                                    Nombre\n                                    Opcional\n                                    Descripción\n                                \n                            \n                            \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        objeto de tipo servicios necesario para modificar o agregar servicio\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                        Ejemplo :\n                        \n                            saveServices(data)\n                        \n                    \n                    \n                        Devuelve :     Observable\n\n                    \n                    \n                        Objeto con estado de peticion\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            uploadServiceData\n                        \n                        \n                    \n                \n            \n            \n                \nuploadServiceData(service, data)\n                \n            \n\n\n            \n                \n                    Definido en src/app/services/services.service.ts:84\n                \n            \n\n\n            \n                \n                    Este metodo se utiliza para agregar un servicio y sus detalles\n\n\n                    \n                        Parámetros :\n                        \n                            \n                                \n                                    Nombre\n                                    Opcional\n                                    Descripción\n                                \n                            \n                            \n                                \n                                    service\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        objeto de tipo servicios necesario para agregar\n\n                                    \n                                \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        objeto de tipo service_data necesario para agregar y asociar al servicio\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                        Ejemplo :\n                        \n                            uploadServiceData(service,data)\n                        \n                    \n                    \n                        Devuelve :     Observable\n\n                    \n                    \n                        Objeto con estado de peticion\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Propiedades\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            baseUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Tipo :         string\n\n                        \n                    \n                        \n                            \n                                    Definido en src/app/services/services.service.ts:21\n                            \n                        \n\n                \n                    \n                        Variable usada para la obtencion de punto de acceso desde variables de entorno\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\n\n\n\n/**\n * Servicio de servicios\n * Este servicio se encarga de realizar las peticiones necesarias al backend para obtener todo lo relacionado al modulo de servicios\n */\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ServicesService {\n  /**\n     * Variable usada para la obtencion de punto de acceso desde variables de entorno\n     * @type string\n     */\n  baseUrl: string;\n\n  /**\n  * Constructor\n  *\n  * @param {HttpClient} http cliente http para realizar llamadas\n  */\n  constructor(private http:HttpClient) {\n\n    this.baseUrl = environment.baseUrl\n  }\n\n\n  /**\n  * Este metodo se utiliza para obtener los servicios desde backend\n  * @example\n  * getAllServices()\n  * @returns  {Promise} Objeto Json con lista de servicios\n  */\n\n  getAllServices(): Observable \n\t{\n\t\treturn this.http.post(this.baseUrl+'getAllServices',{});\n\t}\n\n  /**\n  * Este metodo se utiliza para agregar y/o modificar servicios\n  * @example\n  * saveServices(data)\n  * @param {object} data\n  * objeto de tipo servicios necesario para modificar o agregar servicio\n  * @returns  {Promise} Objeto con estado de peticion\n  */\n\n  saveServices(data): Observable \n\t{\n\t\treturn this.http.post(this.baseUrl+'addService',{data:data});\n\t}\n\n  /**\n  * Este metodo se utiliza para obtener los contratos desde backend\n  * @example\n  * getAllContracts()\n  * @returns  {Promise} Objeto Json con lista de contratos\n  */\n\n  getAllContracts():Observable \n\t{\n    return this.http.post(this.baseUrl+'getAllContracts',{});\n  }\n\n\n  /**\n  * Este metodo se utiliza para agregar un servicio y sus detalles\n  * @example\n  * uploadServiceData(service,data)\n  * @param {object} service\n  * objeto de tipo servicios necesario para agregar\n  * @param {object} data\n  * objeto de tipo service_data necesario para agregar y asociar al servicio\n  * @returns  {Promise} Objeto con estado de peticion\n  */\n\n  uploadServiceData(service,data):Observable {\n    return this.http.post(this.baseUrl+'services/addDataServices',{service:service,data:data});\n  }\n\n  /**\n  * Este metodo se utiliza para obtener los datos de un servicio especifico\n  * @example\n  * getServicesData(id)\n  * @param {string} id\n  * Id de servicio a consultar\n  * @returns  {Promise} Objeto con estado de peticion\n  */\n\n  getServicesData(id):Observable {\n    return this.http.post(this.baseUrl+'getServicesData',{servId:id});\n  }\n\n  /**\n  * Este metodo se utiliza para obtener los servicios segun fecha y contrato\n  * @example\n  * getServicesFiltered(fecha,contId)\n  * @param {string} fecha\n  * fecha a consultar\n  * @param {string} contId\n  * contrato a consultar\n  * @returns  {Promise} Objeto con estado de peticion\n  */\n\n  getServicesFiltered(fecha,contId):Observable {\n    return this.http.post(this.baseUrl+'getServicesFiltered',{fecha:fecha,contId:contId});\n  }\n\n  /**\n  * Este metodo se utiliza para obtener los modulos desde el backend\n  * @example\n  * getAllModules()\n  * @returns  {Promise} Objeto Json con lista de modulos\n  */\n  \n  getAllModules():Observable {\n    return this.http.post(this.baseUrl+'getAllModules',{});\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n  Inyectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            Fichero\n        \n        \n            src/app/services/users.service.ts\n        \n\n            \n                Descripción\n            \n            \n                Servicio de usuarios\nEste servicio se encarga de realizar las peticiones necesarias al backend\n\n            \n\n\n\n            \n    Índice\n    \n        \n                \n                    \n                        Propiedades\n                    \n                \n                \n                    \n                        \n                            \n                                baseUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Métodos\n                    \n                \n                \n                    \n                        \n                            \n                                getAllPermissions\n                            \n                            \n                                getAllProfiles\n                            \n                            \n                                getAllUsers\n                            \n                            \n                                modifyProfiles\n                            \n                            \n                                modifyUsers\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Definido en src/app/services/users.service.ts:21\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parámetros :\n                                    \n                                        \n                                            \n                                                Nombre\n                                                    Tipo\n                                                Opcional\n                                                    Descripción\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                cliente http para realizar llamadas\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Métodos\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getAllPermissions\n                        \n                        \n                    \n                \n            \n            \n                \ngetAllPermissions()\n                \n            \n\n\n            \n                \n                    Definido en src/app/services/users.service.ts:66\n                \n            \n\n\n            \n                \n                    Este metodo se utiliza para obtener los permisos desde backend\n\n\n                    \n                        Ejemplo :\n                        \n                            getAllPermissions()\n                        \n                    \n                    \n                        Devuelve :     Observable\n\n                    \n                    \n                        Objeto Json con lista de permisos\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getAllProfiles\n                        \n                        \n                    \n                \n            \n            \n                \ngetAllProfiles()\n                \n            \n\n\n            \n                \n                    Definido en src/app/services/users.service.ts:53\n                \n            \n\n\n            \n                \n                    Este metodo se utiliza para obtener los perfiles desde backend\n\n\n                    \n                        Ejemplo :\n                        \n                            getAllProfiles()\n                        \n                    \n                    \n                        Devuelve :     Observable\n\n                    \n                    \n                        Objeto Json con lista de perfiles\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getAllUsers\n                        \n                        \n                    \n                \n            \n            \n                \ngetAllUsers()\n                \n            \n\n\n            \n                \n                    Definido en src/app/services/users.service.ts:42\n                \n            \n\n\n            \n                \n                    Este metodo se utiliza para obtener los usuarios desde backend\n\n\n                    \n                        Ejemplo :\n                        \n                            getAllUsers()\n                        \n                    \n                    \n                        Devuelve :     Observable\n\n                    \n                    \n                        Objeto Json con lista de usuarios\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            modifyProfiles\n                        \n                        \n                    \n                \n            \n            \n                \nmodifyProfiles(profiles)\n                \n            \n\n\n            \n                \n                    Definido en src/app/services/users.service.ts:92\n                \n            \n\n\n            \n                \n                    Este metodo se utiliza para agregar y/o modificar perfiles\n\n\n                    \n                        Parámetros :\n                        \n                            \n                                \n                                    Nombre\n                                    Opcional\n                                    Descripción\n                                \n                            \n                            \n                                \n                                    profiles\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Objeto de tipo users que se envia para agregar y/o modificar usuarios\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                        Ejemplo :\n                        \n                            modifyProfiles(profiles)\n                        \n                    \n                    \n                        Devuelve :     Observable\n\n                    \n                    \n                        Objeto Json con estado de peticion\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            modifyUsers\n                        \n                        \n                    \n                \n            \n            \n                \nmodifyUsers(users)\n                \n            \n\n\n            \n                \n                    Definido en src/app/services/users.service.ts:79\n                \n            \n\n\n            \n                \n                    Este metodo se utiliza para agregar y/o modificar usuarios\n\n\n                    \n                        Parámetros :\n                        \n                            \n                                \n                                    Nombre\n                                    Opcional\n                                    Descripción\n                                \n                            \n                            \n                                \n                                    users\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Objeto de tipo users que se envia para agregar y/o modificar usuarios\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                        Ejemplo :\n                        \n                            modifyUsers(users)\n                        \n                    \n                    \n                        Devuelve :     Observable\n\n                    \n                    \n                        Objeto Json con estado de peticion\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Propiedades\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            baseUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Tipo :         string\n\n                        \n                    \n                        \n                            \n                                    Definido en src/app/services/users.service.ts:21\n                            \n                        \n\n                \n                    \n                        Variable usada para la obtencion de punto de acceso desde variables de entorno\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { from, Observable } from \"rxjs\";\n\n\n/**\n * Servicio de usuarios\n * Este servicio se encarga de realizar las peticiones necesarias al backend\n */\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UsersService {\n\t/**\n     * Variable usada para la obtencion de punto de acceso desde variables de entorno\n     * @type string\n     */\n   baseUrl: string;\n\n  /**\n  * Constructor\n  *\n  * @param {HttpClient} http cliente http para realizar llamadas\n  */\n\n  constructor(private http:HttpClient) {\n\t\n\t\n    this.baseUrl = environment.baseUrl\n  }\n\n  /**\n  * Este metodo se utiliza para obtener los usuarios desde backend\n  * @example\n  * getAllUsers()\n  * @returns  {Promise} Objeto Json con lista de usuarios\n  */\n  \n  getAllUsers(): Observable \n\t{\n\t\treturn this.http.get(this.baseUrl+'getAllUsers');\n\t}\n\n\t/**\n\t * Este metodo se utiliza para obtener los perfiles desde backend\n\t * @example\n\t * getAllProfiles()\n\t * @returns  {Promise} Objeto Json con lista de perfiles\n\t */\n  getAllProfiles(): Observable \n\t{\n\t\treturn this.http.post(this.baseUrl+'profileslist',{});\n\t}\n\n\t/**\n  * Este metodo se utiliza para obtener los permisos desde backend\n  * \n  * @example\n  * getAllPermissions()\n  * @returns  {Promise} Objeto Json con lista de permisos\n  */\n\n  getAllPermissions(): Observable \n\t{\n\t\treturn this.http.post(this.baseUrl+'permissionsList',{});\n\t}\n\n\t/**\n  * Este metodo se utiliza para agregar y/o modificar usuarios\n  * @param {object} users\n  * Objeto de tipo users que se envia para agregar y/o modificar usuarios\n  * @example\n  * modifyUsers(users)\n  * @returns  {Promise} Objeto Json con estado de peticion\n  */\n  modifyUsers(users):Observable \n\t{\n\t\treturn this.http.post(this.baseUrl+'addUser',{data:users});\n\t}\n\n\t/**\n  * Este metodo se utiliza para agregar y/o modificar perfiles\n  * @param {object} profiles\n  * Objeto de tipo users que se envia para agregar y/o modificar usuarios\n  * @example\n  * modifyProfiles(profiles)\n  * @returns  {Promise} Objeto Json con estado de peticion\n  */\n  modifyProfiles(profiles):Observable \n\t{\n\t\treturn this.http.post(this.baseUrl+'profiles/modify',{data:profiles});\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"components/WastesComponent.html":{"url":"components/WastesComponent.html","title":"component - WastesComponent","body":"\n                   \n\n\n\n\n\n  Componentes\n  WastesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    Fichero\n\n\n    src/app/components/wastes/wastes.component.ts\n\n\n    \n        Descripción\n    \n    \n        Componente de residuos\nEste componente es el encargado de mostrar y ejecutar todo lo relacionado al modulo de residuos\n\n    \n\n\n    \n        Implementa\n    \n    \n                    OnInit\n    \n\n\n\n    Meta datos\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-wastes\n            \n\n            \n                styleUrls\n                ./wastes.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./wastes.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Índice\n    \n        \n                \n                    \n                        Propiedades\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                barChartData\n                            \n                            \n                                    Public\n                                barChartLabels\n                            \n                            \n                                    Public\n                                barChartLegend\n                            \n                            \n                                    Public\n                                barChartOptions\n                            \n                            \n                                    Public\n                                barChartType\n                            \n                            \n                                defaultColDef\n                            \n                            \n                                frameworkComponents\n                            \n                            \n                                gridApi\n                            \n                            \n                                gridColumnApi\n                            \n                            \n                                selectedWasteMetric\n                            \n                            \n                                servColumnsDefs\n                            \n                            \n                                serviceRowData\n                            \n                            \n                                userColumnsDefs\n                            \n                            \n                                userRowData\n                            \n                            \n                                wasteConvertMetrics\n                            \n                        \n                    \n                \n\n                \n                    \n                        Métodos\n                    \n                \n                \n                    \n                        \n                            \n                                abValueGetter\n                            \n                            \n                                filtrar\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onGridReady\n                            \n                            \n                                openFileUpload\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_bottomSheet: MatBottomSheet)\n                    \n                \n                        \n                            \n                                Definido en src/app/components/wastes/wastes.component.ts:59\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parámetros :\n                                    \n                                        \n                                            \n                                                Nombre\n                                                    Tipo\n                                                Opcional\n                                                    Descripción\n                                            \n                                        \n                                        \n                                                \n                                                        _bottomSheet\n                                                  \n                                                        \n                                                                    MatBottomSheet\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Referencia de modal\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Métodos\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            abValueGetter\n                        \n                        \n                    \n                \n            \n            \n                \nabValueGetter(params)\n                \n            \n\n\n            \n                \n                    Definido en src/app/components/wastes/wastes.component.ts:164\n                \n            \n\n\n            \n                \n                    Este metodo se utiliza para realizar la conversion de medida\n\n\n                    \n                        Parámetros :\n                        \n                            \n                                \n                                    Nombre\n                                    Opcional\n                                    Descripción\n                                \n                            \n                            \n                                \n                                    params\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Objeto de tipo params obtenido desde el evento realizado por la accion sobre una tabla\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                        Ejemplo :\n                        \n                            abValueGetter(params)\n                        \n                    \n                    \n                        Devuelve :         number\n\n                    \n                    \n                        Valor convertido\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            filtrar\n                        \n                        \n                    \n                \n            \n            \n                \nfiltrar()\n                \n            \n\n\n            \n                \n                    Definido en src/app/components/wastes/wastes.component.ts:212\n                \n            \n\n\n            \n                \n                    Este metodo se utiliza para filtrar tabla\n\n\n                    \n                        Ejemplo :\n                        \n                            filtrar()\n                        \n                    \n                    \n                        Devuelve :         void\n\n                    \n                    \n                        Vacio\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Definido en src/app/components/wastes/wastes.component.ts:149\n                \n            \n\n\n            \n                \n                    Metodo inicial\n\n\n                    \n                        Ejemplo :\n                        \n                            ngOnInit()\n                        \n                    \n                    \n                        Devuelve :         void\n\n                    \n                    \n                        Sin retorno\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onGridReady\n                        \n                        \n                    \n                \n            \n            \n                \nonGridReady(params)\n                \n            \n\n\n            \n                \n                    Definido en src/app/components/wastes/wastes.component.ts:178\n                \n            \n\n\n            \n                \n                    Este metodo se utiliza para registrar referencias de las tablas\n\n\n                    \n                        Parámetros :\n                        \n                            \n                                \n                                    Nombre\n                                    Opcional\n                                    Descripción\n                                \n                            \n                            \n                                \n                                    params\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Objeto de tipo params obtenido desde el evento realizado por la accion sobre una tabla\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                        Ejemplo :\n                        \n                            onGridReady(params)\n                        \n                    \n                    \n                        Devuelve :         void\n\n                    \n                    \n                        Vacio\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openFileUpload\n                        \n                        \n                    \n                \n            \n            \n                \nopenFileUpload()\n                \n            \n\n\n            \n                \n                    Definido en src/app/components/wastes/wastes.component.ts:192\n                \n            \n\n\n            \n                \n                    Este metodo se utiliza para abrir modal referente a carga de archivos y manejar cuando este es cerrado\n\n\n                    \n                        Ejemplo :\n                        \n                            openFileUpload()\n                        \n                    \n                    \n                        Devuelve :         void\n\n                    \n                    \n                        Vacio\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Propiedades\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            barChartData\n                            \n                        \n                    \n                \n                    \n                        \n                            Tipo :     []\n\n                        \n                    \n                    \n                        \n                            Valor por defecto : [\n    {data: [65,85,45,74,83,71],label: 'Serie A' },\n    {data: [23,54,34,33,25,19],label: 'Serie B' },\n  ]\n                        \n                    \n                        \n                            \n                                    Definido en src/app/components/wastes/wastes.component.ts:56\n                            \n                        \n\n                \n                    \n                        Variable para guardar los datos a mostrar\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            barChartLabels\n                            \n                        \n                    \n                \n                    \n                        \n                            Tipo :     []\n\n                        \n                    \n                    \n                        \n                            Valor por defecto : ['2006','2007','2008','2009','2010','2011']\n                        \n                    \n                        \n                            \n                                    Definido en src/app/components/wastes/wastes.component.ts:41\n                            \n                        \n\n                \n                    \n                        Variable para guardar etiquetas de graficas\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            barChartLegend\n                            \n                        \n                    \n                \n                    \n                        \n                            Valor por defecto : true\n                        \n                    \n                        \n                            \n                                    Definido en src/app/components/wastes/wastes.component.ts:51\n                            \n                        \n\n                \n                    \n                        Variable para indicar si se muestra o no una legenda\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            barChartOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Tipo :         object\n\n                        \n                    \n                    \n                        \n                            Valor por defecto : {\n    scaleShowVerticalLines : false,\n    responsive: true\n  }\n                        \n                    \n                        \n                            \n                                    Definido en src/app/components/wastes/wastes.component.ts:33\n                            \n                        \n\n                \n                    \n                        Variable para guardar opciones de graficas\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            barChartType\n                            \n                        \n                    \n                \n                    \n                        \n                            Tipo :         string\n\n                        \n                    \n                    \n                        \n                            Valor por defecto : 'bar'\n                        \n                    \n                        \n                            \n                                    Definido en src/app/components/wastes/wastes.component.ts:46\n                            \n                        \n\n                \n                    \n                        Variable para guardar color de grafica\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            defaultColDef\n                            \n                        \n                    \n                \n                    \n                        \n                            Tipo :         object\n\n                        \n                    \n                    \n                        \n                            Valor por defecto : {\n\t\t// make every column editable\n\t\teditable: true,\n\t\t// make every column use 'text' filter by default\n\t\tfilter: 'agTextColumnFilter',\n\t}\n                        \n                    \n                        \n                            \n                                    Definido en src/app/components/wastes/wastes.component.ts:87\n                            \n                        \n\n                \n                    \n                        Variable para definir opciones por defecto de tablas\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            frameworkComponents\n                            \n                        \n                    \n                \n                        \n                            \n                                    Definido en src/app/components/wastes/wastes.component.ts:99\n                            \n                        \n\n                \n                    \n                        Variable para guardar los entry-points que se usaran en tablas\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            gridApi\n                            \n                        \n                    \n                \n                    \n                        \n                            Tipo :         any\n\n                        \n                    \n                        \n                            \n                                    Definido en src/app/components/wastes/wastes.component.ts:23\n                            \n                        \n\n                \n                    \n                        Variable para guardar referencia de columna de servicios\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            gridColumnApi\n                            \n                        \n                    \n                \n                    \n                        \n                            Tipo :         any\n\n                        \n                    \n                        \n                            \n                                    Definido en src/app/components/wastes/wastes.component.ts:28\n                            \n                        \n\n                \n                    \n                        Variable para guardar referencia de columna de detalles\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedWasteMetric\n                            \n                        \n                    \n                \n                        \n                            \n                                    Definido en src/app/components/wastes/wastes.component.ts:82\n                            \n                        \n\n                \n                    \n                        Variable para guardar opciones de metricas seleccionada\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            servColumnsDefs\n                            \n                        \n                    \n                \n                    \n                        \n                            Tipo :     []\n\n                        \n                    \n                    \n                        \n                            Valor por defecto : [\n\t\t{headerName: 'Usuario', field: 'user_name',\n        editable: true,\n        width: 300, },\n\t\t{headerName: 'Rut', field: 'user_code' },\n\t\t{headerName: 'Estado', field: 'user_status'}\n\t]\n                        \n                    \n                        \n                            \n                                    Definido en src/app/components/wastes/wastes.component.ts:117\n                            \n                        \n\n                \n                    \n                        Variable para definir las columnas de los datos\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            serviceRowData\n                            \n                        \n                    \n                \n                    \n                        \n                            Tipo :     []\n\n                        \n                    \n                    \n                        \n                            Valor por defecto : [{ user_name: 'Usuario1', user_code: '123-3', user_status: \"ACTIVO\"}]\n                        \n                    \n                        \n                            \n                                    Definido en src/app/components/wastes/wastes.component.ts:130\n                            \n                        \n\n                \n                    \n                        Variable para guardar datos de los servicios\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userColumnsDefs\n                            \n                        \n                    \n                \n                    \n                        \n                            Tipo :     []\n\n                        \n                    \n                    \n                        \n                            Valor por defecto : [\n\t\t{headerName: 'Usuario', field: 'user_name',\n        editable: true,\n        width: 300, },\n\t\t{headerName: 'Rut', field: 'user_code' },\n\t\t{headerName: 'Estado', field: 'user_status'},\n    {headerName: 'Toneladas', field: 'ton', valueGetter:this.abValueGetter.bind(this)}\n\t]\n                        \n                    \n                        \n                            \n                                    Definido en src/app/components/wastes/wastes.component.ts:104\n                            \n                        \n\n                \n                    \n                        Variable para definir las columnas de los servicios\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userRowData\n                            \n                        \n                    \n                \n                    \n                        \n                            Tipo :     []\n\n                        \n                    \n                    \n                        \n                            Valor por defecto : [\n\t\t{ user_name: 'Usuario1', user_code: '123-3', user_status: \"ACTIVO\", ton:\"29000\"},\n\t\t{ user_name: 'Usuario2', user_code: '123-3', user_status: \"ACTIVO\", ton:\"29000\"},\n\t\t{ user_name: 'Usuario3', user_code: '123-3', user_status: \"ACTIVO\", ton:\"29000\"}\n\t]\n                        \n                    \n                        \n                            \n                                    Definido en src/app/components/wastes/wastes.component.ts:136\n                            \n                        \n\n                \n                    \n                        Variable para guardar datos de los usuarios\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            wasteConvertMetrics\n                            \n                        \n                    \n                \n                    \n                        \n                            Tipo :     []\n\n                        \n                    \n                    \n                        \n                            Valor por defecto : [\n    {value: 1, viewValue: 'kilogramos'},\n    {value: 1000, viewValue: 'Toneladas'}\n  ]\n                        \n                    \n                        \n                            \n                                    Definido en src/app/components/wastes/wastes.component.ts:73\n                            \n                        \n\n                \n                    \n                        Variable para guardar opciones de metricas\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { MatProfilesPickerRenderComponent } from '../utils/mat-profiles-picker-render/mat-profiles-picker-render.component';\nimport {Chart} from 'node_modules/chart.js';\nimport { WasteUploadComponent } from 'src/app/botoom-sheet/waste-upload/waste-upload.component';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\n\n/**\n * Componente de residuos\n * Este componente es el encargado de mostrar y ejecutar todo lo relacionado al modulo de residuos\n */\n\n\n@Component({\n  selector: 'app-wastes',\n  templateUrl: './wastes.component.html',\n  styleUrls: ['./wastes.component.scss']\n})\nexport class WastesComponent implements OnInit {\n  /**\n     * Variable para guardar referencia de columna de servicios\n     * @type Object\n     */\n  gridApi: any;\n  /**\n     * Variable para guardar referencia de columna de detalles\n     * @type Object\n     */\n  gridColumnApi: any;\n  /**\n     * Variable para guardar opciones de graficas\n     * @type Object\n     */\n  public barChartOptions = {\n    scaleShowVerticalLines : false,\n    responsive: true\n  }\n  /**\n     * Variable para guardar etiquetas de graficas\n     * @type Array\n     */\n  public barChartLabels = ['2006','2007','2008','2009','2010','2011'];\n  /**\n     * Variable para guardar color de grafica\n     * @type string\n     */\n  public barChartType = 'bar';\n  /**\n     * Variable para indicar si se muestra o no una legenda\n     * @type bool\n     */\n  public barChartLegend = true;\n   /**\n     * Variable para guardar los datos a mostrar\n     * @type Object\n     */\n  public barChartData = [\n    {data: [65,85,45,74,83,71],label: 'Serie A' },\n    {data: [23,54,34,33,25,19],label: 'Serie B' },\n  ] ;\n\n\n  /**\n  * Constructor\n  *\n  * @param {MatBottomSheet} _bottomSheet Referencia de modal\n  */\n  constructor(private _bottomSheet: MatBottomSheet) { }\n\n  /**\n     * Variable para guardar opciones de metricas\n     * @type Object\n     */\n  wasteConvertMetrics = [\n    {value: 1, viewValue: 'kilogramos'},\n    {value: 1000, viewValue: 'Toneladas'}\n  ];\n  \n  /**\n     * Variable para guardar opciones de metricas seleccionada\n     * @type Bool\n     */\n  selectedWasteMetric;\n  /**\n     * Variable para definir opciones por defecto de tablas\n     * @type Objeto\n     */\n  defaultColDef = {\n\t\t// make every column editable\n\t\teditable: true,\n\t\t// make every column use 'text' filter by default\n\t\tfilter: 'agTextColumnFilter',\n\t};\n\n\n  /**\n     * Variable para guardar los entry-points que se usaran en tablas\n     * @type Objeto\n     */\n  frameworkComponents;\n  /**\n     * Variable para definir las columnas de los servicios\n     * @type Objeto\n     */\n  userColumnsDefs = [\n\t\t{headerName: 'Usuario', field: 'user_name',\n        editable: true,\n        width: 300, },\n\t\t{headerName: 'Rut', field: 'user_code' },\n\t\t{headerName: 'Estado', field: 'user_status'},\n    {headerName: 'Toneladas', field: 'ton', valueGetter:this.abValueGetter.bind(this)}\n\t];\n\n  /**\n     * Variable para definir las columnas de los datos\n     * @type Objeto\n     */\n  servColumnsDefs = [\n\t\t{headerName: 'Usuario', field: 'user_name',\n        editable: true,\n        width: 300, },\n\t\t{headerName: 'Rut', field: 'user_code' },\n\t\t{headerName: 'Estado', field: 'user_status'}\n\t];\n\n\n  /**\n     * Variable para guardar datos de los servicios\n     * @type Objeto\n     */\n  serviceRowData = [{ user_name: 'Usuario1', user_code: '123-3', user_status: \"ACTIVO\"}]\n\n  /**\n     * Variable para guardar datos de los usuarios\n     * @type Objeto\n     */\n  userRowData = [\n\t\t{ user_name: 'Usuario1', user_code: '123-3', user_status: \"ACTIVO\", ton:\"29000\"},\n\t\t{ user_name: 'Usuario2', user_code: '123-3', user_status: \"ACTIVO\", ton:\"29000\"},\n\t\t{ user_name: 'Usuario3', user_code: '123-3', user_status: \"ACTIVO\", ton:\"29000\"}\n\t];\n\n  /**\n  * Metodo inicial\n  * @example\n  * ngOnInit()\n  * @returns  {void} Sin retorno\n  */\n\n  ngOnInit(): void {\n\n    this.selectedWasteMetric = 1\n    \n  }\n\n  /**\n  * Este metodo se utiliza para realizar la conversion de medida\n  * @example\n  * abValueGetter(params)\n  * @param {Object} params\n  * Objeto de tipo params obtenido desde el evento realizado por la accion sobre una tabla\n  * @returns  {String} Valor convertido\n  */\n\n  abValueGetter(params) {\n  \n    return params.data.ton/this.selectedWasteMetric;\n  }\n\n  /**\n  * Este metodo se utiliza para registrar referencias de las tablas\n  * @example\n  * onGridReady(params)\n  * @param {Object} params\n  * Objeto de tipo params obtenido desde el evento realizado por la accion sobre una tabla\n  * @returns  {void} Vacio\n  */\n\n  onGridReady(params) {\n    this.gridApi = params.api;\n    this.gridColumnApi = params.columnApi;\n\n    \n  }\n\n  /**\n  * Este metodo se utiliza para abrir modal referente a carga de archivos y manejar cuando este es cerrado\n  * @example\n  * openFileUpload()\n  * @returns  {void} Vacio\n  */\n\n  openFileUpload(){\n    let ref = this._bottomSheet.open(WasteUploadComponent,{disableClose:true, data: {}, panelClass: 'custom-width' });\n    ref.afterDismissed().subscribe( async (dataFromChild) => {\n      console.log(dataFromChild)\n      this.serviceRowData = dataFromChild.serviceRow;\n      this.userRowData = dataFromChild.userRow;\n      var params = {\n        force: true\n      };\n      this.gridApi.refreshCells(params)\n    })\n  }\n\n\n  /**\n  * Este metodo se utiliza para filtrar tabla\n  * @example\n  * filtrar()\n  * @returns  {void} Vacio\n  */\n  filtrar(){\n    var params = {\n      force: true\n    };\n    this.gridApi.refreshCells(params);\n  }\n}\n\n    \n\n    \n        \n    \n        \n            Subir Archivo\n            Filtros\n            \n                \n                    \n                        \n                            Fecha\n                            \n                            \n                            \n                        \n                        \n                            Servicio\n                            \n                        \n                        \n                            Favorite food\n                            \n                              \n                                {{wasteM.viewValue}}\n                              \n                            \n                          \n                    \n                \n                Filtrar\n                \n            \n            Servicio\n            \n            \n            \n            Servicios\n            \n            \n        \n\n        \n            Filtros\n            \n                \n                    \n                        \n                            Fecha\n                            \n                            \n                            \n                        \n                        \n                            Servicio\n                            \n                        \n                        \n                            Favorite food\n                            \n                              \n                                {{wasteM.viewValue}}\n                              \n                            \n                          \n                    \n                \n                Filtrar\n            \n            \n            Métricas de los Residuos\n                \n             -->\n        \n\n    \n\n\n    \n\n    \n                \n                    ./wastes.component.scss\n                \n                .divisor{\n    background-color: #3e3e42cc;\n    width: 90%;\n    height: 3px;\n    padding:0;\n    margin-left: 3.4vw;\n}\n\n.filter-wrapper{\n    width:20vw;\n}\n    \n\n    \n        \n        \n            \n                Leyenda\n            \n            \n                Elemento Html\n            \n            \n                Componente\n            \n            \n                Elemento Html con directiva\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        Subir Archivo            Filtros                                                                                                    Fecha                                                                                                                                                                Servicio                                                                                                        Favorite food                                                                                          {{wasteM.viewValue}}                                                                                                                                        Filtrar                                        Servicio                                                Servicios                                                    Filtros                                                                                                    Fecha                                                                                                                                                                Servicio                                                                                                        Favorite food                                                                                          {{wasteM.viewValue}}                                                                                                                                        Filtrar                                    Métricas de los Residuos                             -->            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BathroomsComponent', 'selector': 'app-bathrooms'},{'name': 'CommercialComponent', 'selector': 'app-commercial'},{'name': 'InitialViewComponent', 'selector': 'app-initial-view'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MatApprovedPickerRenderComponent', 'selector': 'input-cell'},{'name': 'MatContractPickerRenderComponent', 'selector': 'input-cell'},{'name': 'MatModulesPickerRenderComponent', 'selector': 'input-cell'},{'name': 'MatPermissionsPickerRenderComponent', 'selector': 'input-cell'},{'name': 'MatProfilesPickerRenderComponent', 'selector': 'input-cell'},{'name': 'MatServicesPickerRenderComponent', 'selector': 'input-cell'},{'name': 'MatStatusPickerRenderComponent', 'selector': 'input-cell'},{'name': 'ServicesComponent', 'selector': 'app-services'},{'name': 'UsersComponent', 'selector': 'app-users'},{'name': 'WastesComponent', 'selector': 'app-wastes'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'WastesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Cobertura de la documentación\n\n\n\n    \n\n\n\n    \n        \n            Fichero\n            Tipo\n            Identificador\n            Declaraciones\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/components/bathrooms/bathrooms.component.ts\n            \n            component\n            BathroomsComponent\n            \n                100 %\n                (35/35)\n            \n        \n        \n            \n                \n                src/app/components/commercial/commercial.component.ts\n            \n            component\n            CommercialComponent\n            \n                100 %\n                (27/27)\n            \n        \n        \n            \n                \n                src/app/components/initial-view/initial-view.component.ts\n            \n            component\n            InitialViewComponent\n            \n                100 %\n                (11/11)\n            \n        \n        \n            \n                \n                src/app/components/login/login.component.ts\n            \n            component\n            LoginComponent\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                src/app/components/login/login.component.ts\n            \n            class\n            EmailErrorStateMatcher\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/components/login/login.component.ts\n            \n            class\n            PasswordErrorStateMatcher\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/components/services/services.component.ts\n            \n            component\n            ServicesComponent\n            \n                100 %\n                (21/21)\n            \n        \n        \n            \n                \n                src/app/components/users/users.component.ts\n            \n            component\n            UsersComponent\n            \n                100 %\n                (38/38)\n            \n        \n        \n            \n                \n                src/app/components/utils/mat-approved-picker-render/mat-approved-picker-render.component.ts\n            \n            component\n            MatApprovedPickerRenderComponent\n            \n                100 %\n                (15/15)\n            \n        \n        \n            \n                \n                src/app/components/utils/mat-contract-picker-render/mat-contract-picker-render.component.ts\n            \n            component\n            MatContractPickerRenderComponent\n            \n                94 %\n                (16/17)\n            \n        \n        \n            \n                \n                src/app/components/utils/mat-modules-picker-render/mat-service-modules-render.component.ts\n            \n            component\n            MatModulesPickerRenderComponent\n            \n                100 %\n                (16/16)\n            \n        \n        \n            \n                \n                src/app/components/utils/mat-permissions-picker-render/mat-permissions-picker-render.component.ts\n            \n            component\n            MatPermissionsPickerRenderComponent\n            \n                100 %\n                (14/14)\n            \n        \n        \n            \n                \n                src/app/components/utils/mat-profiles-picker-render/mat-profiles-picker-render.component.ts\n            \n            component\n            MatProfilesPickerRenderComponent\n            \n                100 %\n                (14/14)\n            \n        \n        \n            \n                \n                src/app/components/utils/mat-service-picker-render/mat-service-picker-render.component.ts\n            \n            component\n            MatServicesPickerRenderComponent\n            \n                93 %\n                (15/16)\n            \n        \n        \n            \n                \n                src/app/components/utils/mat-status-picker-render/mat-status-picker-render.component.ts\n            \n            component\n            MatStatusPickerRenderComponent\n            \n                93 %\n                (14/15)\n            \n        \n        \n            \n                \n                src/app/components/wastes/wastes.component.ts\n            \n            component\n            WastesComponent\n            \n                100 %\n                (22/22)\n            \n        \n        \n            \n                \n                src/app/services/auth-interceptor.ts\n            \n            interceptor\n            AuthInterceptor\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/services/login.service.ts\n            \n            injectable\n            LoginService\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/services/services.service.ts\n            \n            injectable\n            ServicesService\n            \n                100 %\n                (10/10)\n            \n        \n        \n            \n                \n                src/app/services/users.service.ts\n            \n            injectable\n            UsersService\n            \n                100 %\n                (8/8)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencias\n    \n    \n        \n            @angular/animations : ~11.0.4\n        \n            @angular/cdk : ^11.2.13\n        \n            @angular/common : ~11.0.4\n        \n            @angular/compiler : ~11.0.4\n        \n            @angular/core : ~11.0.4\n        \n            @angular/flex-layout : ^12.0.0-beta.34\n        \n            @angular/forms : ~11.0.4\n        \n            @angular/material : ^11.2.13\n        \n            @angular/platform-browser : ~11.0.4\n        \n            @angular/platform-browser-dynamic : ~11.0.4\n        \n            @angular/router : ~11.0.4\n        \n            ag-grid-angular : ^25.3.0\n        \n            ag-grid-community : ^25.3.0\n        \n            bootstrap : ^5.0.1\n        \n            chart.js : ^3.3.2\n        \n            moment : ^2.29.1\n        \n            rxjs : ~6.6.0\n        \n            tslib : ^2.0.0\n        \n            xlsx : ^0.17.0\n        \n            zone.js : ~0.10.2\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nSarmFrontend\nThis project was generated with Angular CLI version 11.0.4.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Módulos\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Tu navegador no soporta SVG\n                                    \n                                \n                        \n                            Navegar\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No hay gráfica disponible.\n                                \n                        \n                            Navegar\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Descripción general\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nBathroomsComponent\n\nBathroomsComponent\n\nAppModule -->\n\nBathroomsComponent->AppModule\n\n\n\n\n\nCommercialComponent\n\nCommercialComponent\n\nAppModule -->\n\nCommercialComponent->AppModule\n\n\n\n\n\nInitialViewComponent\n\nInitialViewComponent\n\nAppModule -->\n\nInitialViewComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nMatApprovedPickerRenderComponent\n\nMatApprovedPickerRenderComponent\n\nAppModule -->\n\nMatApprovedPickerRenderComponent->AppModule\n\n\n\n\n\nMatContractPickerRenderComponent\n\nMatContractPickerRenderComponent\n\nAppModule -->\n\nMatContractPickerRenderComponent->AppModule\n\n\n\n\n\nMatModulesPickerRenderComponent\n\nMatModulesPickerRenderComponent\n\nAppModule -->\n\nMatModulesPickerRenderComponent->AppModule\n\n\n\n\n\nMatPermissionsPickerRenderComponent\n\nMatPermissionsPickerRenderComponent\n\nAppModule -->\n\nMatPermissionsPickerRenderComponent->AppModule\n\n\n\n\n\nMatProfilesPickerRenderComponent\n\nMatProfilesPickerRenderComponent\n\nAppModule -->\n\nMatProfilesPickerRenderComponent->AppModule\n\n\n\n\n\nMatServicesPickerRenderComponent\n\nMatServicesPickerRenderComponent\n\nAppModule -->\n\nMatServicesPickerRenderComponent->AppModule\n\n\n\n\n\nMatStatusPickerRenderComponent\n\nMatStatusPickerRenderComponent\n\nAppModule -->\n\nMatStatusPickerRenderComponent->AppModule\n\n\n\n\n\nServicesComponent\n\nServicesComponent\n\nAppModule -->\n\nServicesComponent->AppModule\n\n\n\n\n\nUsersComponent\n\nUsersComponent\n\nAppModule -->\n\nUsersComponent->AppModule\n\n\n\n\n\nWastesComponent\n\nWastesComponent\n\nAppModule -->\n\nWastesComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nAuthInterceptor\n\nAuthInterceptor\n\nAppModule -->\n\nAuthInterceptor->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Ampliar\n        Restablecer\n        Alejar\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Módulos\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    15 Componentes\n                \n            \n        \n        \n            \n                \n                    \n                    3 Inyectables\n                \n            \n        \n        \n            \n                \n                    \n                    2 Clases\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        0 \n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Rutas\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No hay resultados que coincidan \"\"\n    \n\n"}}
}
